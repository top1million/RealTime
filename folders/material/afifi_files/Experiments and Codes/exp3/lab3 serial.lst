

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat Apr 02 17:04:29 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 16 "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments
                                  and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 16 "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments
                                  and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
    45  2007  FF7A               	dw 0xFFFF & 0xFFFB & 0xFF7F & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_DelaySec
    47                           	FNCALL	_main,_lcd_init
    48                           	FNCALL	_main,_lcd_clear
    49                           	FNCALL	_main,_lcd_puts
    50                           	FNCALL	_main,_DelayMs
    51                           	FNCALL	_main,_init_a2d
    52                           	FNCALL	_main,_lcd_goto
    53                           	FNCALL	_main,_read_a2d
    54                           	FNCALL	_main,___ftdiv
    55                           	FNCALL	_main,_ftoa
    56                           	FNCALL	_main,___ftge
    57                           	FNCALL	_main,_putchOnSerial
    58                           	FNCALL	_main,_getch
    59                           	FNCALL	_ftoa,___fttol
    60                           	FNCALL	_ftoa,___awtoft
    61                           	FNCALL	_ftoa,___ftneg
    62                           	FNCALL	_ftoa,___ftadd
    63                           	FNCALL	_ftoa,_intToStr
    64                           	FNCALL	_ftoa,_pow
    65                           	FNCALL	_ftoa,___ftmul
    66                           	FNCALL	_pow,___ftge
    67                           	FNCALL	_pow,___fttol
    68                           	FNCALL	_pow,___lltoft
    69                           	FNCALL	_pow,___ftneg
    70                           	FNCALL	_pow,_log
    71                           	FNCALL	_pow,___ftmul
    72                           	FNCALL	_pow,_exp
    73                           	FNCALL	_exp,___ftge
    74                           	FNCALL	_exp,___ftneg
    75                           	FNCALL	_exp,___ftmul
    76                           	FNCALL	_exp,_floor
    77                           	FNCALL	_exp,___fttol
    78                           	FNCALL	_exp,___awtoft
    79                           	FNCALL	_exp,___ftsub
    80                           	FNCALL	_exp,_eval_poly
    81                           	FNCALL	_exp,_ldexp
    82                           	FNCALL	_exp,___ftdiv
    83                           	FNCALL	_log,___ftge
    84                           	FNCALL	_log,_frexp
    85                           	FNCALL	_log,___ftmul
    86                           	FNCALL	_log,___ftadd
    87                           	FNCALL	_log,_eval_poly
    88                           	FNCALL	_log,___awtoft
    89                           	FNCALL	_eval_poly,___bmul
    90                           	FNCALL	_eval_poly,___ftmul
    91                           	FNCALL	_eval_poly,___ftadd
    92                           	FNCALL	_floor,_frexp
    93                           	FNCALL	_floor,___ftge
    94                           	FNCALL	_floor,___fttol
    95                           	FNCALL	_floor,___altoft
    96                           	FNCALL	_floor,___ftadd
    97                           	FNCALL	___ftsub,___ftadd
    98                           	FNCALL	_read_a2d,_DelayMs
    99                           	FNCALL	_read_a2d,___lbtoft
   100                           	FNCALL	_ldexp,___ftge
   101                           	FNCALL	_ldexp,___ftneg
   102                           	FNCALL	___lltoft,___ftpack
   103                           	FNCALL	___altoft,___ftpack
   104                           	FNCALL	___awtoft,___ftpack
   105                           	FNCALL	___lbtoft,___ftpack
   106                           	FNCALL	___ftmul,___ftpack
   107                           	FNCALL	___ftdiv,___ftpack
   108                           	FNCALL	___ftadd,___ftpack
   109                           	FNCALL	_DelaySec,_DelayMs
   110                           	FNCALL	_intToStr,___awmod
   111                           	FNCALL	_intToStr,___awdiv
   112                           	FNCALL	_intToStr,_reverse
   113                           	FNCALL	_lcd_init,_DelayMs
   114                           	FNCALL	_lcd_init,_lcd_write
   115                           	FNCALL	_lcd_goto,_lcd_write
   116                           	FNCALL	_lcd_puts,_lcd_write
   117                           	FNCALL	_lcd_clear,_lcd_write
   118                           	FNCALL	_lcd_clear,_DelayMs
   119                           	FNROOT	_main
   120                           	global	_send
   121                           psect	idataBANK1,class=CODE,space=0,delta=2
   122                           global __pidataBANK1
   123  0009                     __pidataBANK1:
   124                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
   125                           	line	24
   126                           
   127                           ;initializer for _send
   128  0009  3401               	retlw	01h
   129  000A  3400               	retlw	0
   130                           
   131                           	global	exp@coeff
   132                           psect	strings,class=STRING,delta=2
   133                           global __pstrings
   134  0800                     __pstrings:
   135                           ;	global	stringdir,stringtab,__stringbase
   136  0800                     stringtab:
   137                           ;	String table - string pointers are 1 byte each
   138  0800  1BFF               	btfsc	(btemp+1),7
   139  0801  280A               	ljmp	stringcode
   140  0802  1383               	bcf	status,7
   141  0803  187F               	btfsc	(btemp+1),0
   142  0804  1783               	bsf	status,7
   143  0805  0800               	movf	indf,w
   144  0806  0A84               	incf fsr
   145  0807  1903               skipnz
   146  0808  0AFF               incf btemp+1
   147  0809  0008               	return
   148  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   149  080A  3008               movlw high(stringdir)
   150  080B  008A               movwf pclath
   151  080C  0804               movf fsr,w
   152  080D  0A84               incf fsr
   153  080E  0782               	addwf pc
   154  080F                     __stringbase:
   155  080F  3400               	retlw	0
   156                           psect	strings
   157                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\exp.c"
   158                           	line	17
   159  0810                     exp@coeff:
   160  0810  3400               	retlw	0x0
   161  0811  3480               	retlw	0x80
   162  0812  343F               	retlw	0x3f
   163                           
   164  0813  3472               	retlw	0x72
   165  0814  3431               	retlw	0x31
   166  0815  343F               	retlw	0x3f
   167                           
   168  0816  34FE               	retlw	0xfe
   169  0817  3475               	retlw	0x75
   170  0818  343E               	retlw	0x3e
   171                           
   172  0819  3458               	retlw	0x58
   173  081A  3463               	retlw	0x63
   174  081B  343D               	retlw	0x3d
   175                           
   176  081C  3495               	retlw	0x95
   177  081D  341D               	retlw	0x1d
   178  081E  343C               	retlw	0x3c
   179                           
   180  081F  34C5               	retlw	0xc5
   181  0820  34AE               	retlw	0xae
   182  0821  343A               	retlw	0x3a
   183                           
   184  0822  3479               	retlw	0x79
   185  0823  3421               	retlw	0x21
   186  0824  3439               	retlw	0x39
   187                           
   188  0825  3494               	retlw	0x94
   189  0826  3480               	retlw	0x80
   190  0827  3437               	retlw	0x37
   191                           
   192  0828  3493               	retlw	0x93
   193  0829  34A7               	retlw	0xa7
   194  082A  3435               	retlw	0x35
   195                           
   196  082B  3456               	retlw	0x56
   197  082C  3415               	retlw	0x15
   198  082D  3434               	retlw	0x34
   199                           
   200                           	global	log@coeff
   201                           psect	strings
   202                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
   203                           	line	9
   204  082E                     log@coeff:
   205  082E  3400               	retlw	0x0
   206  082F  3400               	retlw	0x0
   207  0830  3400               	retlw	0x0
   208                           
   209  0831  3400               	retlw	0x0
   210  0832  3480               	retlw	0x80
   211  0833  343F               	retlw	0x3f
   212                           
   213  0834  34F0               	retlw	0xf0
   214  0835  34FF               	retlw	0xff
   215  0836  34BE               	retlw	0xbe
   216                           
   217  0837  34E2               	retlw	0xe2
   218  0838  34A9               	retlw	0xa9
   219  0839  343E               	retlw	0x3e
   220                           
   221  083A  3483               	retlw	0x83
   222  083B  3476               	retlw	0x76
   223  083C  34BE               	retlw	0xbe
   224                           
   225  083D  34AE               	retlw	0xae
   226  083E  342B               	retlw	0x2b
   227  083F  343E               	retlw	0x3e
   228                           
   229  0840  343C               	retlw	0x3c
   230  0841  34C3               	retlw	0xc3
   231  0842  34BD               	retlw	0xbd
   232                           
   233  0843  34D2               	retlw	0xd2
   234  0844  3413               	retlw	0x13
   235  0845  343D               	retlw	0x3d
   236                           
   237  0846  3478               	retlw	0x78
   238  0847  34D3               	retlw	0xd3
   239  0848  34BB               	retlw	0xbb
   240                           
   241                           	global	exp@coeff
   242                           	global	log@coeff
   243                           	global	_x
   244                           	global	_errno
   245                           	global	_str
   246                           	global	_ADCON0
   247  001F                     _ADCON0	set	31
   248                           	global	_ADRESH
   249  001E                     _ADRESH	set	30
   250                           	global	_PORTD
   251  0008                     _PORTD	set	8
   252                           	global	_RCREG
   253  001A                     _RCREG	set	26
   254                           	global	_RCSTA
   255  0018                     _RCSTA	set	24
   256                           	global	_TXREG
   257  0019                     _TXREG	set	25
   258                           	global	_ADON
   259  00F8                     _ADON	set	248
   260                           	global	_CARRY
   261  0018                     _CARRY	set	24
   262                           	global	_GIE
   263  005F                     _GIE	set	95
   264                           	global	_GO_nDONE
   265  00FA                     _GO_nDONE	set	250
   266                           	global	_RB1
   267  0031                     _RB1	set	49
   268                           	global	_RCIF
   269  0065                     _RCIF	set	101
   270                           	global	_RE0
   271  0048                     _RE0	set	72
   272                           	global	_RE1
   273  0049                     _RE1	set	73
   274                           	global	_TXIF
   275  0064                     _TXIF	set	100
   276                           	global	_ADCON1
   277  009F                     _ADCON1	set	159
   278                           	global	_SPBRG
   279  0099                     _SPBRG	set	153
   280                           	global	_TRISA
   281  0085                     _TRISA	set	133
   282                           	global	_TRISB
   283  0086                     _TRISB	set	134
   284                           	global	_TRISD
   285  0088                     _TRISD	set	136
   286                           	global	_TRISE
   287  0089                     _TRISE	set	137
   288                           	global	_TXSTA
   289  0098                     _TXSTA	set	152
   290                           	global	_TRISC6
   291  043E                     _TRISC6	set	1086
   292                           	global	_TRISC7
   293  043F                     _TRISC7	set	1087
   294                           	global	_nRBPU
   295  040F                     _nRBPU	set	1039
   296                           	global	_EEADR
   297  010D                     _EEADR	set	269
   298                           	global	_EEDATA
   299  010C                     _EEDATA	set	268
   300                           	global	_EECON1
   301  018C                     _EECON1	set	396
   302                           	global	_EECON2
   303  018D                     _EECON2	set	397
   304                           	global	_RD
   305  0C60                     _RD	set	3168
   306                           	global	_WR
   307  0C61                     _WR	set	3169
   308                           	global	_WREN
   309  0C62                     _WREN	set	3170
   310                           	
   311  0849                     STR_1:	
   312  0849  3453               	retlw	83	;'S'
   313  084A  3474               	retlw	116	;'t'
   314  084B  3461               	retlw	97	;'a'
   315  084C  3472               	retlw	114	;'r'
   316  084D  3474               	retlw	116	;'t'
   317  084E  3469               	retlw	105	;'i'
   318  084F  346E               	retlw	110	;'n'
   319  0850  3467               	retlw	103	;'g'
   320  0851  342E               	retlw	46	;'.'
   321  0852  342E               	retlw	46	;'.'
   322  0853  342E               	retlw	46	;'.'
   323  0854  3400               	retlw	0
   324                           psect	strings
   325                           	
   326  0855                     STR_3:	
   327  0855  3445               	retlw	69	;'E'
   328  0856  346E               	retlw	110	;'n'
   329  0857  3461               	retlw	97	;'a'
   330  0858  3462               	retlw	98	;'b'
   331  0859  346C               	retlw	108	;'l'
   332  085A  3465               	retlw	101	;'e'
   333  085B  3464               	retlw	100	;'d'
   334  085C  3420               	retlw	32	;' '
   335  085D  3400               	retlw	0
   336                           psect	strings
   337                           	
   338  085E                     STR_2:	
   339  085E  3444               	retlw	68	;'D'
   340  085F  3469               	retlw	105	;'i'
   341  0860  3473               	retlw	115	;'s'
   342  0861  3461               	retlw	97	;'a'
   343  0862  3462               	retlw	98	;'b'
   344  0863  346C               	retlw	108	;'l'
   345  0864  3465               	retlw	101	;'e'
   346  0865  3464               	retlw	100	;'d'
   347  0866  3400               	retlw	0
   348                           psect	strings
   349                           	file	"lab3 serial.as"
   350                           	line	#
   351                           psect cinit,class=CODE,delta=2
   352                           global start_initialization
   353  1765                     start_initialization:
   354                           
   355                           psect	bssBANK1,class=BANK1,space=1
   356                           global __pbssBANK1
   357  00B8                     __pbssBANK1:
   358  00B8                     _x:
   359  00B8                            ds      3
   360                           
   361  00BB                     _errno:
   362  00BB                            ds      2
   363                           
   364  00BD                     _str:
   365  00BD                            ds      10
   366                           
   367                           psect	dataBANK1,class=BANK1,space=1
   368                           global __pdataBANK1
   369  00C7                     __pdataBANK1:
   370                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
   371                           	line	24
   372  00C7                     _send:
   373  00C7                            ds      2
   374                           
   375                           ; Clear objects allocated to BANK1
   376                           psect cinit,class=CODE,delta=2
   377  1765  1683               	bsf	status, 5	;RP0=1, select bank1
   378  1766  1303               	bcf	status, 6	;RP1=0, select bank1
   379  1767  01B8               	clrf	((__pbssBANK1)+0)&07Fh
   380  1768  01B9               	clrf	((__pbssBANK1)+1)&07Fh
   381  1769  01BA               	clrf	((__pbssBANK1)+2)&07Fh
   382  176A  01BB               	clrf	((__pbssBANK1)+3)&07Fh
   383  176B  01BC               	clrf	((__pbssBANK1)+4)&07Fh
   384  176C  01BD               	clrf	((__pbssBANK1)+5)&07Fh
   385  176D  01BE               	clrf	((__pbssBANK1)+6)&07Fh
   386  176E  01BF               	clrf	((__pbssBANK1)+7)&07Fh
   387  176F  01C0               	clrf	((__pbssBANK1)+8)&07Fh
   388  1770  01C1               	clrf	((__pbssBANK1)+9)&07Fh
   389  1771  01C2               	clrf	((__pbssBANK1)+10)&07Fh
   390  1772  01C3               	clrf	((__pbssBANK1)+11)&07Fh
   391  1773  01C4               	clrf	((__pbssBANK1)+12)&07Fh
   392  1774  01C5               	clrf	((__pbssBANK1)+13)&07Fh
   393  1775  01C6               	clrf	((__pbssBANK1)+14)&07Fh
   394                           ; Initialize objects allocated to BANK1
   395                           	global __pidataBANK1
   396                           psect cinit,class=CODE,delta=2
   397  1776  120A  118A  2009   	fcall	__pidataBANK1+0		;fetch initializer
              160A  118A         
   398  177B  00C7               	movwf	__pdataBANK1+0&07fh		
   399  177C  120A  118A  200A   	fcall	__pidataBANK1+1		;fetch initializer
              160A  118A         
   400  1781  00C8               	movwf	__pdataBANK1+1&07fh		
   401                           psect cinit,class=CODE,delta=2
   402                           global end_of_initialization
   403                           
   404                           ;End of C runtime variable initialization code
   405                           
   406  1782                     end_of_initialization:
   407  1782  0183               clrf status
   408  1783  120A  118A  2D4C   ljmp _main	;jump to C main() function
   409                           psect	cstackBANK1,class=BANK1,space=1
   410                           global __pcstackBANK1
   411  00A0                     __pcstackBANK1:
   412                           	global	_pow$3813
   413  00A0                     _pow$3813:	; 3 bytes @ 0x0
   414  00A0                     	ds	3
   415                           	global	pow@sign
   416  00A3                     pow@sign:	; 1 bytes @ 0x3
   417  00A3                     	ds	1
   418                           	global	pow@yi
   419  00A4                     pow@yi:	; 4 bytes @ 0x4
   420  00A4                     	ds	4
   421                           	global	?_ftoa
   422  00A8                     ?_ftoa:	; 0 bytes @ 0x8
   423                           	global	ftoa@n
   424  00A8                     ftoa@n:	; 3 bytes @ 0x8
   425  00A8                     	ds	3
   426                           	global	ftoa@res
   427  00AB                     ftoa@res:	; 1 bytes @ 0xB
   428  00AB                     	ds	1
   429                           	global	ftoa@afterpoint
   430  00AC                     ftoa@afterpoint:	; 2 bytes @ 0xC
   431  00AC                     	ds	2
   432                           	global	_ftoa$3812
   433  00AE                     _ftoa$3812:	; 3 bytes @ 0xE
   434  00AE                     	ds	3
   435                           	global	ftoa@ipart
   436  00B1                     ftoa@ipart:	; 2 bytes @ 0x11
   437  00B1                     	ds	2
   438                           	global	ftoa@i
   439  00B3                     ftoa@i:	; 2 bytes @ 0x13
   440  00B3                     	ds	2
   441                           	global	ftoa@fpart
   442  00B5                     ftoa@fpart:	; 3 bytes @ 0x15
   443  00B5                     	ds	3
   444                           psect	cstackCOMMON,class=COMMON,space=1
   445                           global __pcstackCOMMON
   446  0070                     __pcstackCOMMON:
   447                           	global	?_init_a2d
   448  0070                     ?_init_a2d:	; 0 bytes @ 0x0
   449                           	global	??_init_a2d
   450  0070                     ??_init_a2d:	; 0 bytes @ 0x0
   451                           	global	?_putchOnSerial
   452  0070                     ?_putchOnSerial:	; 0 bytes @ 0x0
   453                           	global	??_putchOnSerial
   454  0070                     ??_putchOnSerial:	; 0 bytes @ 0x0
   455                           	global	??_getch
   456  0070                     ??_getch:	; 0 bytes @ 0x0
   457                           	global	?_DelayMs
   458  0070                     ?_DelayMs:	; 0 bytes @ 0x0
   459                           	global	??_DelayMs
   460  0070                     ??_DelayMs:	; 0 bytes @ 0x0
   461                           	global	?_lcd_write
   462  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   463                           	global	??_lcd_write
   464  0070                     ??_lcd_write:	; 0 bytes @ 0x0
   465                           	global	?_lcd_clear
   466  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   467                           	global	?_lcd_goto
   468  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   469                           	global	?_lcd_init
   470  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   471                           	global	?_reverse
   472  0070                     ?_reverse:	; 0 bytes @ 0x0
   473                           	global	?_main
   474  0070                     ?_main:	; 0 bytes @ 0x0
   475                           	global	?___ftge
   476  0070                     ?___ftge:	; 1 bit 
   477                           	global	?_getch
   478  0070                     ?_getch:	; 1 bytes @ 0x0
   479                           	global	?___bmul
   480  0070                     ?___bmul:	; 1 bytes @ 0x0
   481                           	global	?___awdiv
   482  0070                     ?___awdiv:	; 2 bytes @ 0x0
   483                           	global	?___awmod
   484  0070                     ?___awmod:	; 2 bytes @ 0x0
   485                           	global	?___ftpack
   486  0070                     ?___ftpack:	; 3 bytes @ 0x0
   487                           	global	?_frexp
   488  0070                     ?_frexp:	; 3 bytes @ 0x0
   489                           	global	?___fttol
   490  0070                     ?___fttol:	; 4 bytes @ 0x0
   491                           	global	putchOnSerial@byte
   492  0070                     putchOnSerial@byte:	; 1 bytes @ 0x0
   493                           	global	___bmul@multiplicand
   494  0070                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   495                           	global	reverse@len
   496  0070                     reverse@len:	; 2 bytes @ 0x0
   497                           	global	___awdiv@divisor
   498  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   499                           	global	___awmod@divisor
   500  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   501                           	global	___fttol@f1
   502  0070                     ___fttol@f1:	; 3 bytes @ 0x0
   503                           	global	___ftge@ff1
   504  0070                     ___ftge@ff1:	; 3 bytes @ 0x0
   505                           	global	frexp@value
   506  0070                     frexp@value:	; 3 bytes @ 0x0
   507                           	global	___ftpack@arg
   508  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   509  0070                     	ds	1
   510                           	global	??___bmul
   511  0071                     ??___bmul:	; 0 bytes @ 0x1
   512                           	global	DelayMs@cnt
   513  0071                     DelayMs@cnt:	; 1 bytes @ 0x1
   514                           	global	lcd_write@_dcnt
   515  0071                     lcd_write@_dcnt:	; 1 bytes @ 0x1
   516  0071                     	ds	1
   517                           	global	??_reverse
   518  0072                     ??_reverse:	; 0 bytes @ 0x2
   519                           	global	DelayMs@i
   520  0072                     DelayMs@i:	; 1 bytes @ 0x2
   521                           	global	lcd_write@c
   522  0072                     lcd_write@c:	; 1 bytes @ 0x2
   523                           	global	___bmul@product
   524  0072                     ___bmul@product:	; 1 bytes @ 0x2
   525                           	global	___awdiv@dividend
   526  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   527                           	global	___awmod@dividend
   528  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   529  0072                     	ds	1
   530                           	global	?_lcd_puts
   531  0073                     ?_lcd_puts:	; 0 bytes @ 0x3
   532                           	global	??_lcd_goto
   533  0073                     ??_lcd_goto:	; 0 bytes @ 0x3
   534                           	global	DelayMs@_dcnt
   535  0073                     DelayMs@_dcnt:	; 1 bytes @ 0x3
   536                           	global	lcd_goto@pos
   537  0073                     lcd_goto@pos:	; 1 bytes @ 0x3
   538                           	global	___bmul@multiplier
   539  0073                     ___bmul@multiplier:	; 1 bytes @ 0x3
   540                           	global	frexp@eptr
   541  0073                     frexp@eptr:	; 1 bytes @ 0x3
   542                           	global	___ftpack@exp
   543  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   544                           	global	lcd_puts@s
   545  0073                     lcd_puts@s:	; 2 bytes @ 0x3
   546                           	global	___ftge@ff2
   547  0073                     ___ftge@ff2:	; 3 bytes @ 0x3
   548  0073                     	ds	1
   549                           	global	?_DelaySec
   550  0074                     ?_DelaySec:	; 0 bytes @ 0x4
   551                           	global	??_frexp
   552  0074                     ??_frexp:	; 0 bytes @ 0x4
   553                           	global	??_lcd_clear
   554  0074                     ??_lcd_clear:	; 0 bytes @ 0x4
   555                           	global	??_lcd_init
   556  0074                     ??_lcd_init:	; 0 bytes @ 0x4
   557                           	global	??___fttol
   558  0074                     ??___fttol:	; 0 bytes @ 0x4
   559                           	global	??___awdiv
   560  0074                     ??___awdiv:	; 0 bytes @ 0x4
   561                           	global	??___awmod
   562  0074                     ??___awmod:	; 0 bytes @ 0x4
   563                           	global	___ftpack@sign
   564  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   565                           	global	DelaySec@sec
   566  0074                     DelaySec@sec:	; 2 bytes @ 0x4
   567  0074                     	ds	1
   568                           	global	??___ftpack
   569  0075                     ??___ftpack:	; 0 bytes @ 0x5
   570                           	global	??_lcd_puts
   571  0075                     ??_lcd_puts:	; 0 bytes @ 0x5
   572                           	global	lcd_init@_dcnt
   573  0075                     lcd_init@_dcnt:	; 1 bytes @ 0x5
   574                           	global	___awdiv@counter
   575  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   576                           	global	___awmod@counter
   577  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   578                           	global	reverse@temp
   579  0075                     reverse@temp:	; 2 bytes @ 0x5
   580  0075                     	ds	1
   581                           	global	??_DelaySec
   582  0076                     ??_DelaySec:	; 0 bytes @ 0x6
   583                           	global	??___ftge
   584  0076                     ??___ftge:	; 0 bytes @ 0x6
   585                           	global	lcd_init@_dcnt_1244
   586  0076                     lcd_init@_dcnt_1244:	; 1 bytes @ 0x6
   587                           	global	___awdiv@sign
   588  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   589                           	global	___awmod@sign
   590  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   591  0076                     	ds	1
   592                           	global	reverse@i
   593  0077                     reverse@i:	; 2 bytes @ 0x7
   594                           	global	DelaySec@i
   595  0077                     DelaySec@i:	; 2 bytes @ 0x7
   596                           	global	___awdiv@quotient
   597  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   598  0077                     	ds	1
   599                           	global	?___ftdiv
   600  0078                     ?___ftdiv:	; 3 bytes @ 0x8
   601                           	global	?___lbtoft
   602  0078                     ?___lbtoft:	; 3 bytes @ 0x8
   603                           	global	?___ftneg
   604  0078                     ?___ftneg:	; 3 bytes @ 0x8
   605                           	global	?___lltoft
   606  0078                     ?___lltoft:	; 3 bytes @ 0x8
   607                           	global	___fttol@sign1
   608  0078                     ___fttol@sign1:	; 1 bytes @ 0x8
   609                           	global	___ftdiv@f2
   610  0078                     ___ftdiv@f2:	; 3 bytes @ 0x8
   611                           	global	___ftneg@f1
   612  0078                     ___ftneg@f1:	; 3 bytes @ 0x8
   613                           	global	___lltoft@c
   614  0078                     ___lltoft@c:	; 4 bytes @ 0x8
   615  0078                     	ds	1
   616                           	global	reverse@j
   617  0079                     reverse@j:	; 2 bytes @ 0x9
   618                           	global	___fttol@lval
   619  0079                     ___fttol@lval:	; 4 bytes @ 0x9
   620  0079                     	ds	2
   621                           	global	??___ftneg
   622  007B                     ??___ftneg:	; 0 bytes @ 0xB
   623                           	global	?___awtoft
   624  007B                     ?___awtoft:	; 3 bytes @ 0xB
   625                           	global	reverse@str
   626  007B                     reverse@str:	; 1 bytes @ 0xB
   627                           	global	___lbtoft@c
   628  007B                     ___lbtoft@c:	; 1 bytes @ 0xB
   629                           	global	___awtoft@c
   630  007B                     ___awtoft@c:	; 2 bytes @ 0xB
   631                           	global	___ftdiv@f1
   632  007B                     ___ftdiv@f1:	; 3 bytes @ 0xB
   633  007B                     	ds	1
   634                           	global	??_read_a2d
   635  007C                     ??_read_a2d:	; 0 bytes @ 0xC
   636                           	global	??___lltoft
   637  007C                     ??___lltoft:	; 0 bytes @ 0xC
   638  007C                     	ds	1
   639                           	global	___fttol@exp1
   640  007D                     ___fttol@exp1:	; 1 bytes @ 0xD
   641                           	global	___lltoft@exp
   642  007D                     ___lltoft@exp:	; 1 bytes @ 0xD
   643  007D                     	ds	1
   644                           	global	??___ftsub
   645  007E                     ??___ftsub:	; 0 bytes @ 0xE
   646                           psect	cstackBANK0,class=BANK0,space=1
   647                           global __pcstackBANK0
   648  0020                     __pcstackBANK0:
   649                           	global	??___ftdiv
   650  0020                     ??___ftdiv:	; 0 bytes @ 0x0
   651                           	global	??___lbtoft
   652  0020                     ??___lbtoft:	; 0 bytes @ 0x0
   653                           	global	??___awtoft
   654  0020                     ??___awtoft:	; 0 bytes @ 0x0
   655                           	global	?_intToStr
   656  0020                     ?_intToStr:	; 2 bytes @ 0x0
   657                           	global	?___altoft
   658  0020                     ?___altoft:	; 3 bytes @ 0x0
   659                           	global	intToStr@x
   660  0020                     intToStr@x:	; 2 bytes @ 0x0
   661                           	global	___altoft@c
   662  0020                     ___altoft@c:	; 4 bytes @ 0x0
   663  0020                     	ds	2
   664                           	global	intToStr@str
   665  0022                     intToStr@str:	; 1 bytes @ 0x2
   666                           	global	___awtoft@sign
   667  0022                     ___awtoft@sign:	; 1 bytes @ 0x2
   668  0022                     	ds	1
   669                           	global	?___ftmul
   670  0023                     ?___ftmul:	; 3 bytes @ 0x3
   671                           	global	intToStr@d
   672  0023                     intToStr@d:	; 2 bytes @ 0x3
   673                           	global	___ftmul@f1
   674  0023                     ___ftmul@f1:	; 3 bytes @ 0x3
   675  0023                     	ds	1
   676                           	global	??___altoft
   677  0024                     ??___altoft:	; 0 bytes @ 0x4
   678                           	global	?_read_a2d
   679  0024                     ?_read_a2d:	; 3 bytes @ 0x4
   680                           	global	___ftdiv@cntr
   681  0024                     ___ftdiv@cntr:	; 1 bytes @ 0x4
   682  0024                     	ds	1
   683                           	global	??_intToStr
   684  0025                     ??_intToStr:	; 0 bytes @ 0x5
   685                           	global	___ftdiv@f3
   686  0025                     ___ftdiv@f3:	; 3 bytes @ 0x5
   687  0025                     	ds	1
   688                           	global	___altoft@exp
   689  0026                     ___altoft@exp:	; 1 bytes @ 0x6
   690                           	global	___ftmul@f2
   691  0026                     ___ftmul@f2:	; 3 bytes @ 0x6
   692  0026                     	ds	1
   693                           	global	read_a2d@channel
   694  0027                     read_a2d@channel:	; 1 bytes @ 0x7
   695                           	global	___altoft@sign
   696  0027                     ___altoft@sign:	; 1 bytes @ 0x7
   697                           	global	intToStr@i
   698  0027                     intToStr@i:	; 2 bytes @ 0x7
   699  0027                     	ds	1
   700                           	global	___ftdiv@exp
   701  0028                     ___ftdiv@exp:	; 1 bytes @ 0x8
   702  0028                     	ds	1
   703                           	global	??___ftmul
   704  0029                     ??___ftmul:	; 0 bytes @ 0x9
   705                           	global	___ftdiv@sign
   706  0029                     ___ftdiv@sign:	; 1 bytes @ 0x9
   707  0029                     	ds	4
   708                           	global	___ftmul@exp
   709  002D                     ___ftmul@exp:	; 1 bytes @ 0xD
   710  002D                     	ds	1
   711                           	global	___ftmul@f3_as_product
   712  002E                     ___ftmul@f3_as_product:	; 3 bytes @ 0xE
   713  002E                     	ds	3
   714                           	global	___ftmul@cntr
   715  0031                     ___ftmul@cntr:	; 1 bytes @ 0x11
   716  0031                     	ds	1
   717                           	global	___ftmul@sign
   718  0032                     ___ftmul@sign:	; 1 bytes @ 0x12
   719  0032                     	ds	1
   720                           	global	?___ftadd
   721  0033                     ?___ftadd:	; 3 bytes @ 0x13
   722                           	global	___ftadd@f1
   723  0033                     ___ftadd@f1:	; 3 bytes @ 0x13
   724  0033                     	ds	3
   725                           	global	___ftadd@f2
   726  0036                     ___ftadd@f2:	; 3 bytes @ 0x16
   727  0036                     	ds	3
   728                           	global	??___ftadd
   729  0039                     ??___ftadd:	; 0 bytes @ 0x19
   730  0039                     	ds	4
   731                           	global	___ftadd@sign
   732  003D                     ___ftadd@sign:	; 1 bytes @ 0x1D
   733  003D                     	ds	1
   734                           	global	___ftadd@exp2
   735  003E                     ___ftadd@exp2:	; 1 bytes @ 0x1E
   736  003E                     	ds	1
   737                           	global	___ftadd@exp1
   738  003F                     ___ftadd@exp1:	; 1 bytes @ 0x1F
   739  003F                     	ds	1
   740                           	global	?_floor
   741  0040                     ?_floor:	; 3 bytes @ 0x20
   742                           	global	?_ldexp
   743  0040                     ?_ldexp:	; 3 bytes @ 0x20
   744                           	global	?___ftsub
   745  0040                     ?___ftsub:	; 3 bytes @ 0x20
   746                           	global	___ftsub@f2
   747  0040                     ___ftsub@f2:	; 3 bytes @ 0x20
   748                           	global	floor@x
   749  0040                     floor@x:	; 3 bytes @ 0x20
   750                           	global	ldexp@value
   751  0040                     ldexp@value:	; 3 bytes @ 0x20
   752  0040                     	ds	3
   753                           	global	??_floor
   754  0043                     ??_floor:	; 0 bytes @ 0x23
   755                           	global	ldexp@newexp
   756  0043                     ldexp@newexp:	; 2 bytes @ 0x23
   757                           	global	___ftsub@f1
   758  0043                     ___ftsub@f1:	; 3 bytes @ 0x23
   759  0043                     	ds	1
   760                           	global	floor@i
   761  0044                     floor@i:	; 3 bytes @ 0x24
   762  0044                     	ds	1
   763                           	global	??_ldexp
   764  0045                     ??_ldexp:	; 0 bytes @ 0x25
   765  0045                     	ds	2
   766                           	global	floor@expon
   767  0047                     floor@expon:	; 2 bytes @ 0x27
   768                           	global	_ldexp$3573
   769  0047                     _ldexp$3573:	; 3 bytes @ 0x27
   770  0047                     	ds	3
   771                           	global	?_eval_poly
   772  004A                     ?_eval_poly:	; 3 bytes @ 0x2A
   773                           	global	eval_poly@x
   774  004A                     eval_poly@x:	; 3 bytes @ 0x2A
   775  004A                     	ds	3
   776                           	global	eval_poly@d
   777  004D                     eval_poly@d:	; 1 bytes @ 0x2D
   778  004D                     	ds	1
   779                           	global	eval_poly@n
   780  004E                     eval_poly@n:	; 2 bytes @ 0x2E
   781  004E                     	ds	2
   782                           	global	??_eval_poly
   783  0050                     ??_eval_poly:	; 0 bytes @ 0x30
   784  0050                     	ds	1
   785                           	global	eval_poly@res
   786  0051                     eval_poly@res:	; 3 bytes @ 0x31
   787  0051                     	ds	3
   788                           	global	?_log
   789  0054                     ?_log:	; 3 bytes @ 0x34
   790                           	global	log@x
   791  0054                     log@x:	; 3 bytes @ 0x34
   792  0054                     	ds	3
   793                           	global	??_log
   794  0057                     ??_log:	; 0 bytes @ 0x37
   795  0057                     	ds	1
   796                           	global	log@exp
   797  0058                     log@exp:	; 2 bytes @ 0x38
   798  0058                     	ds	2
   799                           	global	?_exp
   800  005A                     ?_exp:	; 3 bytes @ 0x3A
   801                           	global	exp@x
   802  005A                     exp@x:	; 3 bytes @ 0x3A
   803  005A                     	ds	3
   804                           	global	??_exp
   805  005D                     ??_exp:	; 0 bytes @ 0x3D
   806  005D                     	ds	1
   807                           	global	_exp$3527
   808  005E                     _exp$3527:	; 3 bytes @ 0x3E
   809  005E                     	ds	3
   810                           	global	exp@exp
   811  0061                     exp@exp:	; 2 bytes @ 0x41
   812  0061                     	ds	2
   813                           	global	exp@sign
   814  0063                     exp@sign:	; 1 bytes @ 0x43
   815  0063                     	ds	1
   816                           	global	?_pow
   817  0064                     ?_pow:	; 3 bytes @ 0x44
   818                           	global	pow@x
   819  0064                     pow@x:	; 3 bytes @ 0x44
   820  0064                     	ds	3
   821                           	global	pow@y
   822  0067                     pow@y:	; 3 bytes @ 0x47
   823  0067                     	ds	3
   824                           	global	??_pow
   825  006A                     ??_pow:	; 0 bytes @ 0x4A
   826  006A                     	ds	1
   827                           	global	??_ftoa
   828  006B                     ??_ftoa:	; 0 bytes @ 0x4B
   829  006B                     	ds	2
   830                           	global	??_main
   831  006D                     ??_main:	; 0 bytes @ 0x4D
   832  006D                     	ds	1
   833                           	global	main@rec
   834  006E                     main@rec:	; 1 bytes @ 0x4E
   835  006E                     	ds	1
   836 ;;Data sizes: Strings 30, constant 57, data 2, bss 15, persistent 0 stack 0
   837 ;;Auto spaces:   Size  Autos    Used
   838 ;; COMMON          14     14      14
   839 ;; BANK0           80     79      79
   840 ;; BANK1           80     24      41
   841 ;; BANK3           96      0       0
   842 ;; BANK2           96      0       0
   843                           
   844 ;;
   845 ;; Pointer list with targets:
   846                           
   847 ;; ?_frexp	 size(1) Largest target is 0
   848 ;;
   849 ;; ?_ldexp	 size(1) Largest target is 0
   850 ;;
   851 ;; ?_eval_poly	 size(1) Largest target is 0
   852 ;;
   853 ;; ?_floor	 size(1) Largest target is 0
   854 ;;
   855 ;; ?___altoft	float  size(1) Largest target is 0
   856 ;;
   857 ;; ?___lbtoft	float  size(1) Largest target is 0
   858 ;;
   859 ;; ?___ftsub	float  size(1) Largest target is 0
   860 ;;
   861 ;; ?___ftpack	float  size(1) Largest target is 0
   862 ;;
   863 ;; ?_exp	float  size(1) Largest target is 0
   864 ;;
   865 ;; ?_log	float  size(1) Largest target is 0
   866 ;;
   867 ;; ?___lltoft	float  size(1) Largest target is 0
   868 ;;
   869 ;; ?_read_a2d	float  size(1) Largest target is 0
   870 ;;
   871 ;; ?___ftdiv	float  size(1) Largest target is 0
   872 ;;
   873 ;; ?___ftmul	float  size(1) Largest target is 0
   874 ;;
   875 ;; ?_pow	float  size(1) Largest target is 0
   876 ;;
   877 ;; ?___ftadd	float  size(1) Largest target is 0
   878 ;;
   879 ;; ?___ftneg	float  size(1) Largest target is 0
   880 ;;
   881 ;; ?___awtoft	float  size(1) Largest target is 0
   882 ;;
   883 ;; ?___fttol	long  size(1) Largest target is 0
   884 ;;
   885 ;; ?_intToStr	int  size(1) Largest target is 0
   886 ;;
   887 ;; ?___awdiv	int  size(1) Largest target is 0
   888 ;;
   889 ;; ?___awmod	int  size(1) Largest target is 0
   890 ;;
   891 ;; eval_poly@d	PTR const  size(1) Largest target is 30
   892 ;;		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 
   893 ;;
   894 ;; frexp@eptr	PTR int  size(1) Largest target is 2
   895 ;;		 -> log@exp(BANK0[2]), floor@expon(BANK0[2]), 
   896 ;;
   897 ;; ftoa@res	PTR unsigned char  size(1) Largest target is 10
   898 ;;		 -> str(BANK1[10]), 
   899 ;;
   900 ;; intToStr@str	PTR unsigned char  size(1) Largest target is 10
   901 ;;		 -> str(BANK1[10]), 
   902 ;;
   903 ;; reverse@str	PTR unsigned char  size(1) Largest target is 10
   904 ;;		 -> str(BANK1[10]), 
   905 ;;
   906 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 12
   907 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), str(BANK1[10]), STR_1(CODE[12]), 
   908 ;;
   909                           
   910                           
   911 ;;
   912 ;; Critical Paths under _main in COMMON
   913 ;;
   914 ;;   _main->_read_a2d
   915 ;;   _main->___ftdiv
   916 ;;   _ftoa->___fttol
   917 ;;   _ftoa->___awtoft
   918 ;;   _pow->___fttol
   919 ;;   _pow->___lltoft
   920 ;;   _exp->___fttol
   921 ;;   _exp->___awtoft
   922 ;;   _exp->___ftdiv
   923 ;;   _log->___awtoft
   924 ;;   _floor->___fttol
   925 ;;   ___ftsub->___awtoft
   926 ;;   _read_a2d->___lbtoft
   927 ;;   ___lltoft->___ftpack
   928 ;;   ___altoft->___fttol
   929 ;;   ___awtoft->___ftneg
   930 ;;   ___lbtoft->___ftpack
   931 ;;   ___ftmul->___awtoft
   932 ;;   ___ftdiv->___ftpack
   933 ;;   ___ftadd->___awtoft
   934 ;;   _DelaySec->_DelayMs
   935 ;;   _intToStr->___fttol
   936 ;;   _lcd_init->_DelayMs
   937 ;;   _lcd_goto->_lcd_write
   938 ;;   _lcd_puts->_lcd_write
   939 ;;   _lcd_clear->_DelayMs
   940 ;;   ___ftneg->___ftpack
   941 ;;
   942 ;; Critical Paths under _main in BANK0
   943 ;;
   944 ;;   _main->_ftoa
   945 ;;   _ftoa->_pow
   946 ;;   _pow->_exp
   947 ;;   _exp->_log
   948 ;;   _log->_eval_poly
   949 ;;   _eval_poly->_ldexp
   950 ;;   _floor->___ftadd
   951 ;;   ___ftsub->___ftadd
   952 ;;   _read_a2d->___lbtoft
   953 ;;   _ldexp->___ftadd
   954 ;;   ___ftmul->___awtoft
   955 ;;   ___ftadd->___ftmul
   956 ;;
   957 ;; Critical Paths under _main in BANK1
   958 ;;
   959 ;;   _main->_ftoa
   960 ;;   _ftoa->_pow
   961 ;;
   962 ;; Critical Paths under _main in BANK3
   963 ;;
   964 ;;   None.
   965 ;;
   966 ;; Critical Paths under _main in BANK2
   967 ;;
   968 ;;   None.
   969                           
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   972 ;;
   973                           
   974 ;;
   975 ;;Call Graph Tables:
   976 ;;
   977 ;; ---------------------------------------------------------------------------------
   978 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (0) _main                                                 2     2      0   19072
   981 ;;                                             77 BANK0      2     2      0
   982 ;;                           _DelaySec
   983 ;;                           _lcd_init
   984 ;;                          _lcd_clear
   985 ;;                           _lcd_puts
   986 ;;                            _DelayMs
   987 ;;                           _init_a2d
   988 ;;                           _lcd_goto
   989 ;;                           _read_a2d
   990 ;;                            ___ftdiv
   991 ;;                               _ftoa
   992 ;;                             ___ftge
   993 ;;                      _putchOnSerial
   994 ;;                              _getch
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (1) _ftoa                                                18    12      6   17337
   997 ;;                                             75 BANK0      2     2      0
   998 ;;                                              8 BANK1     16    10      6
   999 ;;                            ___fttol
  1000 ;;                           ___awtoft
  1001 ;;                            ___ftneg
  1002 ;;                            ___ftadd
  1003 ;;                           _intToStr
  1004 ;;                                _pow
  1005 ;;                            ___ftmul
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (2) _pow                                                 15     9      6   13644
  1008 ;;                                             68 BANK0      7     1      6
  1009 ;;                                              0 BANK1      8     8      0
  1010 ;;                             ___ftge
  1011 ;;                            ___fttol
  1012 ;;                           ___lltoft
  1013 ;;                            ___ftneg
  1014 ;;                                _log
  1015 ;;                            ___ftmul
  1016 ;;                                _exp
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; (3) _exp                                                 10     7      3    7799
  1019 ;;                                             58 BANK0     10     7      3
  1020 ;;                             ___ftge
  1021 ;;                            ___ftneg
  1022 ;;                            ___ftmul
  1023 ;;                              _floor
  1024 ;;                            ___fttol
  1025 ;;                           ___awtoft
  1026 ;;                            ___ftsub
  1027 ;;                          _eval_poly
  1028 ;;                              _ldexp
  1029 ;;                            ___ftdiv
  1030 ;;                                _log (ARG)
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (3) _log                                                  6     3      3    4263
  1033 ;;                                             52 BANK0      6     3      3
  1034 ;;                             ___ftge
  1035 ;;                              _frexp
  1036 ;;                            ___ftmul
  1037 ;;                            ___ftadd
  1038 ;;                          _eval_poly
  1039 ;;                           ___awtoft
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (4) _eval_poly                                           10     4      6    1854
  1042 ;;                                             42 BANK0     10     4      6
  1043 ;;                             ___bmul
  1044 ;;                            ___ftmul
  1045 ;;                            ___ftadd
  1046 ;;                              _ldexp (ARG)
  1047 ;; ---------------------------------------------------------------------------------
  1048 ;; (4) _floor                                                9     6      3    2259
  1049 ;;                                             32 BANK0      9     6      3
  1050 ;;                              _frexp
  1051 ;;                             ___ftge
  1052 ;;                            ___fttol
  1053 ;;                           ___altoft
  1054 ;;                            ___ftadd
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (4) ___ftsub                                              6     0      6    1094
  1057 ;;                                             32 BANK0      6     0      6
  1058 ;;                            ___ftadd
  1059 ;;                           ___awtoft (ARG)
  1060 ;; ---------------------------------------------------------------------------------
  1061 ;; (1) _read_a2d                                             6     3      3     322
  1062 ;;                                             12 COMMON     2     2      0
  1063 ;;                                              4 BANK0      4     1      3
  1064 ;;                            _DelayMs
  1065 ;;                           ___lbtoft
  1066 ;; ---------------------------------------------------------------------------------
  1067 ;; (4) _ldexp                                               10     5      5     453
  1068 ;;                                             32 BANK0     10     5      5
  1069 ;;                             ___ftge
  1070 ;;                            ___ftneg
  1071 ;;                             ___bmul (ARG)
  1072 ;;                            ___ftmul (ARG)
  1073 ;;                            ___ftadd (ARG)
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (3) ___lltoft                                             6     2      4     278
  1076 ;;                                              8 COMMON     6     2      4
  1077 ;;                           ___ftpack
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (5) ___altoft                                             8     4      4     347
  1080 ;;                                              0 BANK0      8     4      4
  1081 ;;                           ___ftpack
  1082 ;;                            ___fttol (ARG)
  1083 ;; ---------------------------------------------------------------------------------
  1084 ;; (4) ___awtoft                                             6     3      3     300
  1085 ;;                                             11 COMMON     3     0      3
  1086 ;;                                              0 BANK0      3     3      0
  1087 ;;                           ___ftpack
  1088 ;;                            ___ftneg (ARG)
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (2) ___lbtoft                                             8     5      3     231
  1091 ;;                                              8 COMMON     4     1      3
  1092 ;;                                              0 BANK0      4     4      0
  1093 ;;                           ___ftpack
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (2) ___ftmul                                             16    10      6     535
  1096 ;;                                              3 BANK0     16    10      6
  1097 ;;                           ___ftpack
  1098 ;;                           ___awtoft (ARG)
  1099 ;;                              _frexp (ARG)
  1100 ;; ---------------------------------------------------------------------------------
  1101 ;; (4) ___ftdiv                                             16    10      6     489
  1102 ;;                                              8 COMMON     6     0      6
  1103 ;;                                              0 BANK0     10    10      0
  1104 ;;                           ___ftpack
  1105 ;; ---------------------------------------------------------------------------------
  1106 ;; (5) ___ftadd                                             13     7      6    1049
  1107 ;;                                             19 BANK0     13     7      6
  1108 ;;                           ___ftpack
  1109 ;;                            ___ftneg (ARG)
  1110 ;;                           ___awtoft (ARG)
  1111 ;;                            ___ftmul (ARG)
  1112 ;;                              _frexp (ARG)
  1113 ;;                             ___bmul (ARG)
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (1) _DelaySec                                             5     3      2     114
  1116 ;;                                              4 COMMON     5     3      2
  1117 ;;                            _DelayMs
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (2) _intToStr                                             9     4      5    1177
  1120 ;;                                              0 BANK0      9     4      5
  1121 ;;                            ___awmod
  1122 ;;                            ___awdiv
  1123 ;;                            _reverse
  1124 ;;                            ___fttol (ARG)
  1125 ;; ---------------------------------------------------------------------------------
  1126 ;; (1) _lcd_init                                             3     3      0     181
  1127 ;;                                              4 COMMON     3     3      0
  1128 ;;                            _DelayMs
  1129 ;;                          _lcd_write
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (1) _lcd_goto                                             1     1      0      89
  1132 ;;                                              3 COMMON     1     1      0
  1133 ;;                          _lcd_write
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (1) _lcd_puts                                             2     0      2     112
  1136 ;;                                              3 COMMON     2     0      2
  1137 ;;                          _lcd_write
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (1) _lcd_clear                                            0     0      0     135
  1140 ;;                          _lcd_write
  1141 ;;                            _DelayMs
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (5) _frexp                                                6     2      4     224
  1144 ;;                                              0 COMMON     6     2      4
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (3) ___awmod                                              7     3      4     296
  1147 ;;                                              0 COMMON     7     3      4
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (1) ___ftge                                              12     6      6     136
  1150 ;;                                              0 COMMON    12     6      6
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (5) ___ftneg                                              3     0      3      45
  1153 ;;                                              8 COMMON     3     0      3
  1154 ;;                           ___ftpack (ARG)
  1155 ;; ---------------------------------------------------------------------------------
  1156 ;; (3) ___awdiv                                              9     5      4     300
  1157 ;;                                              0 COMMON     9     5      4
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (4) ___fttol                                             14    10      4     252
  1160 ;;                                              0 COMMON    14    10      4
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (3) ___ftpack                                             8     3      5     209
  1163 ;;                                              0 COMMON     8     3      5
  1164 ;; ---------------------------------------------------------------------------------
  1165 ;; (5) ___bmul                                               4     3      1      92
  1166 ;;                                              0 COMMON     4     3      1
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (1) _getch                                                0     0      0       0
  1169 ;; ---------------------------------------------------------------------------------
  1170 ;; (1) _putchOnSerial                                        1     1      0      22
  1171 ;;                                              0 COMMON     1     1      0
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; (1) _init_a2d                                             0     0      0       0
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; (3) _reverse                                             12    10      2     269
  1176 ;;                                              0 COMMON    12    10      2
  1177 ;; ---------------------------------------------------------------------------------
  1178 ;; (2) _lcd_write                                            3     3      0      67
  1179 ;;                                              0 COMMON     3     3      0
  1180 ;; ---------------------------------------------------------------------------------
  1181 ;; (2) _DelayMs                                              4     4      0      68
  1182 ;;                                              0 COMMON     4     4      0
  1183 ;; ---------------------------------------------------------------------------------
  1184 ;; Estimated maximum stack depth 5
  1185 ;; ---------------------------------------------------------------------------------
  1186                           
  1187 ;; Call Graph Graphs:
  1188                           
  1189 ;; _main (ROOT)
  1190 ;;   _DelaySec
  1191 ;;     _DelayMs
  1192 ;;   _lcd_init
  1193 ;;     _DelayMs
  1194 ;;     _lcd_write
  1195 ;;   _lcd_clear
  1196 ;;     _lcd_write
  1197 ;;     _DelayMs
  1198 ;;   _lcd_puts
  1199 ;;     _lcd_write
  1200 ;;   _DelayMs
  1201 ;;   _init_a2d
  1202 ;;   _lcd_goto
  1203 ;;     _lcd_write
  1204 ;;   _read_a2d
  1205 ;;     _DelayMs
  1206 ;;     ___lbtoft
  1207 ;;       ___ftpack
  1208 ;;   ___ftdiv
  1209 ;;     ___ftpack
  1210 ;;   _ftoa
  1211 ;;     ___fttol
  1212 ;;     ___awtoft
  1213 ;;       ___ftpack
  1214 ;;       ___ftneg (ARG)
  1215 ;;         ___ftpack (ARG)
  1216 ;;     ___ftneg
  1217 ;;       ___ftpack (ARG)
  1218 ;;     ___ftadd
  1219 ;;       ___ftpack
  1220 ;;       ___ftneg (ARG)
  1221 ;;         ___ftpack (ARG)
  1222 ;;       ___awtoft (ARG)
  1223 ;;         ___ftpack
  1224 ;;         ___ftneg (ARG)
  1225 ;;           ___ftpack (ARG)
  1226 ;;       ___ftmul (ARG)
  1227 ;;         ___ftpack
  1228 ;;         ___awtoft (ARG)
  1229 ;;           ___ftpack
  1230 ;;           ___ftneg (ARG)
  1231 ;;             ___ftpack (ARG)
  1232 ;;         _frexp (ARG)
  1233 ;;       _frexp (ARG)
  1234 ;;       ___bmul (ARG)
  1235 ;;     _intToStr
  1236 ;;       ___awmod
  1237 ;;       ___awdiv
  1238 ;;       _reverse
  1239 ;;       ___fttol (ARG)
  1240 ;;     _pow
  1241 ;;       ___ftge
  1242 ;;       ___fttol
  1243 ;;       ___lltoft
  1244 ;;         ___ftpack
  1245 ;;       ___ftneg
  1246 ;;         ___ftpack (ARG)
  1247 ;;       _log
  1248 ;;         ___ftge
  1249 ;;         _frexp
  1250 ;;         ___ftmul
  1251 ;;           ___ftpack
  1252 ;;           ___awtoft (ARG)
  1253 ;;             ___ftpack
  1254 ;;             ___ftneg (ARG)
  1255 ;;               ___ftpack (ARG)
  1256 ;;           _frexp (ARG)
  1257 ;;         ___ftadd
  1258 ;;           ___ftpack
  1259 ;;           ___ftneg (ARG)
  1260 ;;             ___ftpack (ARG)
  1261 ;;           ___awtoft (ARG)
  1262 ;;             ___ftpack
  1263 ;;             ___ftneg (ARG)
  1264 ;;               ___ftpack (ARG)
  1265 ;;           ___ftmul (ARG)
  1266 ;;             ___ftpack
  1267 ;;             ___awtoft (ARG)
  1268 ;;               ___ftpack
  1269 ;;               ___ftneg (ARG)
  1270 ;;                 ___ftpack (ARG)
  1271 ;;             _frexp (ARG)
  1272 ;;           _frexp (ARG)
  1273 ;;           ___bmul (ARG)
  1274 ;;         _eval_poly
  1275 ;;           ___bmul
  1276 ;;           ___ftmul
  1277 ;;             ___ftpack
  1278 ;;             ___awtoft (ARG)
  1279 ;;               ___ftpack
  1280 ;;               ___ftneg (ARG)
  1281 ;;                 ___ftpack (ARG)
  1282 ;;             _frexp (ARG)
  1283 ;;           ___ftadd
  1284 ;;             ___ftpack
  1285 ;;             ___ftneg (ARG)
  1286 ;;               ___ftpack (ARG)
  1287 ;;             ___awtoft (ARG)
  1288 ;;               ___ftpack
  1289 ;;               ___ftneg (ARG)
  1290 ;;                 ___ftpack (ARG)
  1291 ;;             ___ftmul (ARG)
  1292 ;;               ___ftpack
  1293 ;;               ___awtoft (ARG)
  1294 ;;                 ___ftpack
  1295 ;;                 ___ftneg (ARG)
  1296 ;;                   ___ftpack (ARG)
  1297 ;;               _frexp (ARG)
  1298 ;;             _frexp (ARG)
  1299 ;;             ___bmul (ARG)
  1300 ;;           _ldexp (ARG)
  1301 ;;             ___ftge
  1302 ;;             ___ftneg
  1303 ;;               ___ftpack (ARG)
  1304 ;;             ___bmul (ARG)
  1305 ;;             ___ftmul (ARG)
  1306 ;;               ___ftpack
  1307 ;;               ___awtoft (ARG)
  1308 ;;                 ___ftpack
  1309 ;;                 ___ftneg (ARG)
  1310 ;;                   ___ftpack (ARG)
  1311 ;;               _frexp (ARG)
  1312 ;;             ___ftadd (ARG)
  1313 ;;               ___ftpack
  1314 ;;               ___ftneg (ARG)
  1315 ;;                 ___ftpack (ARG)
  1316 ;;               ___awtoft (ARG)
  1317 ;;                 ___ftpack
  1318 ;;                 ___ftneg (ARG)
  1319 ;;                   ___ftpack (ARG)
  1320 ;;               ___ftmul (ARG)
  1321 ;;                 ___ftpack
  1322 ;;                 ___awtoft (ARG)
  1323 ;;                   ___ftpack
  1324 ;;                   ___ftneg (ARG)
  1325 ;;                     ___ftpack (ARG)
  1326 ;;                 _frexp (ARG)
  1327 ;;               _frexp (ARG)
  1328 ;;               ___bmul (ARG)
  1329 ;;         ___awtoft
  1330 ;;           ___ftpack
  1331 ;;           ___ftneg (ARG)
  1332 ;;             ___ftpack (ARG)
  1333 ;;       ___ftmul
  1334 ;;         ___ftpack
  1335 ;;         ___awtoft (ARG)
  1336 ;;           ___ftpack
  1337 ;;           ___ftneg (ARG)
  1338 ;;             ___ftpack (ARG)
  1339 ;;         _frexp (ARG)
  1340 ;;       _exp
  1341 ;;         ___ftge
  1342 ;;         ___ftneg
  1343 ;;           ___ftpack (ARG)
  1344 ;;         ___ftmul
  1345 ;;           ___ftpack
  1346 ;;           ___awtoft (ARG)
  1347 ;;             ___ftpack
  1348 ;;             ___ftneg (ARG)
  1349 ;;               ___ftpack (ARG)
  1350 ;;           _frexp (ARG)
  1351 ;;         _floor
  1352 ;;           _frexp
  1353 ;;           ___ftge
  1354 ;;           ___fttol
  1355 ;;           ___altoft
  1356 ;;             ___ftpack
  1357 ;;             ___fttol (ARG)
  1358 ;;           ___ftadd
  1359 ;;             ___ftpack
  1360 ;;             ___ftneg (ARG)
  1361 ;;               ___ftpack (ARG)
  1362 ;;             ___awtoft (ARG)
  1363 ;;               ___ftpack
  1364 ;;               ___ftneg (ARG)
  1365 ;;                 ___ftpack (ARG)
  1366 ;;             ___ftmul (ARG)
  1367 ;;               ___ftpack
  1368 ;;               ___awtoft (ARG)
  1369 ;;                 ___ftpack
  1370 ;;                 ___ftneg (ARG)
  1371 ;;                   ___ftpack (ARG)
  1372 ;;               _frexp (ARG)
  1373 ;;             _frexp (ARG)
  1374 ;;             ___bmul (ARG)
  1375 ;;         ___fttol
  1376 ;;         ___awtoft
  1377 ;;           ___ftpack
  1378 ;;           ___ftneg (ARG)
  1379 ;;             ___ftpack (ARG)
  1380 ;;         ___ftsub
  1381 ;;           ___ftadd
  1382 ;;             ___ftpack
  1383 ;;             ___ftneg (ARG)
  1384 ;;               ___ftpack (ARG)
  1385 ;;             ___awtoft (ARG)
  1386 ;;               ___ftpack
  1387 ;;               ___ftneg (ARG)
  1388 ;;                 ___ftpack (ARG)
  1389 ;;             ___ftmul (ARG)
  1390 ;;               ___ftpack
  1391 ;;               ___awtoft (ARG)
  1392 ;;                 ___ftpack
  1393 ;;                 ___ftneg (ARG)
  1394 ;;                   ___ftpack (ARG)
  1395 ;;               _frexp (ARG)
  1396 ;;             _frexp (ARG)
  1397 ;;             ___bmul (ARG)
  1398 ;;           ___awtoft (ARG)
  1399 ;;             ___ftpack
  1400 ;;             ___ftneg (ARG)
  1401 ;;               ___ftpack (ARG)
  1402 ;;         _eval_poly
  1403 ;;           ___bmul
  1404 ;;           ___ftmul
  1405 ;;             ___ftpack
  1406 ;;             ___awtoft (ARG)
  1407 ;;               ___ftpack
  1408 ;;               ___ftneg (ARG)
  1409 ;;                 ___ftpack (ARG)
  1410 ;;             _frexp (ARG)
  1411 ;;           ___ftadd
  1412 ;;             ___ftpack
  1413 ;;             ___ftneg (ARG)
  1414 ;;               ___ftpack (ARG)
  1415 ;;             ___awtoft (ARG)
  1416 ;;               ___ftpack
  1417 ;;               ___ftneg (ARG)
  1418 ;;                 ___ftpack (ARG)
  1419 ;;             ___ftmul (ARG)
  1420 ;;               ___ftpack
  1421 ;;               ___awtoft (ARG)
  1422 ;;                 ___ftpack
  1423 ;;                 ___ftneg (ARG)
  1424 ;;                   ___ftpack (ARG)
  1425 ;;               _frexp (ARG)
  1426 ;;             _frexp (ARG)
  1427 ;;             ___bmul (ARG)
  1428 ;;           _ldexp (ARG)
  1429 ;;             ___ftge
  1430 ;;             ___ftneg
  1431 ;;               ___ftpack (ARG)
  1432 ;;             ___bmul (ARG)
  1433 ;;             ___ftmul (ARG)
  1434 ;;               ___ftpack
  1435 ;;               ___awtoft (ARG)
  1436 ;;                 ___ftpack
  1437 ;;                 ___ftneg (ARG)
  1438 ;;                   ___ftpack (ARG)
  1439 ;;               _frexp (ARG)
  1440 ;;             ___ftadd (ARG)
  1441 ;;               ___ftpack
  1442 ;;               ___ftneg (ARG)
  1443 ;;                 ___ftpack (ARG)
  1444 ;;               ___awtoft (ARG)
  1445 ;;                 ___ftpack
  1446 ;;                 ___ftneg (ARG)
  1447 ;;                   ___ftpack (ARG)
  1448 ;;               ___ftmul (ARG)
  1449 ;;                 ___ftpack
  1450 ;;                 ___awtoft (ARG)
  1451 ;;                   ___ftpack
  1452 ;;                   ___ftneg (ARG)
  1453 ;;                     ___ftpack (ARG)
  1454 ;;                 _frexp (ARG)
  1455 ;;               _frexp (ARG)
  1456 ;;               ___bmul (ARG)
  1457 ;;         _ldexp
  1458 ;;           ___ftge
  1459 ;;           ___ftneg
  1460 ;;             ___ftpack (ARG)
  1461 ;;           ___bmul (ARG)
  1462 ;;           ___ftmul (ARG)
  1463 ;;             ___ftpack
  1464 ;;             ___awtoft (ARG)
  1465 ;;               ___ftpack
  1466 ;;               ___ftneg (ARG)
  1467 ;;                 ___ftpack (ARG)
  1468 ;;             _frexp (ARG)
  1469 ;;           ___ftadd (ARG)
  1470 ;;             ___ftpack
  1471 ;;             ___ftneg (ARG)
  1472 ;;               ___ftpack (ARG)
  1473 ;;             ___awtoft (ARG)
  1474 ;;               ___ftpack
  1475 ;;               ___ftneg (ARG)
  1476 ;;                 ___ftpack (ARG)
  1477 ;;             ___ftmul (ARG)
  1478 ;;               ___ftpack
  1479 ;;               ___awtoft (ARG)
  1480 ;;                 ___ftpack
  1481 ;;                 ___ftneg (ARG)
  1482 ;;                   ___ftpack (ARG)
  1483 ;;               _frexp (ARG)
  1484 ;;             _frexp (ARG)
  1485 ;;             ___bmul (ARG)
  1486 ;;         ___ftdiv
  1487 ;;           ___ftpack
  1488 ;;         _log (ARG)
  1489 ;;           ___ftge
  1490 ;;           _frexp
  1491 ;;           ___ftmul
  1492 ;;             ___ftpack
  1493 ;;             ___awtoft (ARG)
  1494 ;;               ___ftpack
  1495 ;;               ___ftneg (ARG)
  1496 ;;                 ___ftpack (ARG)
  1497 ;;             _frexp (ARG)
  1498 ;;           ___ftadd
  1499 ;;             ___ftpack
  1500 ;;             ___ftneg (ARG)
  1501 ;;               ___ftpack (ARG)
  1502 ;;             ___awtoft (ARG)
  1503 ;;               ___ftpack
  1504 ;;               ___ftneg (ARG)
  1505 ;;                 ___ftpack (ARG)
  1506 ;;             ___ftmul (ARG)
  1507 ;;               ___ftpack
  1508 ;;               ___awtoft (ARG)
  1509 ;;                 ___ftpack
  1510 ;;                 ___ftneg (ARG)
  1511 ;;                   ___ftpack (ARG)
  1512 ;;               _frexp (ARG)
  1513 ;;             _frexp (ARG)
  1514 ;;             ___bmul (ARG)
  1515 ;;           _eval_poly
  1516 ;;             ___bmul
  1517 ;;             ___ftmul
  1518 ;;               ___ftpack
  1519 ;;               ___awtoft (ARG)
  1520 ;;                 ___ftpack
  1521 ;;                 ___ftneg (ARG)
  1522 ;;                   ___ftpack (ARG)
  1523 ;;               _frexp (ARG)
  1524 ;;             ___ftadd
  1525 ;;               ___ftpack
  1526 ;;               ___ftneg (ARG)
  1527 ;;                 ___ftpack (ARG)
  1528 ;;               ___awtoft (ARG)
  1529 ;;                 ___ftpack
  1530 ;;                 ___ftneg (ARG)
  1531 ;;                   ___ftpack (ARG)
  1532 ;;               ___ftmul (ARG)
  1533 ;;                 ___ftpack
  1534 ;;                 ___awtoft (ARG)
  1535 ;;                   ___ftpack
  1536 ;;                   ___ftneg (ARG)
  1537 ;;                     ___ftpack (ARG)
  1538 ;;                 _frexp (ARG)
  1539 ;;               _frexp (ARG)
  1540 ;;               ___bmul (ARG)
  1541 ;;             _ldexp (ARG)
  1542 ;;               ___ftge
  1543 ;;               ___ftneg
  1544 ;;                 ___ftpack (ARG)
  1545 ;;               ___bmul (ARG)
  1546 ;;               ___ftmul (ARG)
  1547 ;;                 ___ftpack
  1548 ;;                 ___awtoft (ARG)
  1549 ;;                   ___ftpack
  1550 ;;                   ___ftneg (ARG)
  1551 ;;                     ___ftpack (ARG)
  1552 ;;                 _frexp (ARG)
  1553 ;;               ___ftadd (ARG)
  1554 ;;                 ___ftpack
  1555 ;;                 ___ftneg (ARG)
  1556 ;;                   ___ftpack (ARG)
  1557 ;;                 ___awtoft (ARG)
  1558 ;;                   ___ftpack
  1559 ;;                   ___ftneg (ARG)
  1560 ;;                     ___ftpack (ARG)
  1561 ;;                 ___ftmul (ARG)
  1562 ;;                   ___ftpack
  1563 ;;                   ___awtoft (ARG)
  1564 ;;                     ___ftpack
  1565 ;;                     ___ftneg (ARG)
  1566 ;;                       ___ftpack (ARG)
  1567 ;;                   _frexp (ARG)
  1568 ;;                 _frexp (ARG)
  1569 ;;                 ___bmul (ARG)
  1570 ;;           ___awtoft
  1571 ;;             ___ftpack
  1572 ;;             ___ftneg (ARG)
  1573 ;;               ___ftpack (ARG)
  1574 ;;     ___ftmul
  1575 ;;       ___ftpack
  1576 ;;       ___awtoft (ARG)
  1577 ;;         ___ftpack
  1578 ;;         ___ftneg (ARG)
  1579 ;;           ___ftpack (ARG)
  1580 ;;       _frexp (ARG)
  1581 ;;   ___ftge
  1582 ;;   _putchOnSerial
  1583 ;;   _getch
  1584 ;;
  1585                           
  1586 ;; Address spaces:
  1587                           
  1588 ;;Name               Size   Autos  Total    Cost      Usage
  1589 ;;BANK3               60      0       0       9        0.0%
  1590 ;;BITBANK3            60      0       0       8        0.0%
  1591 ;;SFR3                 0      0       0       4        0.0%
  1592 ;;BITSFR3              0      0       0       4        0.0%
  1593 ;;BANK2               60      0       0      11        0.0%
  1594 ;;BITBANK2            60      0       0      10        0.0%
  1595 ;;SFR2                 0      0       0       5        0.0%
  1596 ;;BITSFR2              0      0       0       5        0.0%
  1597 ;;SFR1                 0      0       0       2        0.0%
  1598 ;;BITSFR1              0      0       0       2        0.0%
  1599 ;;BANK1               50     18      29       7       51.3%
  1600 ;;BITBANK1            50      0       0       6        0.0%
  1601 ;;CODE                 0      0       0       0        0.0%
  1602 ;;DATA                 0      0      8C      12        0.0%
  1603 ;;ABS                  0      0      86       3        0.0%
  1604 ;;NULL                 0      0       0       0        0.0%
  1605 ;;STACK                0      0       6       2        0.0%
  1606 ;;BANK0               50     4F      4F       5       98.8%
  1607 ;;BITBANK0            50      0       0       4        0.0%
  1608 ;;SFR0                 0      0       0       1        0.0%
  1609 ;;BITSFR0              0      0       0       1        0.0%
  1610 ;;COMMON               E      E       E       1      100.0%
  1611 ;;BITCOMMON            E      0       0       0        0.0%
  1612 ;;EEDATA             100      0       0       0        0.0%
  1613                           
  1614                           	global	_main
  1615                           psect	maintext,global,class=CODE,delta=2
  1616                           global __pmaintext
  1617  054C                     __pmaintext:
  1618                           
  1619 ;; *************** function _main *****************
  1620 ;; Defined at:
  1621 ;;		line 26 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\USART_main.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  rec             1   78[BANK0 ] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;		None               void
  1628 ;; Registers used:
  1629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 17F/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         0       1       0       0       0
  1637 ;;      Temps:          0       1       0       0       0
  1638 ;;      Totals:         0       2       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels required when called:    6
  1641 ;; This function calls:
  1642 ;;		_DelaySec
  1643 ;;		_lcd_init
  1644 ;;		_lcd_clear
  1645 ;;		_lcd_puts
  1646 ;;		_DelayMs
  1647 ;;		_init_a2d
  1648 ;;		_lcd_goto
  1649 ;;		_read_a2d
  1650 ;;		___ftdiv
  1651 ;;		_ftoa
  1652 ;;		___ftge
  1653 ;;		_putchOnSerial
  1654 ;;		_getch
  1655 ;; This function is called by:
  1656 ;;		Startup code after reset
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           psect	maintext
  1660                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
  1661                           	line	26
  1662                           	global	__size_of_main
  1663  0148                     	__size_of_main	equ	__end_of_main-_main
  1664                           	
  1665  054C                     _main:	
  1666                           	opt	stack 2
  1667                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1668                           	line	28
  1669                           	
  1670  054C                     l6262:	
  1671                           ;USART_main.c: 27: unsigned char rec;
  1672                           ;USART_main.c: 28: TRISD = 0;
  1673  054C  1683               	bsf	status, 5	;RP0=1, select bank1
  1674  054D  1303               	bcf	status, 6	;RP1=0, select bank1
  1675  054E  0188               	clrf	(136)^080h	;volatile
  1676                           	line	29
  1677                           ;USART_main.c: 29: TRISE = 0;
  1678  054F  0189               	clrf	(137)^080h	;volatile
  1679                           	line	30
  1680                           ;USART_main.c: 30: TRISB = 0;
  1681  0550  0186               	clrf	(134)^080h	;volatile
  1682                           	line	31
  1683                           	
  1684  0551                     l6264:	
  1685                           ;USART_main.c: 31: ADCON1 = 3;
  1686  0551  3003               	movlw	(03h)
  1687  0552  009F               	movwf	(159)^080h	;volatile
  1688                           	line	32
  1689                           	
  1690  0553                     l6266:	
  1691                           ;USART_main.c: 32: TRISA = 0xFF;
  1692  0553  30FF               	movlw	(0FFh)
  1693  0554  0085               	movwf	(133)^080h	;volatile
  1694                           	line	33
  1695                           	
  1696  0555                     l6268:	
  1697                           ;USART_main.c: 33: TRISC7=1;
  1698  0555  1787               	bsf	(1087/8)^080h,(1087)&7
  1699                           	line	34
  1700                           	
  1701  0556                     l6270:	
  1702                           ;USART_main.c: 34: TRISC6=0;
  1703  0556  1307               	bcf	(1086/8)^080h,(1086)&7
  1704                           	line	35
  1705                           	
  1706  0557                     l6272:	
  1707                           ;USART_main.c: 35: DelaySec(1);
  1708  0557  3001               	movlw	low(01h)
  1709  0558  00F4               	movwf	(?_DelaySec)
  1710  0559  3000               	movlw	high(01h)
  1711  055A  00F5               	movwf	((?_DelaySec))+1
  1712  055B  160A  118A  2724   	fcall	_DelaySec
              120A  118A         
  1713                           	line	38
  1714                           	
  1715  0560                     l6274:	
  1716                           ;USART_main.c: 38: lcd_init();
  1717  0560  120A  158A  21D0   	fcall	_lcd_init
              120A  118A         
  1718                           	line	39
  1719                           	
  1720  0565                     l6276:	
  1721                           ;USART_main.c: 39: lcd_clear();
  1722  0565  160A  118A  26D6   	fcall	_lcd_clear
              120A  118A         
  1723                           	line	40
  1724                           	
  1725  056A                     l6278:	
  1726                           ;USART_main.c: 40: lcd_puts("Starting...");
  1727  056A  303A               	movlw	low((STR_1-__stringbase))
  1728  056B  00F3               	movwf	(?_lcd_puts)
  1729  056C  3080               	movlw	80h
  1730  056D  00F4               	movwf	(?_lcd_puts+1)
  1731  056E  160A  118A  27D5   	fcall	_lcd_puts
              120A  118A         
  1732                           	line	41
  1733                           	
  1734  0573                     l6280:	
  1735                           ;USART_main.c: 41: DelayMs(1000);
  1736  0573  30E8               	movlw	(0E8h)
  1737  0574  160A  118A  2744   	fcall	_DelayMs
              120A  118A         
  1738                           	line	43
  1739                           	
  1740  0579                     l6282:	
  1741                           ;USART_main.c: 43: nRBPU = 0;
  1742  0579  1683               	bsf	status, 5	;RP0=1, select bank1
  1743  057A  1303               	bcf	status, 6	;RP1=0, select bank1
  1744  057B  1381               	bcf	(1039/8)^080h,(1039)&7
  1745                           	line	45
  1746                           	
  1747  057C                     l6284:	
  1748                           ;USART_main.c: 45: SPBRG = ((int)(4000000L/(16UL * 9600) -1));
  1749  057C  3019               	movlw	(019h)
  1750  057D  0099               	movwf	(153)^080h	;volatile
  1751                           	line	46
  1752                           	
  1753  057E                     l6286:	
  1754                           ;USART_main.c: 46: RCSTA = 0x90;
  1755  057E  3090               	movlw	(090h)
  1756  057F  1283               	bcf	status, 5	;RP0=0, select bank0
  1757  0580  1303               	bcf	status, 6	;RP1=0, select bank0
  1758  0581  0098               	movwf	(24)	;volatile
  1759                           	line	47
  1760                           	
  1761  0582                     l6288:	
  1762                           ;USART_main.c: 47: TXSTA =0x24;
  1763  0582  3024               	movlw	(024h)
  1764  0583  1683               	bsf	status, 5	;RP0=1, select bank1
  1765  0584  1303               	bcf	status, 6	;RP1=0, select bank1
  1766  0585  0098               	movwf	(152)^080h	;volatile
  1767                           	line	49
  1768                           	
  1769  0586                     l6290:	
  1770                           ;USART_main.c: 49: init_a2d();
  1771  0586  160A  118A  2698   	fcall	_init_a2d
              120A  118A         
  1772                           	line	50
  1773                           	
  1774  058B                     l6292:	
  1775                           ;USART_main.c: 50: DelayMs(500);
  1776  058B  30F4               	movlw	(0F4h)
  1777  058C  160A  118A  2744   	fcall	_DelayMs
              120A  118A         
  1778                           	line	52
  1779                           	
  1780  0591                     l6294:	
  1781                           ;USART_main.c: 52: lcd_clear();
  1782  0591  160A  118A  26D6   	fcall	_lcd_clear
              120A  118A         
  1783                           	line	53
  1784                           	
  1785  0596                     l6296:	
  1786                           ;USART_main.c: 53: GIE=0;
  1787  0596  138B               	bcf	(95/8),(95)&7
  1788  0597  2D98               	goto	l6298
  1789                           	line	54
  1790                           ;USART_main.c: 54: while ( 1 ) {
  1791                           	
  1792  0598                     l2143:	
  1793                           	line	56
  1794                           	
  1795  0598                     l6298:	
  1796                           ;USART_main.c: 56: if(send==1) {
  1797  0598  3001               	movlw	01h
  1798  0599  1683               	bsf	status, 5	;RP0=1, select bank1
  1799  059A  1303               	bcf	status, 6	;RP1=0, select bank1
  1800  059B  0647               	xorwf	(_send)^080h,w
  1801  059C  0448               	iorwf	(_send+1)^080h,w
  1802  059D  1D03               	skipz
  1803  059E  2DA0               	goto	u4201
  1804  059F  2DA1               	goto	u4200
  1805  05A0                     u4201:
  1806  05A0  2E40               	goto	l6312
  1807  05A1                     u4200:
  1808                           	line	57
  1809                           	
  1810  05A1                     l6300:	
  1811                           ;USART_main.c: 57: DelayMs(100);
  1812  05A1  3064               	movlw	(064h)
  1813  05A2  160A  118A  2744   	fcall	_DelayMs
              120A  118A         
  1814                           	line	58
  1815                           ;USART_main.c: 58: lcd_goto(0);
  1816  05A7  3000               	movlw	(0)
  1817  05A8  160A  118A  26BC   	fcall	_lcd_goto
              120A  118A         
  1818                           	line	61
  1819                           ;USART_main.c: 61: x= read_a2d(0);
  1820  05AD  3000               	movlw	(0)
  1821  05AE  120A  158A  20B3   	fcall	_read_a2d
              120A  118A         
  1822  05B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1823  05B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1824  05B5  0824               	movf	(0+(?_read_a2d)),w
  1825  05B6  1683               	bsf	status, 5	;RP0=1, select bank1
  1826  05B7  1303               	bcf	status, 6	;RP1=0, select bank1
  1827  05B8  00B8               	movwf	(_x)^080h
  1828  05B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1829  05BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1830  05BB  0825               	movf	(1+(?_read_a2d)),w
  1831  05BC  1683               	bsf	status, 5	;RP0=1, select bank1
  1832  05BD  1303               	bcf	status, 6	;RP1=0, select bank1
  1833  05BE  00B9               	movwf	(_x+1)^080h
  1834  05BF  1283               	bcf	status, 5	;RP0=0, select bank0
  1835  05C0  1303               	bcf	status, 6	;RP1=0, select bank0
  1836  05C1  0826               	movf	(2+(?_read_a2d)),w
  1837  05C2  1683               	bsf	status, 5	;RP0=1, select bank1
  1838  05C3  1303               	bcf	status, 6	;RP1=0, select bank1
  1839  05C4  00BA               	movwf	(_x+2)^080h
  1840                           	line	62
  1841                           ;USART_main.c: 62: x = x/51.0;
  1842  05C5  3000               	movlw	0x0
  1843  05C6  00F8               	movwf	(?___ftdiv)
  1844  05C7  304C               	movlw	0x4c
  1845  05C8  00F9               	movwf	(?___ftdiv+1)
  1846  05C9  3042               	movlw	0x42
  1847  05CA  00FA               	movwf	(?___ftdiv+2)
  1848  05CB  0838               	movf	(_x)^080h,w
  1849  05CC  00FB               	movwf	0+(?___ftdiv)+03h
  1850  05CD  0839               	movf	(_x+1)^080h,w
  1851  05CE  00FC               	movwf	1+(?___ftdiv)+03h
  1852  05CF  083A               	movf	(_x+2)^080h,w
  1853  05D0  00FD               	movwf	2+(?___ftdiv)+03h
  1854  05D1  120A  158A  2597   	fcall	___ftdiv
              120A  118A         
  1855  05D6  0878               	movf	(0+(?___ftdiv)),w
  1856  05D7  1683               	bsf	status, 5	;RP0=1, select bank1
  1857  05D8  1303               	bcf	status, 6	;RP1=0, select bank1
  1858  05D9  00B8               	movwf	(_x)^080h
  1859  05DA  0879               	movf	(1+(?___ftdiv)),w
  1860  05DB  00B9               	movwf	(_x+1)^080h
  1861  05DC  087A               	movf	(2+(?___ftdiv)),w
  1862  05DD  00BA               	movwf	(_x+2)^080h
  1863                           	line	64
  1864                           	
  1865  05DE                     l6302:	
  1866                           ;USART_main.c: 64: ftoa(x, str, 2);
  1867  05DE  0838               	movf	(_x)^080h,w
  1868  05DF  00A8               	movwf	(?_ftoa)^080h
  1869  05E0  0839               	movf	(_x+1)^080h,w
  1870  05E1  00A9               	movwf	(?_ftoa+1)^080h
  1871  05E2  083A               	movf	(_x+2)^080h,w
  1872  05E3  00AA               	movwf	(?_ftoa+2)^080h
  1873  05E4  30BD               	movlw	(_str)&0ffh
  1874  05E5  1283               	bcf	status, 5	;RP0=0, select bank0
  1875  05E6  1303               	bcf	status, 6	;RP1=0, select bank0
  1876  05E7  00ED               	movwf	(??_main+0)+0
  1877  05E8  086D               	movf	(??_main+0)+0,w
  1878  05E9  1683               	bsf	status, 5	;RP0=1, select bank1
  1879  05EA  1303               	bcf	status, 6	;RP1=0, select bank1
  1880  05EB  00AB               	movwf	(0+?_ftoa+03h)^080h
  1881  05EC  3002               	movlw	low(02h)
  1882  05ED  00AC               	movwf	0+(?_ftoa)^080h+04h
  1883  05EE  3000               	movlw	high(02h)
  1884  05EF  00AD               	movwf	(0+(?_ftoa)^080h+04h)+1
  1885  05F0  120A  118A  22CC   	fcall	_ftoa
              120A  118A         
  1886                           	line	66
  1887                           	
  1888  05F5                     l6304:	
  1889                           ;USART_main.c: 66: lcd_puts(str);
  1890  05F5  30BD               	movlw	(_str&0ffh)
  1891  05F6  00F3               	movwf	(?_lcd_puts)
  1892  05F7  3000               	movlw	(0x1/2)
  1893  05F8  00F4               	movwf	(?_lcd_puts+1)
  1894  05F9  160A  118A  27D5   	fcall	_lcd_puts
              120A  118A         
  1895                           	line	68
  1896                           ;USART_main.c: 68: if(x>2.0){
  1897  05FE  3000               	movlw	0x0
  1898  05FF  00F0               	movwf	(?___ftge)
  1899  0600  3000               	movlw	0x0
  1900  0601  00F1               	movwf	(?___ftge+1)
  1901  0602  3040               	movlw	0x40
  1902  0603  00F2               	movwf	(?___ftge+2)
  1903  0604  1683               	bsf	status, 5	;RP0=1, select bank1
  1904  0605  1303               	bcf	status, 6	;RP1=0, select bank1
  1905  0606  0838               	movf	(_x)^080h,w
  1906  0607  00F3               	movwf	0+(?___ftge)+03h
  1907  0608  0839               	movf	(_x+1)^080h,w
  1908  0609  00F4               	movwf	1+(?___ftge)+03h
  1909  060A  083A               	movf	(_x+2)^080h,w
  1910  060B  00F5               	movwf	2+(?___ftge)+03h
  1911  060C  120A  158A  2291   	fcall	___ftge
              120A  118A         
  1912  0611  1803               	btfsc	status,0
  1913  0612  2E14               	goto	u4211
  1914  0613  2E15               	goto	u4210
  1915  0614                     u4211:
  1916  0614  2E2E               	goto	l6308
  1917  0615                     u4210:
  1918                           	line	69
  1919                           	
  1920  0615                     l6306:	
  1921                           ;USART_main.c: 69: putchOnSerial('n');
  1922  0615  306E               	movlw	(06Eh)
  1923  0616  160A  118A  26A4   	fcall	_putchOnSerial
              120A  118A         
  1924                           	line	70
  1925                           ;USART_main.c: 70: DelayMs(100);
  1926  061B  3064               	movlw	(064h)
  1927  061C  160A  118A  2744   	fcall	_DelayMs
              120A  118A         
  1928                           	line	71
  1929                           ;USART_main.c: 71: putchOnSerial('o');
  1930  0621  306F               	movlw	(06Fh)
  1931  0622  160A  118A  26A4   	fcall	_putchOnSerial
              120A  118A         
  1932                           	line	72
  1933                           ;USART_main.c: 72: DelayMs(100);
  1934  0627  3064               	movlw	(064h)
  1935  0628  160A  118A  2744   	fcall	_DelayMs
              120A  118A         
  1936                           	line	73
  1937                           ;USART_main.c: 73: }
  1938  062D  2E3B               	goto	l6310
  1939                           	line	74
  1940                           	
  1941  062E                     l2145:	
  1942                           	
  1943  062E                     l6308:	
  1944                           ;USART_main.c: 74: else {putchOnSerial('l');
  1945  062E  306C               	movlw	(06Ch)
  1946  062F  160A  118A  26A4   	fcall	_putchOnSerial
              120A  118A         
  1947                           	line	75
  1948                           ;USART_main.c: 75: DelayMs(100);
  1949  0634  3064               	movlw	(064h)
  1950  0635  160A  118A  2744   	fcall	_DelayMs
              120A  118A         
  1951  063A  2E3B               	goto	l6310
  1952                           	line	76
  1953                           	
  1954  063B                     l2146:	
  1955                           	line	77
  1956                           	
  1957  063B                     l6310:	
  1958                           ;USART_main.c: 76: }
  1959                           ;USART_main.c: 77: send=0;
  1960  063B  1683               	bsf	status, 5	;RP0=1, select bank1
  1961  063C  1303               	bcf	status, 6	;RP1=0, select bank1
  1962  063D  01C7               	clrf	(_send)^080h
  1963  063E  01C8               	clrf	(_send+1)^080h
  1964                           	line	78
  1965                           ;USART_main.c: 78: }
  1966  063F  2D98               	goto	l6298
  1967                           	line	79
  1968                           	
  1969  0640                     l2144:	
  1970                           	line	80
  1971                           	
  1972  0640                     l6312:	
  1973                           ;USART_main.c: 79: else {
  1974                           ;USART_main.c: 80: rec = getch();
  1975  0640  160A  118A  26C8   	fcall	_getch
              120A  118A         
  1976  0645  1283               	bcf	status, 5	;RP0=0, select bank0
  1977  0646  1303               	bcf	status, 6	;RP1=0, select bank0
  1978  0647  00ED               	movwf	(??_main+0)+0
  1979  0648  086D               	movf	(??_main+0)+0,w
  1980  0649  00EE               	movwf	(main@rec)
  1981                           	line	81
  1982                           	
  1983  064A                     l6314:	
  1984                           ;USART_main.c: 81: DelayMs(100);
  1985  064A  3064               	movlw	(064h)
  1986  064B  160A  118A  2744   	fcall	_DelayMs
              120A  118A         
  1987                           	line	83
  1988                           	
  1989  0650                     l6316:	
  1990                           ;USART_main.c: 83: if(rec!=(0)) {
  1991  0650  1283               	bcf	status, 5	;RP0=0, select bank0
  1992  0651  1303               	bcf	status, 6	;RP1=0, select bank0
  1993  0652  086E               	movf	(main@rec),w
  1994  0653  1D03               	skipz
  1995  0654  2E56               	goto	u4220
  1996  0655  2E88               	goto	l6334
  1997  0656                     u4220:
  1998                           	line	84
  1999                           	
  2000  0656                     l6318:	
  2001                           ;USART_main.c: 84: if(rec=='d') {
  2002  0656  086E               	movf	(main@rec),w
  2003  0657  3A64               	xorlw	064h
  2004  0658  1D03               	skipz
  2005  0659  2E5B               	goto	u4231
  2006  065A  2E5C               	goto	u4230
  2007  065B                     u4231:
  2008  065B  2E6D               	goto	l6326
  2009  065C                     u4230:
  2010                           	line	85
  2011                           	
  2012  065C                     l6320:	
  2013                           ;USART_main.c: 85: RB1=0;
  2014  065C  1086               	bcf	(49/8),(49)&7
  2015                           	line	86
  2016                           	
  2017  065D                     l6322:	
  2018                           ;USART_main.c: 86: lcd_goto(8);
  2019  065D  3008               	movlw	(08h)
  2020  065E  160A  118A  26BC   	fcall	_lcd_goto
              120A  118A         
  2021                           	line	87
  2022                           	
  2023  0663                     l6324:	
  2024                           ;USART_main.c: 87: lcd_puts("Disabled");
  2025  0663  304F               	movlw	low((STR_2-__stringbase))
  2026  0664  00F3               	movwf	(?_lcd_puts)
  2027  0665  3080               	movlw	80h
  2028  0666  00F4               	movwf	(?_lcd_puts+1)
  2029  0667  160A  118A  27D5   	fcall	_lcd_puts
              120A  118A         
  2030                           	line	88
  2031                           ;USART_main.c: 88: }
  2032  066C  2E88               	goto	l6334
  2033                           	line	90
  2034                           	
  2035  066D                     l2149:	
  2036                           	
  2037  066D                     l6326:	
  2038                           ;USART_main.c: 90: else if(rec=='e') {
  2039  066D  1283               	bcf	status, 5	;RP0=0, select bank0
  2040  066E  1303               	bcf	status, 6	;RP1=0, select bank0
  2041  066F  086E               	movf	(main@rec),w
  2042  0670  3A65               	xorlw	065h
  2043  0671  1D03               	skipz
  2044  0672  2E74               	goto	u4241
  2045  0673  2E75               	goto	u4240
  2046  0674                     u4241:
  2047  0674  2E88               	goto	l6334
  2048  0675                     u4240:
  2049                           	line	91
  2050                           	
  2051  0675                     l6328:	
  2052                           ;USART_main.c: 91: RB1=1;
  2053  0675  1486               	bsf	(49/8),(49)&7
  2054                           	line	92
  2055                           	
  2056  0676                     l6330:	
  2057                           ;USART_main.c: 92: lcd_goto(8);
  2058  0676  3008               	movlw	(08h)
  2059  0677  160A  118A  26BC   	fcall	_lcd_goto
              120A  118A         
  2060                           	line	93
  2061                           	
  2062  067C                     l6332:	
  2063                           ;USART_main.c: 93: lcd_puts("Enabled ");
  2064  067C  3046               	movlw	low((STR_3-__stringbase))
  2065  067D  00F3               	movwf	(?_lcd_puts)
  2066  067E  3080               	movlw	80h
  2067  067F  00F4               	movwf	(?_lcd_puts+1)
  2068  0680  160A  118A  27D5   	fcall	_lcd_puts
              120A  118A         
  2069  0685  2E88               	goto	l6334
  2070                           	line	94
  2071                           	
  2072  0686                     l2151:	
  2073  0686  2E88               	goto	l6334
  2074                           	line	95
  2075                           	
  2076  0687                     l2150:	
  2077  0687  2E88               	goto	l6334
  2078                           	
  2079  0688                     l2148:	
  2080                           	line	96
  2081                           	
  2082  0688                     l6334:	
  2083                           ;USART_main.c: 94: }
  2084                           ;USART_main.c: 95: }
  2085                           ;USART_main.c: 96: send=1;
  2086  0688  3001               	movlw	low(01h)
  2087  0689  1683               	bsf	status, 5	;RP0=1, select bank1
  2088  068A  1303               	bcf	status, 6	;RP1=0, select bank1
  2089  068B  00C7               	movwf	(_send)^080h
  2090  068C  3000               	movlw	high(01h)
  2091  068D  00C8               	movwf	((_send)^080h)+1
  2092  068E  2D98               	goto	l6298
  2093                           	line	97
  2094                           	
  2095  068F                     l2147:	
  2096  068F  2D98               	goto	l6298
  2097                           	line	98
  2098                           	
  2099  0690                     l2152:	
  2100                           	line	54
  2101  0690  2D98               	goto	l6298
  2102                           	
  2103  0691                     l2153:	
  2104                           	line	100
  2105                           	
  2106  0691                     l2154:	
  2107                           	global	start
  2108  0691  120A  118A  2800   	ljmp	start
  2109                           	opt stack 0
  2110                           GLOBAL	__end_of_main
  2111  0694                     	__end_of_main:
  2112 ;; =============== function _main ends ============
  2113                           
  2114                           	signat	_main,88
  2115                           	global	_ftoa
  2116                           psect	text791,local,class=CODE,delta=2
  2117                           global __ptext791
  2118  02CC                     __ptext791:
  2119                           
  2120 ;; *************** function _ftoa *****************
  2121 ;; Defined at:
  2122 ;;		line 44 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\string.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  n               3    8[BANK1 ] float 
  2125 ;;  res             1   11[BANK1 ] PTR unsigned char 
  2126 ;;		 -> str(10), 
  2127 ;;  afterpoint      2   12[BANK1 ] int 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  fpart           3   21[BANK1 ] float 
  2130 ;;  i               2   19[BANK1 ] int 
  2131 ;;  ipart           2   17[BANK1 ] int 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       6       0       0
  2142 ;;      Locals:         0       0      10       0       0
  2143 ;;      Temps:          0       2       0       0       0
  2144 ;;      Totals:         0       2      16       0       0
  2145 ;;Total ram usage:       18 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    5
  2148 ;; This function calls:
  2149 ;;		___fttol
  2150 ;;		___awtoft
  2151 ;;		___ftneg
  2152 ;;		___ftadd
  2153 ;;		_intToStr
  2154 ;;		_pow
  2155 ;;		___ftmul
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           psect	text791
  2161                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\string.c"
  2162                           	line	44
  2163                           	global	__size_of_ftoa
  2164  013A                     	__size_of_ftoa	equ	__end_of_ftoa-_ftoa
  2165                           	
  2166  02CC                     _ftoa:	
  2167                           	opt	stack 2
  2168                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2169                           	line	46
  2170                           	
  2171  02CC                     l6248:	
  2172                           ;string.c: 46: int ipart = (int)n;
  2173  02CC  1683               	bsf	status, 5	;RP0=1, select bank1
  2174  02CD  1303               	bcf	status, 6	;RP1=0, select bank1
  2175  02CE  0828               	movf	(ftoa@n)^080h,w
  2176  02CF  00F0               	movwf	(?___fttol)
  2177  02D0  0829               	movf	(ftoa@n+1)^080h,w
  2178  02D1  00F1               	movwf	(?___fttol+1)
  2179  02D2  082A               	movf	(ftoa@n+2)^080h,w
  2180  02D3  00F2               	movwf	(?___fttol+2)
  2181  02D4  120A  158A  24F3   	fcall	___fttol
              120A  118A         
  2182  02D9  0871               	movf	1+(((0+(?___fttol)))),w
  2183  02DA  1683               	bsf	status, 5	;RP0=1, select bank1
  2184  02DB  1303               	bcf	status, 6	;RP1=0, select bank1
  2185  02DC  01B2               	clrf	(ftoa@ipart+1)^080h
  2186  02DD  07B2               	addwf	(ftoa@ipart+1)^080h
  2187  02DE  0870               	movf	0+(((0+(?___fttol)))),w
  2188  02DF  01B1               	clrf	(ftoa@ipart)^080h
  2189  02E0  07B1               	addwf	(ftoa@ipart)^080h
  2190                           
  2191                           	line	49
  2192                           ;string.c: 49: float fpart = n - (float)ipart;
  2193  02E1  0828               	movf	(ftoa@n)^080h,w
  2194  02E2  1283               	bcf	status, 5	;RP0=0, select bank0
  2195  02E3  1303               	bcf	status, 6	;RP1=0, select bank0
  2196  02E4  00B3               	movwf	(?___ftadd)
  2197  02E5  1683               	bsf	status, 5	;RP0=1, select bank1
  2198  02E6  1303               	bcf	status, 6	;RP1=0, select bank1
  2199  02E7  0829               	movf	(ftoa@n+1)^080h,w
  2200  02E8  1283               	bcf	status, 5	;RP0=0, select bank0
  2201  02E9  1303               	bcf	status, 6	;RP1=0, select bank0
  2202  02EA  00B4               	movwf	(?___ftadd+1)
  2203  02EB  1683               	bsf	status, 5	;RP0=1, select bank1
  2204  02EC  1303               	bcf	status, 6	;RP1=0, select bank1
  2205  02ED  082A               	movf	(ftoa@n+2)^080h,w
  2206  02EE  1283               	bcf	status, 5	;RP0=0, select bank0
  2207  02EF  1303               	bcf	status, 6	;RP1=0, select bank0
  2208  02F0  00B5               	movwf	(?___ftadd+2)
  2209  02F1  1683               	bsf	status, 5	;RP0=1, select bank1
  2210  02F2  1303               	bcf	status, 6	;RP1=0, select bank1
  2211  02F3  0832               	movf	(ftoa@ipart+1)^080h,w
  2212  02F4  01FC               	clrf	(?___awtoft+1)
  2213  02F5  07FC               	addwf	(?___awtoft+1)
  2214  02F6  0831               	movf	(ftoa@ipart)^080h,w
  2215  02F7  01FB               	clrf	(?___awtoft)
  2216  02F8  07FB               	addwf	(?___awtoft)
  2217                           
  2218  02F9  160A  118A  27AB   	fcall	___awtoft
              120A  118A         
  2219  02FE  087B               	movf	(0+(?___awtoft)),w
  2220  02FF  00F8               	movwf	(?___ftneg)
  2221  0300  087C               	movf	(1+(?___awtoft)),w
  2222  0301  00F9               	movwf	(?___ftneg+1)
  2223  0302  087D               	movf	(2+(?___awtoft)),w
  2224  0303  00FA               	movwf	(?___ftneg+2)
  2225  0304  160A  118A  26B0   	fcall	___ftneg
              120A  118A         
  2226  0309  0878               	movf	(0+(?___ftneg)),w
  2227  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  2228  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  2229  030C  00B6               	movwf	0+(?___ftadd)+03h
  2230  030D  0879               	movf	(1+(?___ftneg)),w
  2231  030E  00B7               	movwf	1+(?___ftadd)+03h
  2232  030F  087A               	movf	(2+(?___ftneg)),w
  2233  0310  00B8               	movwf	2+(?___ftadd)+03h
  2234  0311  120A  118A  2406   	fcall	___ftadd
              120A  118A         
  2235  0316  1283               	bcf	status, 5	;RP0=0, select bank0
  2236  0317  1303               	bcf	status, 6	;RP1=0, select bank0
  2237  0318  0833               	movf	(0+(?___ftadd)),w
  2238  0319  1683               	bsf	status, 5	;RP0=1, select bank1
  2239  031A  1303               	bcf	status, 6	;RP1=0, select bank1
  2240  031B  00B5               	movwf	(ftoa@fpart)^080h
  2241  031C  1283               	bcf	status, 5	;RP0=0, select bank0
  2242  031D  1303               	bcf	status, 6	;RP1=0, select bank0
  2243  031E  0834               	movf	(1+(?___ftadd)),w
  2244  031F  1683               	bsf	status, 5	;RP0=1, select bank1
  2245  0320  1303               	bcf	status, 6	;RP1=0, select bank1
  2246  0321  00B6               	movwf	(ftoa@fpart+1)^080h
  2247  0322  1283               	bcf	status, 5	;RP0=0, select bank0
  2248  0323  1303               	bcf	status, 6	;RP1=0, select bank0
  2249  0324  0835               	movf	(2+(?___ftadd)),w
  2250  0325  1683               	bsf	status, 5	;RP0=1, select bank1
  2251  0326  1303               	bcf	status, 6	;RP1=0, select bank1
  2252  0327  00B7               	movwf	(ftoa@fpart+2)^080h
  2253                           	line	52
  2254                           	
  2255  0328                     l6250:	
  2256                           ;string.c: 52: int i = intToStr(ipart, res, 0);
  2257  0328  0832               	movf	(ftoa@ipart+1)^080h,w
  2258  0329  1283               	bcf	status, 5	;RP0=0, select bank0
  2259  032A  1303               	bcf	status, 6	;RP1=0, select bank0
  2260  032B  01A1               	clrf	(?_intToStr+1)
  2261  032C  07A1               	addwf	(?_intToStr+1)
  2262  032D  1683               	bsf	status, 5	;RP0=1, select bank1
  2263  032E  1303               	bcf	status, 6	;RP1=0, select bank1
  2264  032F  0831               	movf	(ftoa@ipart)^080h,w
  2265  0330  1283               	bcf	status, 5	;RP0=0, select bank0
  2266  0331  1303               	bcf	status, 6	;RP1=0, select bank0
  2267  0332  01A0               	clrf	(?_intToStr)
  2268  0333  07A0               	addwf	(?_intToStr)
  2269                           
  2270  0334  1683               	bsf	status, 5	;RP0=1, select bank1
  2271  0335  1303               	bcf	status, 6	;RP1=0, select bank1
  2272  0336  082B               	movf	(ftoa@res)^080h,w
  2273  0337  1283               	bcf	status, 5	;RP0=0, select bank0
  2274  0338  1303               	bcf	status, 6	;RP1=0, select bank0
  2275  0339  00EB               	movwf	(??_ftoa+0)+0
  2276  033A  086B               	movf	(??_ftoa+0)+0,w
  2277  033B  00A2               	movwf	(0+?_intToStr+02h)
  2278  033C  3000               	movlw	low(0)
  2279  033D  00A3               	movwf	0+(?_intToStr)+03h
  2280  033E  3000               	movlw	high(0)
  2281  033F  00A4               	movwf	(0+(?_intToStr)+03h)+1
  2282  0340  120A  158A  246B   	fcall	_intToStr
              120A  118A         
  2283  0345  1283               	bcf	status, 5	;RP0=0, select bank0
  2284  0346  1303               	bcf	status, 6	;RP1=0, select bank0
  2285  0347  0821               	movf	(1+(?_intToStr)),w
  2286  0348  1683               	bsf	status, 5	;RP0=1, select bank1
  2287  0349  1303               	bcf	status, 6	;RP1=0, select bank1
  2288  034A  01B4               	clrf	(ftoa@i+1)^080h
  2289  034B  07B4               	addwf	(ftoa@i+1)^080h
  2290  034C  1283               	bcf	status, 5	;RP0=0, select bank0
  2291  034D  1303               	bcf	status, 6	;RP1=0, select bank0
  2292  034E  0820               	movf	(0+(?_intToStr)),w
  2293  034F  1683               	bsf	status, 5	;RP0=1, select bank1
  2294  0350  1303               	bcf	status, 6	;RP1=0, select bank1
  2295  0351  01B3               	clrf	(ftoa@i)^080h
  2296  0352  07B3               	addwf	(ftoa@i)^080h
  2297                           
  2298                           	line	55
  2299                           	
  2300  0353                     l6252:	
  2301                           ;string.c: 55: if (afterpoint != 0)
  2302  0353  082D               	movf	(ftoa@afterpoint+1)^080h,w
  2303  0354  042C               	iorwf	(ftoa@afterpoint)^080h,w
  2304  0355  1903               	skipnz
  2305  0356  2B58               	goto	u4191
  2306  0357  2B59               	goto	u4190
  2307  0358                     u4191:
  2308  0358  2C05               	goto	l1430
  2309  0359                     u4190:
  2310                           	line	57
  2311                           	
  2312  0359                     l6254:	
  2313                           ;string.c: 56: {
  2314                           ;string.c: 57: res[i] = '.';
  2315  0359  302E               	movlw	(02Eh)
  2316  035A  1283               	bcf	status, 5	;RP0=0, select bank0
  2317  035B  1303               	bcf	status, 6	;RP1=0, select bank0
  2318  035C  00EB               	movwf	(??_ftoa+0)+0
  2319  035D  1683               	bsf	status, 5	;RP0=1, select bank1
  2320  035E  1303               	bcf	status, 6	;RP1=0, select bank1
  2321  035F  0833               	movf	(ftoa@i)^080h,w
  2322  0360  072B               	addwf	(ftoa@res)^080h,w
  2323  0361  1283               	bcf	status, 5	;RP0=0, select bank0
  2324  0362  1303               	bcf	status, 6	;RP1=0, select bank0
  2325  0363  00EC               	movwf	(??_ftoa+1)+0
  2326  0364  086C               	movf	0+(??_ftoa+1)+0,w
  2327  0365  0084               	movwf	fsr0
  2328  0366  086B               	movf	(??_ftoa+0)+0,w
  2329  0367  1383               	bcf	status, 7	;select IRP bank0
  2330  0368  0080               	movwf	indf
  2331                           	line	62
  2332                           	
  2333  0369                     l6256:	
  2334                           ;string.c: 62: fpart = fpart * pow(10, afterpoint);
  2335  0369  1683               	bsf	status, 5	;RP0=1, select bank1
  2336  036A  1303               	bcf	status, 6	;RP1=0, select bank1
  2337  036B  082D               	movf	(ftoa@afterpoint+1)^080h,w
  2338  036C  01FC               	clrf	(?___awtoft+1)
  2339  036D  07FC               	addwf	(?___awtoft+1)
  2340  036E  082C               	movf	(ftoa@afterpoint)^080h,w
  2341  036F  01FB               	clrf	(?___awtoft)
  2342  0370  07FB               	addwf	(?___awtoft)
  2343                           
  2344  0371  160A  118A  27AB   	fcall	___awtoft
              120A  118A         
  2345  0376  087B               	movf	(0+(?___awtoft)),w
  2346  0377  1283               	bcf	status, 5	;RP0=0, select bank0
  2347  0378  1303               	bcf	status, 6	;RP1=0, select bank0
  2348  0379  00E7               	movwf	0+(?_pow)+03h
  2349  037A  087C               	movf	(1+(?___awtoft)),w
  2350  037B  00E8               	movwf	1+(?_pow)+03h
  2351  037C  087D               	movf	(2+(?___awtoft)),w
  2352  037D  00E9               	movwf	2+(?_pow)+03h
  2353  037E  3000               	movlw	0x0
  2354  037F  00E4               	movwf	(?_pow)
  2355  0380  3020               	movlw	0x20
  2356  0381  00E5               	movwf	(?_pow+1)
  2357  0382  3041               	movlw	0x41
  2358  0383  00E6               	movwf	(?_pow+2)
  2359  0384  120A  118A  21A1   	fcall	_pow
              120A  118A         
  2360  0389  1283               	bcf	status, 5	;RP0=0, select bank0
  2361  038A  1303               	bcf	status, 6	;RP1=0, select bank0
  2362  038B  0864               	movf	(0+(?_pow)),w
  2363  038C  1683               	bsf	status, 5	;RP0=1, select bank1
  2364  038D  1303               	bcf	status, 6	;RP1=0, select bank1
  2365  038E  00AE               	movwf	(_ftoa$3812)^080h
  2366  038F  1283               	bcf	status, 5	;RP0=0, select bank0
  2367  0390  1303               	bcf	status, 6	;RP1=0, select bank0
  2368  0391  0865               	movf	(1+(?_pow)),w
  2369  0392  1683               	bsf	status, 5	;RP0=1, select bank1
  2370  0393  1303               	bcf	status, 6	;RP1=0, select bank1
  2371  0394  00AF               	movwf	(_ftoa$3812+1)^080h
  2372  0395  1283               	bcf	status, 5	;RP0=0, select bank0
  2373  0396  1303               	bcf	status, 6	;RP1=0, select bank0
  2374  0397  0866               	movf	(2+(?_pow)),w
  2375  0398  1683               	bsf	status, 5	;RP0=1, select bank1
  2376  0399  1303               	bcf	status, 6	;RP1=0, select bank1
  2377  039A  00B0               	movwf	(_ftoa$3812+2)^080h
  2378                           	
  2379  039B                     l6258:	
  2380                           ;string.c: 62: fpart = fpart * pow(10, afterpoint);
  2381  039B  0835               	movf	(ftoa@fpart)^080h,w
  2382  039C  1283               	bcf	status, 5	;RP0=0, select bank0
  2383  039D  1303               	bcf	status, 6	;RP1=0, select bank0
  2384  039E  00A3               	movwf	(?___ftmul)
  2385  039F  1683               	bsf	status, 5	;RP0=1, select bank1
  2386  03A0  1303               	bcf	status, 6	;RP1=0, select bank1
  2387  03A1  0836               	movf	(ftoa@fpart+1)^080h,w
  2388  03A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2389  03A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2390  03A4  00A4               	movwf	(?___ftmul+1)
  2391  03A5  1683               	bsf	status, 5	;RP0=1, select bank1
  2392  03A6  1303               	bcf	status, 6	;RP1=0, select bank1
  2393  03A7  0837               	movf	(ftoa@fpart+2)^080h,w
  2394  03A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2395  03A9  1303               	bcf	status, 6	;RP1=0, select bank0
  2396  03AA  00A5               	movwf	(?___ftmul+2)
  2397  03AB  1683               	bsf	status, 5	;RP0=1, select bank1
  2398  03AC  1303               	bcf	status, 6	;RP1=0, select bank1
  2399  03AD  082E               	movf	(_ftoa$3812)^080h,w
  2400  03AE  1283               	bcf	status, 5	;RP0=0, select bank0
  2401  03AF  1303               	bcf	status, 6	;RP1=0, select bank0
  2402  03B0  00A6               	movwf	0+(?___ftmul)+03h
  2403  03B1  1683               	bsf	status, 5	;RP0=1, select bank1
  2404  03B2  1303               	bcf	status, 6	;RP1=0, select bank1
  2405  03B3  082F               	movf	(_ftoa$3812+1)^080h,w
  2406  03B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2407  03B5  1303               	bcf	status, 6	;RP1=0, select bank0
  2408  03B6  00A7               	movwf	1+(?___ftmul)+03h
  2409  03B7  1683               	bsf	status, 5	;RP0=1, select bank1
  2410  03B8  1303               	bcf	status, 6	;RP1=0, select bank1
  2411  03B9  0830               	movf	(_ftoa$3812+2)^080h,w
  2412  03BA  1283               	bcf	status, 5	;RP0=0, select bank0
  2413  03BB  1303               	bcf	status, 6	;RP1=0, select bank0
  2414  03BC  00A8               	movwf	2+(?___ftmul)+03h
  2415  03BD  120A  118A  20B3   	fcall	___ftmul
              120A  118A         
  2416  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  2417  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  2418  03C4  0823               	movf	(0+(?___ftmul)),w
  2419  03C5  1683               	bsf	status, 5	;RP0=1, select bank1
  2420  03C6  1303               	bcf	status, 6	;RP1=0, select bank1
  2421  03C7  00B5               	movwf	(ftoa@fpart)^080h
  2422  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2423  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2424  03CA  0824               	movf	(1+(?___ftmul)),w
  2425  03CB  1683               	bsf	status, 5	;RP0=1, select bank1
  2426  03CC  1303               	bcf	status, 6	;RP1=0, select bank1
  2427  03CD  00B6               	movwf	(ftoa@fpart+1)^080h
  2428  03CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2429  03CF  1303               	bcf	status, 6	;RP1=0, select bank0
  2430  03D0  0825               	movf	(2+(?___ftmul)),w
  2431  03D1  1683               	bsf	status, 5	;RP0=1, select bank1
  2432  03D2  1303               	bcf	status, 6	;RP1=0, select bank1
  2433  03D3  00B7               	movwf	(ftoa@fpart+2)^080h
  2434                           	line	64
  2435                           	
  2436  03D4                     l6260:	
  2437                           ;string.c: 64: intToStr((int)fpart, res + i + 1, afterpoint);
  2438  03D4  0835               	movf	(ftoa@fpart)^080h,w
  2439  03D5  00F0               	movwf	(?___fttol)
  2440  03D6  0836               	movf	(ftoa@fpart+1)^080h,w
  2441  03D7  00F1               	movwf	(?___fttol+1)
  2442  03D8  0837               	movf	(ftoa@fpart+2)^080h,w
  2443  03D9  00F2               	movwf	(?___fttol+2)
  2444  03DA  120A  158A  24F3   	fcall	___fttol
              120A  118A         
  2445  03DF  0871               	movf	1+(((0+(?___fttol)))),w
  2446  03E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2447  03E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2448  03E2  01A1               	clrf	(?_intToStr+1)
  2449  03E3  07A1               	addwf	(?_intToStr+1)
  2450  03E4  0870               	movf	0+(((0+(?___fttol)))),w
  2451  03E5  01A0               	clrf	(?_intToStr)
  2452  03E6  07A0               	addwf	(?_intToStr)
  2453                           
  2454  03E7  1683               	bsf	status, 5	;RP0=1, select bank1
  2455  03E8  1303               	bcf	status, 6	;RP1=0, select bank1
  2456  03E9  0833               	movf	(ftoa@i)^080h,w
  2457  03EA  072B               	addwf	(ftoa@res)^080h,w
  2458  03EB  3E01               	addlw	01h
  2459  03EC  1283               	bcf	status, 5	;RP0=0, select bank0
  2460  03ED  1303               	bcf	status, 6	;RP1=0, select bank0
  2461  03EE  00EB               	movwf	(??_ftoa+0)+0
  2462  03EF  086B               	movf	(??_ftoa+0)+0,w
  2463  03F0  00A2               	movwf	(0+?_intToStr+02h)
  2464  03F1  1683               	bsf	status, 5	;RP0=1, select bank1
  2465  03F2  1303               	bcf	status, 6	;RP1=0, select bank1
  2466  03F3  082D               	movf	(ftoa@afterpoint+1)^080h,w
  2467  03F4  1283               	bcf	status, 5	;RP0=0, select bank0
  2468  03F5  1303               	bcf	status, 6	;RP1=0, select bank0
  2469  03F6  01A4               	clrf	1+(?_intToStr)+03h
  2470  03F7  07A4               	addwf	1+(?_intToStr)+03h
  2471  03F8  1683               	bsf	status, 5	;RP0=1, select bank1
  2472  03F9  1303               	bcf	status, 6	;RP1=0, select bank1
  2473  03FA  082C               	movf	(ftoa@afterpoint)^080h,w
  2474  03FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2475  03FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2476  03FD  01A3               	clrf	0+(?_intToStr)+03h
  2477  03FE  07A3               	addwf	0+(?_intToStr)+03h
  2478                           
  2479  03FF  120A  158A  246B   	fcall	_intToStr
              120A  118A         
  2480  0404  2C05               	goto	l1430
  2481                           	line	65
  2482                           	
  2483  0405                     l1429:	
  2484                           	line	66
  2485                           	
  2486  0405                     l1430:	
  2487  0405  0008               	return
  2488                           	opt stack 0
  2489                           GLOBAL	__end_of_ftoa
  2490  0406                     	__end_of_ftoa:
  2491 ;; =============== function _ftoa ends ============
  2492                           
  2493                           	signat	_ftoa,12408
  2494                           	global	_pow
  2495                           psect	text792,local,class=CODE,delta=2
  2496                           global __ptext792
  2497  01A1                     __ptext792:
  2498                           
  2499 ;; *************** function _pow *****************
  2500 ;; Defined at:
  2501 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\pow.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  x               3   68[BANK0 ] int 
  2504 ;;  y               3   71[BANK0 ] int 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  yi              4    4[BANK1 ] unsigned long 
  2507 ;;  sign            1    3[BANK1 ] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  3   68[BANK0 ] unsigned char 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       6       0       0       0
  2518 ;;      Locals:         0       0       8       0       0
  2519 ;;      Temps:          0       1       0       0       0
  2520 ;;      Totals:         0       7       8       0       0
  2521 ;;Total ram usage:       15 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    4
  2524 ;; This function calls:
  2525 ;;		___ftge
  2526 ;;		___fttol
  2527 ;;		___lltoft
  2528 ;;		___ftneg
  2529 ;;		_log
  2530 ;;		___ftmul
  2531 ;;		_exp
  2532 ;; This function is called by:
  2533 ;;		_ftoa
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           psect	text792
  2537                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\pow.c"
  2538                           	line	6
  2539                           	global	__size_of_pow
  2540  012B                     	__size_of_pow	equ	__end_of_pow-_pow
  2541                           	
  2542  01A1                     _pow:	
  2543                           	opt	stack 2
  2544                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2545                           	line	7
  2546                           	
  2547  01A1                     l6210:	
  2548  01A1  1683               	bsf	status, 5	;RP0=1, select bank1
  2549  01A2  1303               	bcf	status, 6	;RP1=0, select bank1
  2550  01A3  01A3               	clrf	(pow@sign)^080h
  2551                           	line	10
  2552                           	
  2553  01A4                     l6212:	
  2554  01A4  1283               	bcf	status, 5	;RP0=0, select bank0
  2555  01A5  1303               	bcf	status, 6	;RP1=0, select bank0
  2556  01A6  0866               	movf	(pow@x+2),w
  2557  01A7  0465               	iorwf	(pow@x+1),w
  2558  01A8  0464               	iorwf	(pow@x),w
  2559  01A9  1D03               	skipz
  2560  01AA  29AC               	goto	u4131
  2561  01AB  29AD               	goto	u4130
  2562  01AC                     u4131:
  2563  01AC  29D2               	goto	l6220
  2564  01AD                     u4130:
  2565                           	line	11
  2566                           	
  2567  01AD                     l6214:	
  2568  01AD  3000               	movlw	0x0
  2569  01AE  00F0               	movwf	(?___ftge)
  2570  01AF  3000               	movlw	0x0
  2571  01B0  00F1               	movwf	(?___ftge+1)
  2572  01B1  3000               	movlw	0x0
  2573  01B2  00F2               	movwf	(?___ftge+2)
  2574  01B3  0867               	movf	(pow@y),w
  2575  01B4  00F3               	movwf	0+(?___ftge)+03h
  2576  01B5  0868               	movf	(pow@y+1),w
  2577  01B6  00F4               	movwf	1+(?___ftge)+03h
  2578  01B7  0869               	movf	(pow@y+2),w
  2579  01B8  00F5               	movwf	2+(?___ftge)+03h
  2580  01B9  120A  158A  2291   	fcall	___ftge
              120A  118A         
  2581  01BE  1C03               	btfss	status,0
  2582  01BF  29C1               	goto	u4141
  2583  01C0  29C2               	goto	u4140
  2584  01C1                     u4141:
  2585  01C1  29C8               	goto	l2864
  2586  01C2                     u4140:
  2587                           	line	12
  2588                           	
  2589  01C2                     l6216:	
  2590  01C2  3021               	movlw	low(021h)
  2591  01C3  1683               	bsf	status, 5	;RP0=1, select bank1
  2592  01C4  1303               	bcf	status, 6	;RP1=0, select bank1
  2593  01C5  00BB               	movwf	(_errno)^080h
  2594  01C6  3000               	movlw	high(021h)
  2595  01C7  00BC               	movwf	((_errno)^080h)+1
  2596                           	line	13
  2597                           	
  2598  01C8                     l2864:	
  2599                           	line	14
  2600  01C8  3000               	movlw	0x0
  2601  01C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2602  01CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2603  01CB  00E4               	movwf	(?_pow)
  2604  01CC  3000               	movlw	0x0
  2605  01CD  00E5               	movwf	(?_pow+1)
  2606  01CE  3000               	movlw	0x0
  2607  01CF  00E6               	movwf	(?_pow+2)
  2608  01D0  2ACB               	goto	l2865
  2609                           	
  2610  01D1                     l6218:	
  2611  01D1  2ACB               	goto	l2865
  2612                           	line	15
  2613                           	
  2614  01D2                     l2863:	
  2615                           	line	16
  2616                           	
  2617  01D2                     l6220:	
  2618  01D2  0869               	movf	(pow@y+2),w
  2619  01D3  0468               	iorwf	(pow@y+1),w
  2620  01D4  0467               	iorwf	(pow@y),w
  2621  01D5  1D03               	skipz
  2622  01D6  29D8               	goto	u4151
  2623  01D7  29D9               	goto	u4150
  2624  01D8                     u4151:
  2625  01D8  29E1               	goto	l6226
  2626  01D9                     u4150:
  2627                           	line	17
  2628                           	
  2629  01D9                     l6222:	
  2630  01D9  3000               	movlw	0x0
  2631  01DA  00E4               	movwf	(?_pow)
  2632  01DB  3080               	movlw	0x80
  2633  01DC  00E5               	movwf	(?_pow+1)
  2634  01DD  303F               	movlw	0x3f
  2635  01DE  00E6               	movwf	(?_pow+2)
  2636  01DF  2ACB               	goto	l2865
  2637                           	
  2638  01E0                     l6224:	
  2639  01E0  2ACB               	goto	l2865
  2640                           	
  2641  01E1                     l2866:	
  2642                           	line	18
  2643                           	
  2644  01E1                     l6226:	
  2645  01E1  0864               	movf	(pow@x),w
  2646  01E2  00F0               	movwf	(?___ftge)
  2647  01E3  0865               	movf	(pow@x+1),w
  2648  01E4  00F1               	movwf	(?___ftge+1)
  2649  01E5  0866               	movf	(pow@x+2),w
  2650  01E6  00F2               	movwf	(?___ftge+2)
  2651  01E7  3000               	movlw	0x0
  2652  01E8  00F3               	movwf	0+(?___ftge)+03h
  2653  01E9  3000               	movlw	0x0
  2654  01EA  00F4               	movwf	1+(?___ftge)+03h
  2655  01EB  3000               	movlw	0x0
  2656  01EC  00F5               	movwf	2+(?___ftge)+03h
  2657  01ED  120A  158A  2291   	fcall	___ftge
              120A  118A         
  2658  01F2  1803               	btfsc	status,0
  2659  01F3  29F5               	goto	u4161
  2660  01F4  29F6               	goto	u4160
  2661  01F5                     u4161:
  2662  01F5  2A5B               	goto	l6238
  2663  01F6                     u4160:
  2664                           	line	19
  2665                           	
  2666  01F6                     l6228:	
  2667  01F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2668  01F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2669  01F8  0867               	movf	(pow@y),w
  2670  01F9  00F0               	movwf	(?___fttol)
  2671  01FA  0868               	movf	(pow@y+1),w
  2672  01FB  00F1               	movwf	(?___fttol+1)
  2673  01FC  0869               	movf	(pow@y+2),w
  2674  01FD  00F2               	movwf	(?___fttol+2)
  2675  01FE  120A  158A  24F3   	fcall	___fttol
              120A  118A         
  2676  0203  0873               	movf	(3+(?___fttol)),w
  2677  0204  1683               	bsf	status, 5	;RP0=1, select bank1
  2678  0205  1303               	bcf	status, 6	;RP1=0, select bank1
  2679  0206  00A7               	movwf	(pow@yi+3)^080h
  2680  0207  0872               	movf	(2+(?___fttol)),w
  2681  0208  00A6               	movwf	(pow@yi+2)^080h
  2682  0209  0871               	movf	(1+(?___fttol)),w
  2683  020A  00A5               	movwf	(pow@yi+1)^080h
  2684  020B  0870               	movf	(0+(?___fttol)),w
  2685  020C  00A4               	movwf	(pow@yi)^080h
  2686                           
  2687                           	line	20
  2688  020D  0827               	movf	(pow@yi+3)^080h,w
  2689  020E  00FB               	movwf	(?___lltoft+3)
  2690  020F  0826               	movf	(pow@yi+2)^080h,w
  2691  0210  00FA               	movwf	(?___lltoft+2)
  2692  0211  0825               	movf	(pow@yi+1)^080h,w
  2693  0212  00F9               	movwf	(?___lltoft+1)
  2694  0213  0824               	movf	(pow@yi)^080h,w
  2695  0214  00F8               	movwf	(?___lltoft)
  2696                           
  2697  0215  120A  158A  2081   	fcall	___lltoft
              120A  118A         
  2698  021A  1283               	bcf	status, 5	;RP0=0, select bank0
  2699  021B  1303               	bcf	status, 6	;RP1=0, select bank0
  2700  021C  0869               	movf	(pow@y+2),w
  2701  021D  067A               	xorwf	(2+(?___lltoft)),w
  2702  021E  1D03               	skipz
  2703  021F  2A26               	goto	u4175
  2704  0220  0868               	movf	(pow@y+1),w
  2705  0221  0679               	xorwf	(1+(?___lltoft)),w
  2706  0222  1D03               	skipz
  2707  0223  2A26               	goto	u4175
  2708  0224  0867               	movf	(pow@y),w
  2709  0225  0678               	xorwf	(0+(?___lltoft)),w
  2710  0226                     u4175:
  2711  0226  1903               	skipnz
  2712  0227  2A29               	goto	u4171
  2713  0228  2A2A               	goto	u4170
  2714  0229                     u4171:
  2715  0229  2A3A               	goto	l6234
  2716  022A                     u4170:
  2717                           	line	21
  2718                           	
  2719  022A                     l6230:	
  2720  022A  3021               	movlw	low(021h)
  2721  022B  1683               	bsf	status, 5	;RP0=1, select bank1
  2722  022C  1303               	bcf	status, 6	;RP1=0, select bank1
  2723  022D  00BB               	movwf	(_errno)^080h
  2724  022E  3000               	movlw	high(021h)
  2725  022F  00BC               	movwf	((_errno)^080h)+1
  2726                           	line	22
  2727  0230  3000               	movlw	0x0
  2728  0231  1283               	bcf	status, 5	;RP0=0, select bank0
  2729  0232  1303               	bcf	status, 6	;RP1=0, select bank0
  2730  0233  00E4               	movwf	(?_pow)
  2731  0234  3000               	movlw	0x0
  2732  0235  00E5               	movwf	(?_pow+1)
  2733  0236  3000               	movlw	0x0
  2734  0237  00E6               	movwf	(?_pow+2)
  2735  0238  2ACB               	goto	l2865
  2736                           	
  2737  0239                     l6232:	
  2738  0239  2ACB               	goto	l2865
  2739                           	line	23
  2740                           	
  2741  023A                     l2868:	
  2742                           	line	24
  2743                           	
  2744  023A                     l6234:	
  2745  023A  1683               	bsf	status, 5	;RP0=1, select bank1
  2746  023B  1303               	bcf	status, 6	;RP1=0, select bank1
  2747  023C  0824               	movf	(pow@yi)^080h,w
  2748  023D  3901               	andlw	01h
  2749  023E  1283               	bcf	status, 5	;RP0=0, select bank0
  2750  023F  1303               	bcf	status, 6	;RP1=0, select bank0
  2751  0240  00EA               	movwf	(??_pow+0)+0
  2752  0241  086A               	movf	(??_pow+0)+0,w
  2753  0242  1683               	bsf	status, 5	;RP0=1, select bank1
  2754  0243  1303               	bcf	status, 6	;RP1=0, select bank1
  2755  0244  00A3               	movwf	(pow@sign)^080h
  2756                           	line	25
  2757                           	
  2758  0245                     l6236:	
  2759  0245  1283               	bcf	status, 5	;RP0=0, select bank0
  2760  0246  1303               	bcf	status, 6	;RP1=0, select bank0
  2761  0247  0864               	movf	(pow@x),w
  2762  0248  00F8               	movwf	(?___ftneg)
  2763  0249  0865               	movf	(pow@x+1),w
  2764  024A  00F9               	movwf	(?___ftneg+1)
  2765  024B  0866               	movf	(pow@x+2),w
  2766  024C  00FA               	movwf	(?___ftneg+2)
  2767  024D  160A  118A  26B0   	fcall	___ftneg
              120A  118A         
  2768  0252  0878               	movf	(0+(?___ftneg)),w
  2769  0253  1283               	bcf	status, 5	;RP0=0, select bank0
  2770  0254  1303               	bcf	status, 6	;RP1=0, select bank0
  2771  0255  00E4               	movwf	(pow@x)
  2772  0256  0879               	movf	(1+(?___ftneg)),w
  2773  0257  00E5               	movwf	(pow@x+1)
  2774  0258  087A               	movf	(2+(?___ftneg)),w
  2775  0259  00E6               	movwf	(pow@x+2)
  2776  025A  2A5B               	goto	l6238
  2777                           	line	26
  2778                           	
  2779  025B                     l2867:	
  2780                           	line	27
  2781                           	
  2782  025B                     l6238:	
  2783  025B  1283               	bcf	status, 5	;RP0=0, select bank0
  2784  025C  1303               	bcf	status, 6	;RP1=0, select bank0
  2785  025D  0864               	movf	(pow@x),w
  2786  025E  00D4               	movwf	(?_log)
  2787  025F  0865               	movf	(pow@x+1),w
  2788  0260  00D5               	movwf	(?_log+1)
  2789  0261  0866               	movf	(pow@x+2),w
  2790  0262  00D6               	movwf	(?_log+2)
  2791  0263  120A  158A  2727   	fcall	_log
              120A  118A         
  2792  0268  1283               	bcf	status, 5	;RP0=0, select bank0
  2793  0269  1303               	bcf	status, 6	;RP1=0, select bank0
  2794  026A  0854               	movf	(0+(?_log)),w
  2795  026B  1683               	bsf	status, 5	;RP0=1, select bank1
  2796  026C  1303               	bcf	status, 6	;RP1=0, select bank1
  2797  026D  00A0               	movwf	(_pow$3813)^080h
  2798  026E  1283               	bcf	status, 5	;RP0=0, select bank0
  2799  026F  1303               	bcf	status, 6	;RP1=0, select bank0
  2800  0270  0855               	movf	(1+(?_log)),w
  2801  0271  1683               	bsf	status, 5	;RP0=1, select bank1
  2802  0272  1303               	bcf	status, 6	;RP1=0, select bank1
  2803  0273  00A1               	movwf	(_pow$3813+1)^080h
  2804  0274  1283               	bcf	status, 5	;RP0=0, select bank0
  2805  0275  1303               	bcf	status, 6	;RP1=0, select bank0
  2806  0276  0856               	movf	(2+(?_log)),w
  2807  0277  1683               	bsf	status, 5	;RP0=1, select bank1
  2808  0278  1303               	bcf	status, 6	;RP1=0, select bank1
  2809  0279  00A2               	movwf	(_pow$3813+2)^080h
  2810                           	
  2811  027A                     l6240:	
  2812  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  2813  027B  1303               	bcf	status, 6	;RP1=0, select bank0
  2814  027C  0867               	movf	(pow@y),w
  2815  027D  00A3               	movwf	(?___ftmul)
  2816  027E  0868               	movf	(pow@y+1),w
  2817  027F  00A4               	movwf	(?___ftmul+1)
  2818  0280  0869               	movf	(pow@y+2),w
  2819  0281  00A5               	movwf	(?___ftmul+2)
  2820  0282  1683               	bsf	status, 5	;RP0=1, select bank1
  2821  0283  1303               	bcf	status, 6	;RP1=0, select bank1
  2822  0284  0820               	movf	(_pow$3813)^080h,w
  2823  0285  1283               	bcf	status, 5	;RP0=0, select bank0
  2824  0286  1303               	bcf	status, 6	;RP1=0, select bank0
  2825  0287  00A6               	movwf	0+(?___ftmul)+03h
  2826  0288  1683               	bsf	status, 5	;RP0=1, select bank1
  2827  0289  1303               	bcf	status, 6	;RP1=0, select bank1
  2828  028A  0821               	movf	(_pow$3813+1)^080h,w
  2829  028B  1283               	bcf	status, 5	;RP0=0, select bank0
  2830  028C  1303               	bcf	status, 6	;RP1=0, select bank0
  2831  028D  00A7               	movwf	1+(?___ftmul)+03h
  2832  028E  1683               	bsf	status, 5	;RP0=1, select bank1
  2833  028F  1303               	bcf	status, 6	;RP1=0, select bank1
  2834  0290  0822               	movf	(_pow$3813+2)^080h,w
  2835  0291  1283               	bcf	status, 5	;RP0=0, select bank0
  2836  0292  1303               	bcf	status, 6	;RP1=0, select bank0
  2837  0293  00A8               	movwf	2+(?___ftmul)+03h
  2838  0294  120A  118A  20B3   	fcall	___ftmul
              120A  118A         
  2839  0299  1283               	bcf	status, 5	;RP0=0, select bank0
  2840  029A  1303               	bcf	status, 6	;RP1=0, select bank0
  2841  029B  0823               	movf	(0+(?___ftmul)),w
  2842  029C  00DA               	movwf	(?_exp)
  2843  029D  0824               	movf	(1+(?___ftmul)),w
  2844  029E  00DB               	movwf	(?_exp+1)
  2845  029F  0825               	movf	(2+(?___ftmul)),w
  2846  02A0  00DC               	movwf	(?_exp+2)
  2847  02A1  120A  118A  2694   	fcall	_exp
              120A  118A         
  2848  02A6  1283               	bcf	status, 5	;RP0=0, select bank0
  2849  02A7  1303               	bcf	status, 6	;RP1=0, select bank0
  2850  02A8  085A               	movf	(0+(?_exp)),w
  2851  02A9  00E4               	movwf	(pow@x)
  2852  02AA  085B               	movf	(1+(?_exp)),w
  2853  02AB  00E5               	movwf	(pow@x+1)
  2854  02AC  085C               	movf	(2+(?_exp)),w
  2855  02AD  00E6               	movwf	(pow@x+2)
  2856                           	line	28
  2857                           	
  2858  02AE                     l6242:	
  2859  02AE  1683               	bsf	status, 5	;RP0=1, select bank1
  2860  02AF  1303               	bcf	status, 6	;RP1=0, select bank1
  2861  02B0  0823               	movf	(pow@sign)^080h,w
  2862  02B1  1D03               	skipz
  2863  02B2  2AB4               	goto	u4180
  2864  02B3  2ACB               	goto	l2869
  2865  02B4                     u4180:
  2866                           	line	29
  2867                           	
  2868  02B4                     l6244:	
  2869  02B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2870  02B5  1303               	bcf	status, 6	;RP1=0, select bank0
  2871  02B6  0864               	movf	(pow@x),w
  2872  02B7  00F8               	movwf	(?___ftneg)
  2873  02B8  0865               	movf	(pow@x+1),w
  2874  02B9  00F9               	movwf	(?___ftneg+1)
  2875  02BA  0866               	movf	(pow@x+2),w
  2876  02BB  00FA               	movwf	(?___ftneg+2)
  2877  02BC  160A  118A  26B0   	fcall	___ftneg
              120A  118A         
  2878  02C1  0878               	movf	(0+(?___ftneg)),w
  2879  02C2  1283               	bcf	status, 5	;RP0=0, select bank0
  2880  02C3  1303               	bcf	status, 6	;RP1=0, select bank0
  2881  02C4  00E4               	movwf	(?_pow)
  2882  02C5  0879               	movf	(1+(?___ftneg)),w
  2883  02C6  00E5               	movwf	(?_pow+1)
  2884  02C7  087A               	movf	(2+(?___ftneg)),w
  2885  02C8  00E6               	movwf	(?_pow+2)
  2886  02C9  2ACB               	goto	l2865
  2887                           	
  2888  02CA                     l6246:	
  2889  02CA  2ACB               	goto	l2865
  2890                           	
  2891  02CB                     l2869:	
  2892                           	line	30
  2893                           	line	31
  2894                           	
  2895  02CB                     l2865:	
  2896  02CB  0008               	return
  2897                           	opt stack 0
  2898                           GLOBAL	__end_of_pow
  2899  02CC                     	__end_of_pow:
  2900 ;; =============== function _pow ends ============
  2901                           
  2902                           	signat	_pow,8315
  2903                           	global	_exp
  2904                           psect	text793,local,class=CODE,delta=2
  2905                           global __ptext793
  2906  0694                     __ptext793:
  2907                           
  2908 ;; *************** function _exp *****************
  2909 ;; Defined at:
  2910 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\exp.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  x               3   58[BANK0 ] unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  exp             2   65[BANK0 ] int 
  2915 ;;  sign            1   67[BANK0 ] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  3   58[BANK0 ] unsigned char 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       3       0       0       0
  2926 ;;      Locals:         0       6       0       0       0
  2927 ;;      Temps:          0       1       0       0       0
  2928 ;;      Totals:         0      10       0       0       0
  2929 ;;Total ram usage:       10 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    3
  2932 ;; This function calls:
  2933 ;;		___ftge
  2934 ;;		___ftneg
  2935 ;;		___ftmul
  2936 ;;		_floor
  2937 ;;		___fttol
  2938 ;;		___awtoft
  2939 ;;		___ftsub
  2940 ;;		_eval_poly
  2941 ;;		_ldexp
  2942 ;;		___ftdiv
  2943 ;; This function is called by:
  2944 ;;		_pow
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           psect	text793
  2948                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\exp.c"
  2949                           	line	13
  2950                           	global	__size_of_exp
  2951  016C                     	__size_of_exp	equ	__end_of_exp-_exp
  2952                           	
  2953  0694                     _exp:	
  2954                           	opt	stack 2
  2955                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2956                           	line	31
  2957                           	
  2958  0694                     l6158:	
  2959  0694  1283               	bcf	status, 5	;RP0=0, select bank0
  2960  0695  1303               	bcf	status, 6	;RP1=0, select bank0
  2961  0696  085C               	movf	(exp@x+2),w
  2962  0697  045B               	iorwf	(exp@x+1),w
  2963  0698  045A               	iorwf	(exp@x),w
  2964  0699  1D03               	skipz
  2965  069A  2E9C               	goto	u4071
  2966  069B  2E9D               	goto	u4070
  2967  069C                     u4071:
  2968  069C  2EA5               	goto	l6164
  2969  069D                     u4070:
  2970                           	line	32
  2971                           	
  2972  069D                     l6160:	
  2973  069D  3000               	movlw	0x0
  2974  069E  00DA               	movwf	(?_exp)
  2975  069F  3080               	movlw	0x80
  2976  06A0  00DB               	movwf	(?_exp+1)
  2977  06A1  303F               	movlw	0x3f
  2978  06A2  00DC               	movwf	(?_exp+2)
  2979  06A3  2FFF               	goto	l3223
  2980                           	
  2981  06A4                     l6162:	
  2982  06A4  2FFF               	goto	l3223
  2983                           	
  2984  06A5                     l3222:	
  2985                           	line	34
  2986                           	
  2987  06A5                     l6164:	
  2988  06A5  3072               	movlw	0x72
  2989  06A6  00F0               	movwf	(?___ftge)
  2990  06A7  3031               	movlw	0x31
  2991  06A8  00F1               	movwf	(?___ftge+1)
  2992  06A9  3044               	movlw	0x44
  2993  06AA  00F2               	movwf	(?___ftge+2)
  2994  06AB  085A               	movf	(exp@x),w
  2995  06AC  00F3               	movwf	0+(?___ftge)+03h
  2996  06AD  085B               	movf	(exp@x+1),w
  2997  06AE  00F4               	movwf	1+(?___ftge)+03h
  2998  06AF  085C               	movf	(exp@x+2),w
  2999  06B0  00F5               	movwf	2+(?___ftge)+03h
  3000  06B1  120A  158A  2291   	fcall	___ftge
              120A  118A         
  3001  06B6  1803               	btfsc	status,0
  3002  06B7  2EB9               	goto	u4081
  3003  06B8  2EBA               	goto	u4080
  3004  06B9                     u4081:
  3005  06B9  2ED4               	goto	l6174
  3006  06BA                     u4080:
  3007                           	line	35
  3008                           	
  3009  06BA                     l6166:	
  3010  06BA  3022               	movlw	low(022h)
  3011  06BB  1683               	bsf	status, 5	;RP0=1, select bank1
  3012  06BC  1303               	bcf	status, 6	;RP1=0, select bank1
  3013  06BD  00BB               	movwf	(_errno)^080h
  3014  06BE  3000               	movlw	high(022h)
  3015  06BF  00BC               	movwf	((_errno)^080h)+1
  3016                           	line	36
  3017  06C0  2ECA               	goto	l6170
  3018                           	
  3019  06C1                     l6168:	
  3020  06C1  3000               	movlw	0x0
  3021  06C2  1283               	bcf	status, 5	;RP0=0, select bank0
  3022  06C3  1303               	bcf	status, 6	;RP1=0, select bank0
  3023  06C4  00DA               	movwf	(?_exp)
  3024  06C5  3080               	movlw	0x80
  3025  06C6  00DB               	movwf	(?_exp+1)
  3026  06C7  307F               	movlw	0x7f
  3027  06C8  00DC               	movwf	(?_exp+2)
  3028  06C9  2FFF               	goto	l3223
  3029                           	
  3030  06CA                     l3226:	
  3031                           	
  3032  06CA                     l6170:	
  3033  06CA  30FF               	movlw	0xff
  3034  06CB  1283               	bcf	status, 5	;RP0=0, select bank0
  3035  06CC  00DA               	movwf	(?_exp)
  3036  06CD  307F               	movlw	0x7f
  3037  06CE  00DB               	movwf	(?_exp+1)
  3038  06CF  307F               	movlw	0x7f
  3039  06D0  00DC               	movwf	(?_exp+2)
  3040  06D1  2FFF               	goto	l3223
  3041                           	
  3042  06D2                     l3228:	
  3043  06D2  2FFF               	goto	l3223
  3044                           	
  3045  06D3                     l6172:	
  3046  06D3  2FFF               	goto	l3223
  3047                           	line	37
  3048                           	
  3049  06D4                     l3224:	
  3050                           	line	38
  3051                           	
  3052  06D4                     l6174:	
  3053  06D4  1283               	bcf	status, 5	;RP0=0, select bank0
  3054  06D5  1303               	bcf	status, 6	;RP1=0, select bank0
  3055  06D6  085A               	movf	(exp@x),w
  3056  06D7  00F0               	movwf	(?___ftge)
  3057  06D8  085B               	movf	(exp@x+1),w
  3058  06D9  00F1               	movwf	(?___ftge+1)
  3059  06DA  085C               	movf	(exp@x+2),w
  3060  06DB  00F2               	movwf	(?___ftge+2)
  3061  06DC  3049               	movlw	0x49
  3062  06DD  00F3               	movwf	0+(?___ftge)+03h
  3063  06DE  303A               	movlw	0x3a
  3064  06DF  00F4               	movwf	1+(?___ftge)+03h
  3065  06E0  30C4               	movlw	0xc4
  3066  06E1  00F5               	movwf	2+(?___ftge)+03h
  3067  06E2  120A  158A  2291   	fcall	___ftge
              120A  118A         
  3068  06E7  1803               	btfsc	status,0
  3069  06E8  2EEA               	goto	u4091
  3070  06E9  2EEB               	goto	u4090
  3071  06EA                     u4091:
  3072  06EA  2EFB               	goto	l6180
  3073  06EB                     u4090:
  3074                           	line	39
  3075                           	
  3076  06EB                     l6176:	
  3077  06EB  3022               	movlw	low(022h)
  3078  06EC  1683               	bsf	status, 5	;RP0=1, select bank1
  3079  06ED  1303               	bcf	status, 6	;RP1=0, select bank1
  3080  06EE  00BB               	movwf	(_errno)^080h
  3081  06EF  3000               	movlw	high(022h)
  3082  06F0  00BC               	movwf	((_errno)^080h)+1
  3083                           	line	40
  3084  06F1  3000               	movlw	0x0
  3085  06F2  1283               	bcf	status, 5	;RP0=0, select bank0
  3086  06F3  1303               	bcf	status, 6	;RP1=0, select bank0
  3087  06F4  00DA               	movwf	(?_exp)
  3088  06F5  3000               	movlw	0x0
  3089  06F6  00DB               	movwf	(?_exp+1)
  3090  06F7  3000               	movlw	0x0
  3091  06F8  00DC               	movwf	(?_exp+2)
  3092  06F9  2FFF               	goto	l3223
  3093                           	
  3094  06FA                     l6178:	
  3095  06FA  2FFF               	goto	l3223
  3096                           	line	41
  3097                           	
  3098  06FB                     l3229:	
  3099                           	line	43
  3100                           	
  3101  06FB                     l6180:	
  3102  06FB  1283               	bcf	status, 5	;RP0=0, select bank0
  3103  06FC  1303               	bcf	status, 6	;RP1=0, select bank0
  3104  06FD  085A               	movf	(exp@x),w
  3105  06FE  00F0               	movwf	(?___ftge)
  3106  06FF  085B               	movf	(exp@x+1),w
  3107  0700  00F1               	movwf	(?___ftge+1)
  3108  0701  085C               	movf	(exp@x+2),w
  3109  0702  00F2               	movwf	(?___ftge+2)
  3110  0703  3000               	movlw	0x0
  3111  0704  00F3               	movwf	0+(?___ftge)+03h
  3112  0705  3000               	movlw	0x0
  3113  0706  00F4               	movwf	1+(?___ftge)+03h
  3114  0707  3000               	movlw	0x0
  3115  0708  00F5               	movwf	2+(?___ftge)+03h
  3116  0709  120A  158A  2291   	fcall	___ftge
              120A  118A         
  3117  070E  3000               	movlw	0
  3118  070F  1C03               	btfss	status,0
  3119  0710  3001               	movlw	1
  3120  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  3121  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  3122  0713  00DD               	movwf	(??_exp+0)+0
  3123  0714  085D               	movf	(??_exp+0)+0,w
  3124  0715  00E3               	movwf	(exp@sign)
  3125                           	line	44
  3126                           	
  3127  0716                     l6182:	
  3128  0716  0863               	movf	(exp@sign),w
  3129  0717  1D03               	skipz
  3130  0718  2F1A               	goto	u4100
  3131  0719  2F2E               	goto	l6186
  3132  071A                     u4100:
  3133                           	line	45
  3134                           	
  3135  071A                     l6184:	
  3136  071A  085A               	movf	(exp@x),w
  3137  071B  00F8               	movwf	(?___ftneg)
  3138  071C  085B               	movf	(exp@x+1),w
  3139  071D  00F9               	movwf	(?___ftneg+1)
  3140  071E  085C               	movf	(exp@x+2),w
  3141  071F  00FA               	movwf	(?___ftneg+2)
  3142  0720  160A  118A  26B0   	fcall	___ftneg
              120A  118A         
  3143  0725  0878               	movf	(0+(?___ftneg)),w
  3144  0726  1283               	bcf	status, 5	;RP0=0, select bank0
  3145  0727  1303               	bcf	status, 6	;RP1=0, select bank0
  3146  0728  00DA               	movwf	(exp@x)
  3147  0729  0879               	movf	(1+(?___ftneg)),w
  3148  072A  00DB               	movwf	(exp@x+1)
  3149  072B  087A               	movf	(2+(?___ftneg)),w
  3150  072C  00DC               	movwf	(exp@x+2)
  3151  072D  2F2E               	goto	l6186
  3152                           	
  3153  072E                     l3230:	
  3154                           	line	46
  3155                           	
  3156  072E                     l6186:	
  3157  072E  30AA               	movlw	0xaa
  3158  072F  00A3               	movwf	(?___ftmul)
  3159  0730  30B8               	movlw	0xb8
  3160  0731  00A4               	movwf	(?___ftmul+1)
  3161  0732  303F               	movlw	0x3f
  3162  0733  00A5               	movwf	(?___ftmul+2)
  3163  0734  085A               	movf	(exp@x),w
  3164  0735  00A6               	movwf	0+(?___ftmul)+03h
  3165  0736  085B               	movf	(exp@x+1),w
  3166  0737  00A7               	movwf	1+(?___ftmul)+03h
  3167  0738  085C               	movf	(exp@x+2),w
  3168  0739  00A8               	movwf	2+(?___ftmul)+03h
  3169  073A  120A  118A  20B3   	fcall	___ftmul
              120A  118A         
  3170  073F  1283               	bcf	status, 5	;RP0=0, select bank0
  3171  0740  1303               	bcf	status, 6	;RP1=0, select bank0
  3172  0741  0823               	movf	(0+(?___ftmul)),w
  3173  0742  00DA               	movwf	(exp@x)
  3174  0743  0824               	movf	(1+(?___ftmul)),w
  3175  0744  00DB               	movwf	(exp@x+1)
  3176  0745  0825               	movf	(2+(?___ftmul)),w
  3177  0746  00DC               	movwf	(exp@x+2)
  3178                           	line	47
  3179                           	
  3180  0747                     l6188:	
  3181  0747  085A               	movf	(exp@x),w
  3182  0748  00C0               	movwf	(?_floor)
  3183  0749  085B               	movf	(exp@x+1),w
  3184  074A  00C1               	movwf	(?_floor+1)
  3185  074B  085C               	movf	(exp@x+2),w
  3186  074C  00C2               	movwf	(?_floor+2)
  3187  074D  120A  118A  200B   	fcall	_floor
              120A  118A         
  3188  0752  1283               	bcf	status, 5	;RP0=0, select bank0
  3189  0753  1303               	bcf	status, 6	;RP1=0, select bank0
  3190  0754  0840               	movf	(0+(?_floor)),w
  3191  0755  00F0               	movwf	(?___fttol)
  3192  0756  0841               	movf	(1+(?_floor)),w
  3193  0757  00F1               	movwf	(?___fttol+1)
  3194  0758  0842               	movf	(2+(?_floor)),w
  3195  0759  00F2               	movwf	(?___fttol+2)
  3196  075A  120A  158A  24F3   	fcall	___fttol
              120A  118A         
  3197  075F  0871               	movf	1+(((0+(?___fttol)))),w
  3198  0760  1283               	bcf	status, 5	;RP0=0, select bank0
  3199  0761  1303               	bcf	status, 6	;RP1=0, select bank0
  3200  0762  01E2               	clrf	(exp@exp+1)
  3201  0763  07E2               	addwf	(exp@exp+1)
  3202  0764  0870               	movf	0+(((0+(?___fttol)))),w
  3203  0765  01E1               	clrf	(exp@exp)
  3204  0766  07E1               	addwf	(exp@exp)
  3205                           
  3206                           	line	48
  3207                           	
  3208  0767                     l6190:	
  3209  0767  0862               	movf	(exp@exp+1),w
  3210  0768  01FC               	clrf	(?___awtoft+1)
  3211  0769  07FC               	addwf	(?___awtoft+1)
  3212  076A  0861               	movf	(exp@exp),w
  3213  076B  01FB               	clrf	(?___awtoft)
  3214  076C  07FB               	addwf	(?___awtoft)
  3215                           
  3216  076D  160A  118A  27AB   	fcall	___awtoft
              120A  118A         
  3217  0772  087B               	movf	(0+(?___awtoft)),w
  3218  0773  1283               	bcf	status, 5	;RP0=0, select bank0
  3219  0774  1303               	bcf	status, 6	;RP1=0, select bank0
  3220  0775  00C0               	movwf	(?___ftsub)
  3221  0776  087C               	movf	(1+(?___awtoft)),w
  3222  0777  00C1               	movwf	(?___ftsub+1)
  3223  0778  087D               	movf	(2+(?___awtoft)),w
  3224  0779  00C2               	movwf	(?___ftsub+2)
  3225  077A  085A               	movf	(exp@x),w
  3226  077B  00C3               	movwf	0+(?___ftsub)+03h
  3227  077C  085B               	movf	(exp@x+1),w
  3228  077D  00C4               	movwf	1+(?___ftsub)+03h
  3229  077E  085C               	movf	(exp@x+2),w
  3230  077F  00C5               	movwf	2+(?___ftsub)+03h
  3231  0780  160A  118A  2705   	fcall	___ftsub
              120A  118A         
  3232  0785  1283               	bcf	status, 5	;RP0=0, select bank0
  3233  0786  1303               	bcf	status, 6	;RP1=0, select bank0
  3234  0787  0840               	movf	(0+(?___ftsub)),w
  3235  0788  00DA               	movwf	(exp@x)
  3236  0789  0841               	movf	(1+(?___ftsub)),w
  3237  078A  00DB               	movwf	(exp@x+1)
  3238  078B  0842               	movf	(2+(?___ftsub)),w
  3239  078C  00DC               	movwf	(exp@x+2)
  3240                           	line	49
  3241                           	
  3242  078D                     l6192:	
  3243  078D  085A               	movf	(exp@x),w
  3244  078E  00CA               	movwf	(?_eval_poly)
  3245  078F  085B               	movf	(exp@x+1),w
  3246  0790  00CB               	movwf	(?_eval_poly+1)
  3247  0791  085C               	movf	(exp@x+2),w
  3248  0792  00CC               	movwf	(?_eval_poly+2)
  3249  0793  3001               	movlw	((exp@coeff-__stringbase))&0ffh
  3250  0794  00DD               	movwf	(??_exp+0)+0
  3251  0795  085D               	movf	(??_exp+0)+0,w
  3252  0796  00CD               	movwf	(0+?_eval_poly+03h)
  3253  0797  3009               	movlw	low(09h)
  3254  0798  00CE               	movwf	0+(?_eval_poly)+04h
  3255  0799  3000               	movlw	high(09h)
  3256  079A  00CF               	movwf	(0+(?_eval_poly)+04h)+1
  3257  079B  120A  158A  23EC   	fcall	_eval_poly
              120A  118A         
  3258  07A0  1283               	bcf	status, 5	;RP0=0, select bank0
  3259  07A1  1303               	bcf	status, 6	;RP1=0, select bank0
  3260  07A2  084A               	movf	(0+(?_eval_poly)),w
  3261  07A3  00C0               	movwf	(?_ldexp)
  3262  07A4  084B               	movf	(1+(?_eval_poly)),w
  3263  07A5  00C1               	movwf	(?_ldexp+1)
  3264  07A6  084C               	movf	(2+(?_eval_poly)),w
  3265  07A7  00C2               	movwf	(?_ldexp+2)
  3266  07A8  0862               	movf	(exp@exp+1),w
  3267  07A9  01C4               	clrf	1+(?_ldexp)+03h
  3268  07AA  07C4               	addwf	1+(?_ldexp)+03h
  3269  07AB  0861               	movf	(exp@exp),w
  3270  07AC  01C3               	clrf	0+(?_ldexp)+03h
  3271  07AD  07C3               	addwf	0+(?_ldexp)+03h
  3272                           
  3273  07AE  120A  158A  265D   	fcall	_ldexp
              120A  118A         
  3274  07B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3275  07B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3276  07B5  0840               	movf	(0+(?_ldexp)),w
  3277  07B6  00DA               	movwf	(exp@x)
  3278  07B7  0841               	movf	(1+(?_ldexp)),w
  3279  07B8  00DB               	movwf	(exp@x+1)
  3280  07B9  0842               	movf	(2+(?_ldexp)),w
  3281  07BA  00DC               	movwf	(exp@x+2)
  3282                           	line	50
  3283                           	
  3284  07BB                     l6194:	
  3285  07BB  0863               	movf	(exp@sign),w
  3286  07BC  1D03               	skipz
  3287  07BD  2FBF               	goto	u4110
  3288  07BE  2FFF               	goto	l3231
  3289  07BF                     u4110:
  3290  07BF  2FC8               	goto	l6200
  3291                           	line	52
  3292                           	
  3293  07C0                     l6196:	
  3294  07C0  2FC8               	goto	l6200
  3295                           	
  3296  07C1                     l6198:	
  3297  07C1  3000               	movlw	0x0
  3298  07C2  00DE               	movwf	(_exp$3527)
  3299  07C3  3080               	movlw	0x80
  3300  07C4  00DF               	movwf	(_exp$3527+1)
  3301  07C5  307F               	movlw	0x7f
  3302  07C6  00E0               	movwf	(_exp$3527+2)
  3303  07C7  2FCE               	goto	l3236
  3304                           	
  3305  07C8                     l3234:	
  3306                           	
  3307  07C8                     l6200:	
  3308  07C8  30FF               	movlw	0xff
  3309  07C9  00DE               	movwf	(_exp$3527)
  3310  07CA  307F               	movlw	0x7f
  3311  07CB  00DF               	movwf	(_exp$3527+1)
  3312  07CC  307F               	movlw	0x7f
  3313  07CD  00E0               	movwf	(_exp$3527+2)
  3314                           	
  3315  07CE                     l3236:	
  3316  07CE  085C               	movf	(exp@x+2),w
  3317  07CF  0660               	xorwf	(_exp$3527+2),w
  3318  07D0  1D03               	skipz
  3319  07D1  2FD8               	goto	u4125
  3320  07D2  085B               	movf	(exp@x+1),w
  3321  07D3  065F               	xorwf	(_exp$3527+1),w
  3322  07D4  1D03               	skipz
  3323  07D5  2FD8               	goto	u4125
  3324  07D6  085A               	movf	(exp@x),w
  3325  07D7  065E               	xorwf	(_exp$3527),w
  3326  07D8                     u4125:
  3327  07D8  1D03               	skipz
  3328  07D9  2FDB               	goto	u4121
  3329  07DA  2FDC               	goto	u4120
  3330  07DB                     u4121:
  3331  07DB  2FE4               	goto	l6206
  3332  07DC                     u4120:
  3333                           	line	53
  3334                           	
  3335  07DC                     l6202:	
  3336  07DC  3000               	movlw	0x0
  3337  07DD  00DA               	movwf	(?_exp)
  3338  07DE  3000               	movlw	0x0
  3339  07DF  00DB               	movwf	(?_exp+1)
  3340  07E0  3000               	movlw	0x0
  3341  07E1  00DC               	movwf	(?_exp+2)
  3342  07E2  2FFF               	goto	l3223
  3343                           	
  3344  07E3                     l6204:	
  3345  07E3  2FFF               	goto	l3223
  3346                           	
  3347  07E4                     l3232:	
  3348                           	line	54
  3349                           	
  3350  07E4                     l6206:	
  3351  07E4  085A               	movf	(exp@x),w
  3352  07E5  00F8               	movwf	(?___ftdiv)
  3353  07E6  085B               	movf	(exp@x+1),w
  3354  07E7  00F9               	movwf	(?___ftdiv+1)
  3355  07E8  085C               	movf	(exp@x+2),w
  3356  07E9  00FA               	movwf	(?___ftdiv+2)
  3357  07EA  3000               	movlw	0x0
  3358  07EB  00FB               	movwf	0+(?___ftdiv)+03h
  3359  07EC  3080               	movlw	0x80
  3360  07ED  00FC               	movwf	1+(?___ftdiv)+03h
  3361  07EE  303F               	movlw	0x3f
  3362  07EF  00FD               	movwf	2+(?___ftdiv)+03h
  3363  07F0  120A  158A  2597   	fcall	___ftdiv
              120A  118A         
  3364  07F5  0878               	movf	(0+(?___ftdiv)),w
  3365  07F6  1283               	bcf	status, 5	;RP0=0, select bank0
  3366  07F7  1303               	bcf	status, 6	;RP1=0, select bank0
  3367  07F8  00DA               	movwf	(?_exp)
  3368  07F9  0879               	movf	(1+(?___ftdiv)),w
  3369  07FA  00DB               	movwf	(?_exp+1)
  3370  07FB  087A               	movf	(2+(?___ftdiv)),w
  3371  07FC  00DC               	movwf	(?_exp+2)
  3372  07FD  2FFF               	goto	l3223
  3373                           	
  3374  07FE                     l6208:	
  3375  07FE  2FFF               	goto	l3223
  3376                           	line	55
  3377                           	
  3378  07FF                     l3231:	
  3379                           	line	56
  3380                           	line	57
  3381                           	
  3382  07FF                     l3223:	
  3383  07FF  0008               	return
  3384                           	opt stack 0
  3385                           GLOBAL	__end_of_exp
  3386  0800                     	__end_of_exp:
  3387 ;; =============== function _exp ends ============
  3388                           
  3389                           	signat	_exp,4219
  3390                           	global	_log
  3391                           psect	text794,local,class=CODE,delta=2
  3392                           global __ptext794
  3393  0F27                     __ptext794:
  3394                           
  3395 ;; *************** function _log *****************
  3396 ;; Defined at:
  3397 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  x               3   52[BANK0 ] unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  exp             2   56[BANK0 ] int 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  3   52[BANK0 ] int 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       3       0       0       0
  3412 ;;      Locals:         0       2       0       0       0
  3413 ;;      Temps:          0       1       0       0       0
  3414 ;;      Totals:         0       6       0       0       0
  3415 ;;Total ram usage:        6 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    3
  3418 ;; This function calls:
  3419 ;;		___ftge
  3420 ;;		_frexp
  3421 ;;		___ftmul
  3422 ;;		___ftadd
  3423 ;;		_eval_poly
  3424 ;;		___awtoft
  3425 ;; This function is called by:
  3426 ;;		_pow
  3427 ;;		_log10
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           psect	text794
  3431                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
  3432                           	line	6
  3433                           	global	__size_of_log
  3434  00D9                     	__size_of_log	equ	__end_of_log-_log
  3435                           	
  3436  0F27                     _log:	
  3437                           	opt	stack 2
  3438                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3439                           	line	24
  3440                           	
  3441  0F27                     l6136:	
  3442  0F27  1283               	bcf	status, 5	;RP0=0, select bank0
  3443  0F28  1303               	bcf	status, 6	;RP1=0, select bank0
  3444  0F29  0854               	movf	(log@x),w
  3445  0F2A  00F0               	movwf	(?___ftge)
  3446  0F2B  0855               	movf	(log@x+1),w
  3447  0F2C  00F1               	movwf	(?___ftge+1)
  3448  0F2D  0856               	movf	(log@x+2),w
  3449  0F2E  00F2               	movwf	(?___ftge+2)
  3450  0F2F  3000               	movlw	0x0
  3451  0F30  00F3               	movwf	0+(?___ftge)+03h
  3452  0F31  3000               	movlw	0x0
  3453  0F32  00F4               	movwf	1+(?___ftge)+03h
  3454  0F33  3000               	movlw	0x0
  3455  0F34  00F5               	movwf	2+(?___ftge)+03h
  3456  0F35  120A  158A  2291   	fcall	___ftge
              120A  158A         
  3457  0F3A  1803               	btfsc	status,0
  3458  0F3B  2F3D               	goto	u4051
  3459  0F3C  2F3E               	goto	u4050
  3460  0F3D                     u4051:
  3461  0F3D  2F4E               	goto	l6142
  3462  0F3E                     u4050:
  3463                           	line	25
  3464                           	
  3465  0F3E                     l6138:	
  3466  0F3E  3021               	movlw	low(021h)
  3467  0F3F  1683               	bsf	status, 5	;RP0=1, select bank1
  3468  0F40  1303               	bcf	status, 6	;RP1=0, select bank1
  3469  0F41  00BB               	movwf	(_errno)^080h
  3470  0F42  3000               	movlw	high(021h)
  3471  0F43  00BC               	movwf	((_errno)^080h)+1
  3472                           	line	26
  3473  0F44  3000               	movlw	0x0
  3474  0F45  1283               	bcf	status, 5	;RP0=0, select bank0
  3475  0F46  1303               	bcf	status, 6	;RP1=0, select bank0
  3476  0F47  00D4               	movwf	(?_log)
  3477  0F48  3000               	movlw	0x0
  3478  0F49  00D5               	movwf	(?_log+1)
  3479  0F4A  3000               	movlw	0x0
  3480  0F4B  00D6               	movwf	(?_log+2)
  3481  0F4C  2FFF               	goto	l3257
  3482                           	
  3483  0F4D                     l6140:	
  3484  0F4D  2FFF               	goto	l3257
  3485                           	line	27
  3486                           	
  3487  0F4E                     l3256:	
  3488                           	line	28
  3489                           	
  3490  0F4E                     l6142:	
  3491  0F4E  1283               	bcf	status, 5	;RP0=0, select bank0
  3492  0F4F  1303               	bcf	status, 6	;RP1=0, select bank0
  3493  0F50  0856               	movf	(log@x+2),w
  3494  0F51  0455               	iorwf	(log@x+1),w
  3495  0F52  0454               	iorwf	(log@x),w
  3496  0F53  1D03               	skipz
  3497  0F54  2F56               	goto	u4061
  3498  0F55  2F57               	goto	u4060
  3499  0F56                     u4061:
  3500  0F56  2F67               	goto	l6148
  3501  0F57                     u4060:
  3502                           	line	29
  3503                           	
  3504  0F57                     l6144:	
  3505  0F57  3022               	movlw	low(022h)
  3506  0F58  1683               	bsf	status, 5	;RP0=1, select bank1
  3507  0F59  1303               	bcf	status, 6	;RP1=0, select bank1
  3508  0F5A  00BB               	movwf	(_errno)^080h
  3509  0F5B  3000               	movlw	high(022h)
  3510  0F5C  00BC               	movwf	((_errno)^080h)+1
  3511                           	line	30
  3512  0F5D  3000               	movlw	0x0
  3513  0F5E  1283               	bcf	status, 5	;RP0=0, select bank0
  3514  0F5F  1303               	bcf	status, 6	;RP1=0, select bank0
  3515  0F60  00D4               	movwf	(?_log)
  3516  0F61  3000               	movlw	0x0
  3517  0F62  00D5               	movwf	(?_log+1)
  3518  0F63  3000               	movlw	0x0
  3519  0F64  00D6               	movwf	(?_log+2)
  3520  0F65  2FFF               	goto	l3257
  3521                           	
  3522  0F66                     l6146:	
  3523  0F66  2FFF               	goto	l3257
  3524                           	line	31
  3525                           	
  3526  0F67                     l3258:	
  3527                           	line	32
  3528                           	
  3529  0F67                     l6148:	
  3530  0F67  3000               	movlw	0x0
  3531  0F68  00B3               	movwf	(?___ftadd)
  3532  0F69  3080               	movlw	0x80
  3533  0F6A  00B4               	movwf	(?___ftadd+1)
  3534  0F6B  30BF               	movlw	0xbf
  3535  0F6C  00B5               	movwf	(?___ftadd+2)
  3536  0F6D  3000               	movlw	0x0
  3537  0F6E  00A3               	movwf	(?___ftmul)
  3538  0F6F  3000               	movlw	0x0
  3539  0F70  00A4               	movwf	(?___ftmul+1)
  3540  0F71  3040               	movlw	0x40
  3541  0F72  00A5               	movwf	(?___ftmul+2)
  3542  0F73  3058               	movlw	(log@exp)&0ffh
  3543  0F74  00D7               	movwf	(??_log+0)+0
  3544  0F75  0857               	movf	(??_log+0)+0,w
  3545  0F76  00F3               	movwf	0+(?_frexp)+03h
  3546  0F77  0854               	movf	(log@x),w
  3547  0F78  00F0               	movwf	(?_frexp)
  3548  0F79  0855               	movf	(log@x+1),w
  3549  0F7A  00F1               	movwf	(?_frexp+1)
  3550  0F7B  0856               	movf	(log@x+2),w
  3551  0F7C  00F2               	movwf	(?_frexp+2)
  3552  0F7D  120A  158A  20EC   	fcall	_frexp
              120A  158A         
  3553  0F82  0870               	movf	(0+(?_frexp)),w
  3554  0F83  1283               	bcf	status, 5	;RP0=0, select bank0
  3555  0F84  1303               	bcf	status, 6	;RP1=0, select bank0
  3556  0F85  00A6               	movwf	0+(?___ftmul)+03h
  3557  0F86  0871               	movf	(1+(?_frexp)),w
  3558  0F87  00A7               	movwf	1+(?___ftmul)+03h
  3559  0F88  0872               	movf	(2+(?_frexp)),w
  3560  0F89  00A8               	movwf	2+(?___ftmul)+03h
  3561  0F8A  120A  118A  20B3   	fcall	___ftmul
              120A  158A         
  3562  0F8F  1283               	bcf	status, 5	;RP0=0, select bank0
  3563  0F90  1303               	bcf	status, 6	;RP1=0, select bank0
  3564  0F91  0823               	movf	(0+(?___ftmul)),w
  3565  0F92  00B6               	movwf	0+(?___ftadd)+03h
  3566  0F93  0824               	movf	(1+(?___ftmul)),w
  3567  0F94  00B7               	movwf	1+(?___ftadd)+03h
  3568  0F95  0825               	movf	(2+(?___ftmul)),w
  3569  0F96  00B8               	movwf	2+(?___ftadd)+03h
  3570  0F97  120A  118A  2406   	fcall	___ftadd
              120A  158A         
  3571  0F9C  1283               	bcf	status, 5	;RP0=0, select bank0
  3572  0F9D  1303               	bcf	status, 6	;RP1=0, select bank0
  3573  0F9E  0833               	movf	(0+(?___ftadd)),w
  3574  0F9F  00D4               	movwf	(log@x)
  3575  0FA0  0834               	movf	(1+(?___ftadd)),w
  3576  0FA1  00D5               	movwf	(log@x+1)
  3577  0FA2  0835               	movf	(2+(?___ftadd)),w
  3578  0FA3  00D6               	movwf	(log@x+2)
  3579                           	line	33
  3580                           	
  3581  0FA4                     l6150:	
  3582  0FA4  30FF               	movlw	low(-1)
  3583  0FA5  07D8               	addwf	(log@exp),f
  3584  0FA6  1803               	skipnc
  3585  0FA7  0AD9               	incf	(log@exp+1),f
  3586  0FA8  30FF               	movlw	high(-1)
  3587  0FA9  07D9               	addwf	(log@exp+1),f
  3588                           	line	34
  3589                           	
  3590  0FAA                     l6152:	
  3591  0FAA  0854               	movf	(log@x),w
  3592  0FAB  00CA               	movwf	(?_eval_poly)
  3593  0FAC  0855               	movf	(log@x+1),w
  3594  0FAD  00CB               	movwf	(?_eval_poly+1)
  3595  0FAE  0856               	movf	(log@x+2),w
  3596  0FAF  00CC               	movwf	(?_eval_poly+2)
  3597  0FB0  301F               	movlw	((log@coeff-__stringbase))&0ffh
  3598  0FB1  00D7               	movwf	(??_log+0)+0
  3599  0FB2  0857               	movf	(??_log+0)+0,w
  3600  0FB3  00CD               	movwf	(0+?_eval_poly+03h)
  3601  0FB4  3008               	movlw	low(08h)
  3602  0FB5  00CE               	movwf	0+(?_eval_poly)+04h
  3603  0FB6  3000               	movlw	high(08h)
  3604  0FB7  00CF               	movwf	(0+(?_eval_poly)+04h)+1
  3605  0FB8  120A  158A  23EC   	fcall	_eval_poly
              120A  158A         
  3606  0FBD  1283               	bcf	status, 5	;RP0=0, select bank0
  3607  0FBE  1303               	bcf	status, 6	;RP1=0, select bank0
  3608  0FBF  084A               	movf	(0+(?_eval_poly)),w
  3609  0FC0  00D4               	movwf	(log@x)
  3610  0FC1  084B               	movf	(1+(?_eval_poly)),w
  3611  0FC2  00D5               	movwf	(log@x+1)
  3612  0FC3  084C               	movf	(2+(?_eval_poly)),w
  3613  0FC4  00D6               	movwf	(log@x+2)
  3614                           	line	35
  3615                           	
  3616  0FC5                     l6154:	
  3617  0FC5  0854               	movf	(log@x),w
  3618  0FC6  00B3               	movwf	(?___ftadd)
  3619  0FC7  0855               	movf	(log@x+1),w
  3620  0FC8  00B4               	movwf	(?___ftadd+1)
  3621  0FC9  0856               	movf	(log@x+2),w
  3622  0FCA  00B5               	movwf	(?___ftadd+2)
  3623  0FCB  3072               	movlw	0x72
  3624  0FCC  00A3               	movwf	(?___ftmul)
  3625  0FCD  3031               	movlw	0x31
  3626  0FCE  00A4               	movwf	(?___ftmul+1)
  3627  0FCF  303F               	movlw	0x3f
  3628  0FD0  00A5               	movwf	(?___ftmul+2)
  3629  0FD1  0859               	movf	(log@exp+1),w
  3630  0FD2  01FC               	clrf	(?___awtoft+1)
  3631  0FD3  07FC               	addwf	(?___awtoft+1)
  3632  0FD4  0858               	movf	(log@exp),w
  3633  0FD5  01FB               	clrf	(?___awtoft)
  3634  0FD6  07FB               	addwf	(?___awtoft)
  3635                           
  3636  0FD7  160A  118A  27AB   	fcall	___awtoft
              120A  158A         
  3637  0FDC  087B               	movf	(0+(?___awtoft)),w
  3638  0FDD  1283               	bcf	status, 5	;RP0=0, select bank0
  3639  0FDE  1303               	bcf	status, 6	;RP1=0, select bank0
  3640  0FDF  00A6               	movwf	0+(?___ftmul)+03h
  3641  0FE0  087C               	movf	(1+(?___awtoft)),w
  3642  0FE1  00A7               	movwf	1+(?___ftmul)+03h
  3643  0FE2  087D               	movf	(2+(?___awtoft)),w
  3644  0FE3  00A8               	movwf	2+(?___ftmul)+03h
  3645  0FE4  120A  118A  20B3   	fcall	___ftmul
              120A  158A         
  3646  0FE9  1283               	bcf	status, 5	;RP0=0, select bank0
  3647  0FEA  1303               	bcf	status, 6	;RP1=0, select bank0
  3648  0FEB  0823               	movf	(0+(?___ftmul)),w
  3649  0FEC  00B6               	movwf	0+(?___ftadd)+03h
  3650  0FED  0824               	movf	(1+(?___ftmul)),w
  3651  0FEE  00B7               	movwf	1+(?___ftadd)+03h
  3652  0FEF  0825               	movf	(2+(?___ftmul)),w
  3653  0FF0  00B8               	movwf	2+(?___ftadd)+03h
  3654  0FF1  120A  118A  2406   	fcall	___ftadd
              120A  158A         
  3655  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  3656  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  3657  0FF8  0833               	movf	(0+(?___ftadd)),w
  3658  0FF9  00D4               	movwf	(?_log)
  3659  0FFA  0834               	movf	(1+(?___ftadd)),w
  3660  0FFB  00D5               	movwf	(?_log+1)
  3661  0FFC  0835               	movf	(2+(?___ftadd)),w
  3662  0FFD  00D6               	movwf	(?_log+2)
  3663  0FFE  2FFF               	goto	l3257
  3664                           	
  3665  0FFF                     l6156:	
  3666                           	line	36
  3667                           	
  3668  0FFF                     l3257:	
  3669  0FFF  0008               	return
  3670                           	opt stack 0
  3671                           GLOBAL	__end_of_log
  3672  1000                     	__end_of_log:
  3673 ;; =============== function _log ends ============
  3674                           
  3675                           	signat	_log,4219
  3676                           	global	_eval_poly
  3677                           psect	text795,local,class=CODE,delta=2
  3678                           global __ptext795
  3679  0BEC                     __ptext795:
  3680                           
  3681 ;; *************** function _eval_poly *****************
  3682 ;; Defined at:
  3683 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\evalpoly.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  x               3   42[BANK0 ] int 
  3686 ;;  d               1   45[BANK0 ] PTR const 
  3687 ;;		 -> log@coeff(27), exp@coeff(30), 
  3688 ;;  n               2   46[BANK0 ] int 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  res             3   49[BANK0 ] int 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  3   42[BANK0 ] int 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       6       0       0       0
  3701 ;;      Locals:         0       3       0       0       0
  3702 ;;      Temps:          0       1       0       0       0
  3703 ;;      Totals:         0      10       0       0       0
  3704 ;;Total ram usage:       10 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		___bmul
  3709 ;;		___ftmul
  3710 ;;		___ftadd
  3711 ;; This function is called by:
  3712 ;;		_exp
  3713 ;;		_log
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           psect	text795
  3717                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\evalpoly.c"
  3718                           	line	5
  3719                           	global	__size_of_eval_poly
  3720  007F                     	__size_of_eval_poly	equ	__end_of_eval_poly-_eval_poly
  3721                           	
  3722  0BEC                     _eval_poly:	
  3723                           	opt	stack 2
  3724                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3725                           	line	8
  3726                           	
  3727  0BEC                     l6126:	
  3728  0BEC  3003               	movlw	(03h)
  3729  0BED  1283               	bcf	status, 5	;RP0=0, select bank0
  3730  0BEE  1303               	bcf	status, 6	;RP1=0, select bank0
  3731  0BEF  00D0               	movwf	(??_eval_poly+0)+0
  3732  0BF0  0850               	movf	(??_eval_poly+0)+0,w
  3733  0BF1  00F0               	movwf	(?___bmul)
  3734  0BF2  084E               	movf	(eval_poly@n),w
  3735  0BF3  120A  158A  2069   	fcall	___bmul
              120A  158A         
  3736  0BF8  1283               	bcf	status, 5	;RP0=0, select bank0
  3737  0BF9  1303               	bcf	status, 6	;RP1=0, select bank0
  3738  0BFA  074D               	addwf	(eval_poly@d),w
  3739  0BFB  0084               	movwf	fsr0
  3740  0BFC  120A  158A  200A   	fcall	stringdir
              120A  158A         
  3741  0C01  00D1               	movwf	(eval_poly@res)
  3742  0C02  120A  158A  200A   	fcall	stringdir
              120A  158A         
  3743  0C07  00D2               	movwf	(eval_poly@res+1)
  3744  0C08  120A  158A  200A   	fcall	stringdir
              120A  158A         
  3745  0C0D  00D3               	movwf	(eval_poly@res+2)
  3746                           	line	9
  3747  0C0E  2C5C               	goto	l6130
  3748                           	
  3749  0C0F                     l3306:	
  3750                           	line	10
  3751                           	
  3752  0C0F                     l6128:	
  3753  0C0F  3003               	movlw	(03h)
  3754  0C10  00D0               	movwf	(??_eval_poly+0)+0
  3755  0C11  0850               	movf	(??_eval_poly+0)+0,w
  3756  0C12  00F0               	movwf	(?___bmul)
  3757  0C13  30FF               	movlw	low(-1)
  3758  0C14  07CE               	addwf	(eval_poly@n),f
  3759  0C15  1803               	skipnc
  3760  0C16  0ACF               	incf	(eval_poly@n+1),f
  3761  0C17  30FF               	movlw	high(-1)
  3762  0C18  07CF               	addwf	(eval_poly@n+1),f
  3763  0C19  084E               	movf	((eval_poly@n)),w
  3764  0C1A  120A  158A  2069   	fcall	___bmul
              120A  158A         
  3765  0C1F  1283               	bcf	status, 5	;RP0=0, select bank0
  3766  0C20  1303               	bcf	status, 6	;RP1=0, select bank0
  3767  0C21  074D               	addwf	(eval_poly@d),w
  3768  0C22  0084               	movwf	fsr0
  3769  0C23  120A  158A  200A   	fcall	stringdir
              120A  158A         
  3770  0C28  00B3               	movwf	(?___ftadd)
  3771  0C29  120A  158A  200A   	fcall	stringdir
              120A  158A         
  3772  0C2E  00B4               	movwf	(?___ftadd+1)
  3773  0C2F  120A  158A  200A   	fcall	stringdir
              120A  158A         
  3774  0C34  00B5               	movwf	(?___ftadd+2)
  3775  0C35  0851               	movf	(eval_poly@res),w
  3776  0C36  00A3               	movwf	(?___ftmul)
  3777  0C37  0852               	movf	(eval_poly@res+1),w
  3778  0C38  00A4               	movwf	(?___ftmul+1)
  3779  0C39  0853               	movf	(eval_poly@res+2),w
  3780  0C3A  00A5               	movwf	(?___ftmul+2)
  3781  0C3B  084A               	movf	(eval_poly@x),w
  3782  0C3C  00A6               	movwf	0+(?___ftmul)+03h
  3783  0C3D  084B               	movf	(eval_poly@x+1),w
  3784  0C3E  00A7               	movwf	1+(?___ftmul)+03h
  3785  0C3F  084C               	movf	(eval_poly@x+2),w
  3786  0C40  00A8               	movwf	2+(?___ftmul)+03h
  3787  0C41  120A  118A  20B3   	fcall	___ftmul
              120A  158A         
  3788  0C46  1283               	bcf	status, 5	;RP0=0, select bank0
  3789  0C47  1303               	bcf	status, 6	;RP1=0, select bank0
  3790  0C48  0823               	movf	(0+(?___ftmul)),w
  3791  0C49  00B6               	movwf	0+(?___ftadd)+03h
  3792  0C4A  0824               	movf	(1+(?___ftmul)),w
  3793  0C4B  00B7               	movwf	1+(?___ftadd)+03h
  3794  0C4C  0825               	movf	(2+(?___ftmul)),w
  3795  0C4D  00B8               	movwf	2+(?___ftadd)+03h
  3796  0C4E  120A  118A  2406   	fcall	___ftadd
              120A  158A         
  3797  0C53  1283               	bcf	status, 5	;RP0=0, select bank0
  3798  0C54  1303               	bcf	status, 6	;RP1=0, select bank0
  3799  0C55  0833               	movf	(0+(?___ftadd)),w
  3800  0C56  00D1               	movwf	(eval_poly@res)
  3801  0C57  0834               	movf	(1+(?___ftadd)),w
  3802  0C58  00D2               	movwf	(eval_poly@res+1)
  3803  0C59  0835               	movf	(2+(?___ftadd)),w
  3804  0C5A  00D3               	movwf	(eval_poly@res+2)
  3805  0C5B  2C5C               	goto	l6130
  3806                           	
  3807  0C5C                     l3305:	
  3808                           	line	9
  3809                           	
  3810  0C5C                     l6130:	
  3811  0C5C  084F               	movf	((eval_poly@n+1)),w
  3812  0C5D  044E               	iorwf	((eval_poly@n)),w
  3813  0C5E  1D03               	skipz
  3814  0C5F  2C61               	goto	u4041
  3815  0C60  2C62               	goto	u4040
  3816  0C61                     u4041:
  3817  0C61  2C0F               	goto	l6128
  3818  0C62                     u4040:
  3819  0C62  2C63               	goto	l6132
  3820                           	
  3821  0C63                     l3307:	
  3822                           	line	11
  3823                           	
  3824  0C63                     l6132:	
  3825  0C63  0851               	movf	(eval_poly@res),w
  3826  0C64  00CA               	movwf	(?_eval_poly)
  3827  0C65  0852               	movf	(eval_poly@res+1),w
  3828  0C66  00CB               	movwf	(?_eval_poly+1)
  3829  0C67  0853               	movf	(eval_poly@res+2),w
  3830  0C68  00CC               	movwf	(?_eval_poly+2)
  3831  0C69  2C6A               	goto	l3308
  3832                           	
  3833  0C6A                     l6134:	
  3834                           	line	12
  3835                           	
  3836  0C6A                     l3308:	
  3837  0C6A  0008               	return
  3838                           	opt stack 0
  3839                           GLOBAL	__end_of_eval_poly
  3840  0C6B                     	__end_of_eval_poly:
  3841 ;; =============== function _eval_poly ends ============
  3842                           
  3843                           	signat	_eval_poly,12411
  3844                           	global	_floor
  3845                           psect	text796,local,class=CODE,delta=2
  3846                           global __ptext796
  3847  000B                     __ptext796:
  3848                           
  3849 ;; *************** function _floor *****************
  3850 ;; Defined at:
  3851 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\floor.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  x               3   32[BANK0 ] int 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  i               3   36[BANK0 ] int 
  3856 ;;  expon           2   39[BANK0 ] int 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  3   32[BANK0 ] int 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3866 ;;      Params:         0       3       0       0       0
  3867 ;;      Locals:         0       5       0       0       0
  3868 ;;      Temps:          0       1       0       0       0
  3869 ;;      Totals:         0       9       0       0       0
  3870 ;;Total ram usage:        9 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    2
  3873 ;; This function calls:
  3874 ;;		_frexp
  3875 ;;		___ftge
  3876 ;;		___fttol
  3877 ;;		___altoft
  3878 ;;		___ftadd
  3879 ;; This function is called by:
  3880 ;;		_exp
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           psect	text796
  3884                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\floor.c"
  3885                           	line	14
  3886                           	global	__size_of_floor
  3887  00A8                     	__size_of_floor	equ	__end_of_floor-_floor
  3888                           	
  3889  000B                     _floor:	
  3890                           	opt	stack 2
  3891                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3892                           	line	18
  3893                           	
  3894  000B                     l6098:	
  3895  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  3896  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  3897  000D  0840               	movf	(floor@x),w
  3898  000E  00F0               	movwf	(?_frexp)
  3899  000F  0841               	movf	(floor@x+1),w
  3900  0010  00F1               	movwf	(?_frexp+1)
  3901  0011  0842               	movf	(floor@x+2),w
  3902  0012  00F2               	movwf	(?_frexp+2)
  3903  0013  3047               	movlw	(floor@expon)&0ffh
  3904  0014  00C3               	movwf	(??_floor+0)+0
  3905  0015  0843               	movf	(??_floor+0)+0,w
  3906  0016  00F3               	movwf	0+(?_frexp)+03h
  3907  0017  120A  158A  20EC   	fcall	_frexp
              120A  118A         
  3908                           	line	19
  3909                           	
  3910  001C                     l6100:	
  3911  001C  1283               	bcf	status, 5	;RP0=0, select bank0
  3912  001D  1303               	bcf	status, 6	;RP1=0, select bank0
  3913  001E  1FC8               	btfss	(floor@expon+1),7
  3914  001F  2821               	goto	u4001
  3915  0020  2822               	goto	u4000
  3916  0021                     u4001:
  3917  0021  284B               	goto	l6112
  3918  0022                     u4000:
  3919                           	line	20
  3920                           	
  3921  0022                     l6102:	
  3922  0022  0840               	movf	(floor@x),w
  3923  0023  00F0               	movwf	(?___ftge)
  3924  0024  0841               	movf	(floor@x+1),w
  3925  0025  00F1               	movwf	(?___ftge+1)
  3926  0026  0842               	movf	(floor@x+2),w
  3927  0027  00F2               	movwf	(?___ftge+2)
  3928  0028  3000               	movlw	0x0
  3929  0029  00F3               	movwf	0+(?___ftge)+03h
  3930  002A  3000               	movlw	0x0
  3931  002B  00F4               	movwf	1+(?___ftge)+03h
  3932  002C  3000               	movlw	0x0
  3933  002D  00F5               	movwf	2+(?___ftge)+03h
  3934  002E  120A  158A  2291   	fcall	___ftge
              120A  118A         
  3935  0033  1803               	btfsc	status,0
  3936  0034  2836               	goto	u4011
  3937  0035  2837               	goto	u4010
  3938  0036                     u4011:
  3939  0036  2841               	goto	l6108
  3940  0037                     u4010:
  3941                           	line	21
  3942                           	
  3943  0037                     l6104:	
  3944  0037  3000               	movlw	0x0
  3945  0038  1283               	bcf	status, 5	;RP0=0, select bank0
  3946  0039  1303               	bcf	status, 6	;RP1=0, select bank0
  3947  003A  00C0               	movwf	(?_floor)
  3948  003B  3080               	movlw	0x80
  3949  003C  00C1               	movwf	(?_floor+1)
  3950  003D  30BF               	movlw	0xbf
  3951  003E  00C2               	movwf	(?_floor+2)
  3952  003F  28B2               	goto	l3243
  3953                           	
  3954  0040                     l6106:	
  3955  0040  28B2               	goto	l3243
  3956                           	
  3957  0041                     l3242:	
  3958                           	line	22
  3959                           	
  3960  0041                     l6108:	
  3961  0041  3000               	movlw	0x0
  3962  0042  1283               	bcf	status, 5	;RP0=0, select bank0
  3963  0043  1303               	bcf	status, 6	;RP1=0, select bank0
  3964  0044  00C0               	movwf	(?_floor)
  3965  0045  3000               	movlw	0x0
  3966  0046  00C1               	movwf	(?_floor+1)
  3967  0047  3000               	movlw	0x0
  3968  0048  00C2               	movwf	(?_floor+2)
  3969  0049  28B2               	goto	l3243
  3970                           	
  3971  004A                     l6110:	
  3972  004A  28B2               	goto	l3243
  3973                           	line	23
  3974                           	
  3975  004B                     l3241:	
  3976                           	line	24
  3977                           	
  3978  004B                     l6112:	
  3979  004B  3000               	movlw	high(015h)
  3980  004C  0248               	subwf	(floor@expon+1),w
  3981  004D  3015               	movlw	low(015h)
  3982  004E  1903               	skipnz
  3983  004F  0247               	subwf	(floor@expon),w
  3984  0050  1C03               	skipc
  3985  0051  2853               	goto	u4021
  3986  0052  2854               	goto	u4020
  3987  0053                     u4021:
  3988  0053  2855               	goto	l6116
  3989  0054                     u4020:
  3990                           	line	25
  3991                           	
  3992  0054                     l6114:	
  3993  0054  28B2               	goto	l3243
  3994                           	
  3995  0055                     l3244:	
  3996                           	line	26
  3997                           	
  3998  0055                     l6116:	
  3999  0055  0840               	movf	(floor@x),w
  4000  0056  00F0               	movwf	(?___fttol)
  4001  0057  0841               	movf	(floor@x+1),w
  4002  0058  00F1               	movwf	(?___fttol+1)
  4003  0059  0842               	movf	(floor@x+2),w
  4004  005A  00F2               	movwf	(?___fttol+2)
  4005  005B  120A  158A  24F3   	fcall	___fttol
              120A  118A         
  4006  0060  0873               	movf	(3+(?___fttol)),w
  4007  0061  1283               	bcf	status, 5	;RP0=0, select bank0
  4008  0062  1303               	bcf	status, 6	;RP1=0, select bank0
  4009  0063  00A3               	movwf	(?___altoft+3)
  4010  0064  0872               	movf	(2+(?___fttol)),w
  4011  0065  00A2               	movwf	(?___altoft+2)
  4012  0066  0871               	movf	(1+(?___fttol)),w
  4013  0067  00A1               	movwf	(?___altoft+1)
  4014  0068  0870               	movf	(0+(?___fttol)),w
  4015  0069  00A0               	movwf	(?___altoft)
  4016                           
  4017  006A  120A  158A  2183   	fcall	___altoft
              120A  118A         
  4018  006F  1283               	bcf	status, 5	;RP0=0, select bank0
  4019  0070  1303               	bcf	status, 6	;RP1=0, select bank0
  4020  0071  0820               	movf	(0+(?___altoft)),w
  4021  0072  00C4               	movwf	(floor@i)
  4022  0073  0821               	movf	(1+(?___altoft)),w
  4023  0074  00C5               	movwf	(floor@i+1)
  4024  0075  0822               	movf	(2+(?___altoft)),w
  4025  0076  00C6               	movwf	(floor@i+2)
  4026                           	line	27
  4027  0077  0840               	movf	(floor@x),w
  4028  0078  00F0               	movwf	(?___ftge)
  4029  0079  0841               	movf	(floor@x+1),w
  4030  007A  00F1               	movwf	(?___ftge+1)
  4031  007B  0842               	movf	(floor@x+2),w
  4032  007C  00F2               	movwf	(?___ftge+2)
  4033  007D  0844               	movf	(floor@i),w
  4034  007E  00F3               	movwf	0+(?___ftge)+03h
  4035  007F  0845               	movf	(floor@i+1),w
  4036  0080  00F4               	movwf	1+(?___ftge)+03h
  4037  0081  0846               	movf	(floor@i+2),w
  4038  0082  00F5               	movwf	2+(?___ftge)+03h
  4039  0083  120A  158A  2291   	fcall	___ftge
              120A  118A         
  4040  0088  1803               	btfsc	status,0
  4041  0089  288B               	goto	u4031
  4042  008A  288C               	goto	u4030
  4043  008B                     u4031:
  4044  008B  28A9               	goto	l6122
  4045  008C                     u4030:
  4046                           	line	28
  4047                           	
  4048  008C                     l6118:	
  4049  008C  3000               	movlw	0x0
  4050  008D  1283               	bcf	status, 5	;RP0=0, select bank0
  4051  008E  1303               	bcf	status, 6	;RP1=0, select bank0
  4052  008F  00B3               	movwf	(?___ftadd)
  4053  0090  3080               	movlw	0x80
  4054  0091  00B4               	movwf	(?___ftadd+1)
  4055  0092  30BF               	movlw	0xbf
  4056  0093  00B5               	movwf	(?___ftadd+2)
  4057  0094  0844               	movf	(floor@i),w
  4058  0095  00B6               	movwf	0+(?___ftadd)+03h
  4059  0096  0845               	movf	(floor@i+1),w
  4060  0097  00B7               	movwf	1+(?___ftadd)+03h
  4061  0098  0846               	movf	(floor@i+2),w
  4062  0099  00B8               	movwf	2+(?___ftadd)+03h
  4063  009A  120A  118A  2406   	fcall	___ftadd
              120A  118A         
  4064  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  4065  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  4066  00A1  0833               	movf	(0+(?___ftadd)),w
  4067  00A2  00C0               	movwf	(?_floor)
  4068  00A3  0834               	movf	(1+(?___ftadd)),w
  4069  00A4  00C1               	movwf	(?_floor+1)
  4070  00A5  0835               	movf	(2+(?___ftadd)),w
  4071  00A6  00C2               	movwf	(?_floor+2)
  4072  00A7  28B2               	goto	l3243
  4073                           	
  4074  00A8                     l6120:	
  4075  00A8  28B2               	goto	l3243
  4076                           	
  4077  00A9                     l3245:	
  4078                           	line	29
  4079                           	
  4080  00A9                     l6122:	
  4081  00A9  1283               	bcf	status, 5	;RP0=0, select bank0
  4082  00AA  1303               	bcf	status, 6	;RP1=0, select bank0
  4083  00AB  0844               	movf	(floor@i),w
  4084  00AC  00C0               	movwf	(?_floor)
  4085  00AD  0845               	movf	(floor@i+1),w
  4086  00AE  00C1               	movwf	(?_floor+1)
  4087  00AF  0846               	movf	(floor@i+2),w
  4088  00B0  00C2               	movwf	(?_floor+2)
  4089  00B1  28B2               	goto	l3243
  4090                           	
  4091  00B2                     l6124:	
  4092                           	line	30
  4093                           	
  4094  00B2                     l3243:	
  4095  00B2  0008               	return
  4096                           	opt stack 0
  4097                           GLOBAL	__end_of_floor
  4098  00B3                     	__end_of_floor:
  4099 ;; =============== function _floor ends ============
  4100                           
  4101                           	signat	_floor,4219
  4102                           	global	___ftsub
  4103                           psect	text797,local,class=CODE,delta=2
  4104                           global __ptext797
  4105  1705                     __ptext797:
  4106                           
  4107 ;; *************** function ___ftsub *****************
  4108 ;; Defined at:
  4109 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  f2              3   32[BANK0 ] float 
  4112 ;;  f1              3   35[BANK0 ] float 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  3   32[BANK0 ] float 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0, pclath, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         0       6       0       0       0
  4125 ;;      Locals:         0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0
  4127 ;;      Totals:         0       6       0       0       0
  4128 ;;Total ram usage:        6 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    2
  4131 ;; This function calls:
  4132 ;;		___ftadd
  4133 ;; This function is called by:
  4134 ;;		_exp
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           psect	text797
  4138                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4139                           	line	17
  4140                           	global	__size_of___ftsub
  4141  001F                     	__size_of___ftsub	equ	__end_of___ftsub-___ftsub
  4142                           	
  4143  1705                     ___ftsub:	
  4144                           	opt	stack 2
  4145                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4146                           	line	18
  4147                           	
  4148  1705                     l6092:	
  4149  1705  3080               	movlw	080h
  4150  1706  1283               	bcf	status, 5	;RP0=0, select bank0
  4151  1707  1303               	bcf	status, 6	;RP1=0, select bank0
  4152  1708  06C2               	xorwf	(___ftsub@f2+2),f
  4153                           	line	19
  4154                           	
  4155  1709                     l6094:	
  4156  1709  0843               	movf	(___ftsub@f1),w
  4157  170A  00B3               	movwf	(?___ftadd)
  4158  170B  0844               	movf	(___ftsub@f1+1),w
  4159  170C  00B4               	movwf	(?___ftadd+1)
  4160  170D  0845               	movf	(___ftsub@f1+2),w
  4161  170E  00B5               	movwf	(?___ftadd+2)
  4162  170F  0840               	movf	(___ftsub@f2),w
  4163  1710  00B6               	movwf	0+(?___ftadd)+03h
  4164  1711  0841               	movf	(___ftsub@f2+1),w
  4165  1712  00B7               	movwf	1+(?___ftadd)+03h
  4166  1713  0842               	movf	(___ftsub@f2+2),w
  4167  1714  00B8               	movwf	2+(?___ftadd)+03h
  4168  1715  120A  118A  2406   	fcall	___ftadd
              160A  118A         
  4169  171A  1283               	bcf	status, 5	;RP0=0, select bank0
  4170  171B  1303               	bcf	status, 6	;RP1=0, select bank0
  4171  171C  0833               	movf	(0+(?___ftadd)),w
  4172  171D  00C0               	movwf	(?___ftsub)
  4173  171E  0834               	movf	(1+(?___ftadd)),w
  4174  171F  00C1               	movwf	(?___ftsub+1)
  4175  1720  0835               	movf	(2+(?___ftadd)),w
  4176  1721  00C2               	movwf	(?___ftsub+2)
  4177  1722  2F23               	goto	l2963
  4178                           	
  4179  1723                     l6096:	
  4180                           	line	20
  4181                           	
  4182  1723                     l2963:	
  4183  1723  0008               	return
  4184                           	opt stack 0
  4185                           GLOBAL	__end_of___ftsub
  4186  1724                     	__end_of___ftsub:
  4187 ;; =============== function ___ftsub ends ============
  4188                           
  4189                           	signat	___ftsub,8315
  4190                           	global	_read_a2d
  4191                           psect	text798,local,class=CODE,delta=2
  4192                           global __ptext798
  4193  08B3                     __ptext798:
  4194                           
  4195 ;; *************** function _read_a2d *****************
  4196 ;; Defined at:
  4197 ;;		line 123 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\
       Serial-Requirements\Codes\USART_main.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  channel         1    wreg     unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  channel         1    7[BANK0 ] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  3    4[BANK0 ] float 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, pclath, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4211 ;;      Params:         0       3       0       0       0
  4212 ;;      Locals:         0       1       0       0       0
  4213 ;;      Temps:          2       0       0       0       0
  4214 ;;      Totals:         2       4       0       0       0
  4215 ;;Total ram usage:        6 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    2
  4218 ;; This function calls:
  4219 ;;		_DelayMs
  4220 ;;		___lbtoft
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           psect	text798
  4226                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
  4227                           	line	123
  4228                           	global	__size_of_read_a2d
  4229  0039                     	__size_of_read_a2d	equ	__end_of_read_a2d-_read_a2d
  4230                           	
  4231  08B3                     _read_a2d:	
  4232                           	opt	stack 5
  4233                           ; Regs used in _read_a2d: [wreg+status,2+status,0+pclath+cstack]
  4234                           ;read_a2d@channel stored from wreg
  4235  08B3  1283               	bcf	status, 5	;RP0=0, select bank0
  4236  08B4  1303               	bcf	status, 6	;RP1=0, select bank0
  4237  08B5  00A7               	movwf	(read_a2d@channel)
  4238                           	line	124
  4239                           	
  4240  08B6                     l6080:	
  4241                           ;USART_main.c: 124: channel &=0x07;
  4242  08B6  3007               	movlw	(07h)
  4243  08B7  00FC               	movwf	(??_read_a2d+0)+0
  4244  08B8  087C               	movf	(??_read_a2d+0)+0,w
  4245  08B9  05A7               	andwf	(read_a2d@channel),f
  4246                           	line	125
  4247                           ;USART_main.c: 125: ADCON0 = 0x41;
  4248  08BA  3041               	movlw	(041h)
  4249  08BB  009F               	movwf	(31)	;volatile
  4250                           	line	126
  4251                           ;USART_main.c: 126: ADCON1 = 0x0E;
  4252  08BC  300E               	movlw	(0Eh)
  4253  08BD  1683               	bsf	status, 5	;RP0=1, select bank1
  4254  08BE  1303               	bcf	status, 6	;RP1=0, select bank1
  4255  08BF  009F               	movwf	(159)^080h	;volatile
  4256                           	line	127
  4257                           	
  4258  08C0                     l6082:	
  4259                           ;USART_main.c: 127: DelayMs(10);
  4260  08C0  300A               	movlw	(0Ah)
  4261  08C1  160A  118A  2744   	fcall	_DelayMs
              120A  158A         
  4262                           	line	128
  4263                           	
  4264  08C6                     l6084:	
  4265                           ;USART_main.c: 128: ADCON0 |=(channel<<3);
  4266  08C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4267  08C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4268  08C8  0827               	movf	(read_a2d@channel),w
  4269  08C9  00FC               	movwf	(??_read_a2d+0)+0
  4270  08CA  3002               	movlw	(03h)-1
  4271  08CB                     u3985:
  4272  08CB  1003               	clrc
  4273  08CC  0DFC               	rlf	(??_read_a2d+0)+0,f
  4274  08CD  3EFF               	addlw	-1
  4275  08CE  1D03               	skipz
  4276  08CF  28CB               	goto	u3985
  4277  08D0  1003               	clrc
  4278  08D1  0D7C               	rlf	(??_read_a2d+0)+0,w
  4279  08D2  00FD               	movwf	(??_read_a2d+1)+0
  4280  08D3  087D               	movf	(??_read_a2d+1)+0,w
  4281  08D4  049F               	iorwf	(31),f	;volatile
  4282                           	line	129
  4283                           	
  4284  08D5                     l6086:	
  4285                           ;USART_main.c: 129: GO_nDONE = 1;
  4286  08D5  151F               	bsf	(250/8),(250)&7
  4287                           	line	130
  4288                           ;USART_main.c: 130: while(GO_nDONE)
  4289  08D6  28D7               	goto	l2171
  4290                           	
  4291  08D7                     l2172:	
  4292                           	line	131
  4293                           ;USART_main.c: 131: continue;
  4294                           	
  4295  08D7                     l2171:	
  4296                           	line	130
  4297  08D7  191F               	btfsc	(250/8),(250)&7
  4298  08D8  28DA               	goto	u3991
  4299  08D9  28DB               	goto	u3990
  4300  08DA                     u3991:
  4301  08DA  28D7               	goto	l2171
  4302  08DB                     u3990:
  4303  08DB  28DC               	goto	l6088
  4304                           	
  4305  08DC                     l2173:	
  4306                           	line	132
  4307                           	
  4308  08DC                     l6088:	
  4309                           ;USART_main.c: 132: return( (float) ADRESH);
  4310  08DC  081E               	movf	(30),w	;volatile
  4311  08DD  160A  118A  26E6   	fcall	___lbtoft
              120A  158A         
  4312  08E2  0878               	movf	(0+(?___lbtoft)),w
  4313  08E3  1283               	bcf	status, 5	;RP0=0, select bank0
  4314  08E4  1303               	bcf	status, 6	;RP1=0, select bank0
  4315  08E5  00A4               	movwf	(?_read_a2d)
  4316  08E6  0879               	movf	(1+(?___lbtoft)),w
  4317  08E7  00A5               	movwf	(?_read_a2d+1)
  4318  08E8  087A               	movf	(2+(?___lbtoft)),w
  4319  08E9  00A6               	movwf	(?_read_a2d+2)
  4320  08EA  28EB               	goto	l2174
  4321                           	
  4322  08EB                     l6090:	
  4323                           	line	133
  4324                           	
  4325  08EB                     l2174:	
  4326  08EB  0008               	return
  4327                           	opt stack 0
  4328                           GLOBAL	__end_of_read_a2d
  4329  08EC                     	__end_of_read_a2d:
  4330 ;; =============== function _read_a2d ends ============
  4331                           
  4332                           	signat	_read_a2d,4219
  4333                           	global	_ldexp
  4334                           psect	text799,local,class=CODE,delta=2
  4335                           global __ptext799
  4336  0E5D                     __ptext799:
  4337                           
  4338 ;; *************** function _ldexp *****************
  4339 ;; Defined at:
  4340 ;;		line 278 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  value           3   32[BANK0 ] float 
  4343 ;;  newexp          2   35[BANK0 ] int 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  3   32[BANK0 ] int 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4355 ;;      Params:         0       5       0       0       0
  4356 ;;      Locals:         0       3       0       0       0
  4357 ;;      Temps:          0       2       0       0       0
  4358 ;;      Totals:         0      10       0       0       0
  4359 ;;Total ram usage:       10 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    1
  4362 ;; This function calls:
  4363 ;;		___ftge
  4364 ;;		___ftneg
  4365 ;; This function is called by:
  4366 ;;		_exp
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           psect	text799
  4370                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  4371                           	line	278
  4372                           	global	__size_of_ldexp
  4373  00CA                     	__size_of_ldexp	equ	__end_of_ldexp-_ldexp
  4374                           	
  4375  0E5D                     _ldexp:	
  4376                           	opt	stack 3
  4377                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4378                           	line	279
  4379                           	
  4380  0E5D                     l6030:	
  4381  0E5D  1283               	bcf	status, 5	;RP0=0, select bank0
  4382  0E5E  1303               	bcf	status, 6	;RP1=0, select bank0
  4383  0E5F  0842               	movf	(ldexp@value+2),w
  4384  0E60  0441               	iorwf	(ldexp@value+1),w
  4385  0E61  0440               	iorwf	(ldexp@value),w
  4386  0E62  1D03               	skipz
  4387  0E63  2E65               	goto	u3921
  4388  0E64  2E66               	goto	u3920
  4389  0E65                     u3921:
  4390  0E65  2E6E               	goto	l6036
  4391  0E66                     u3920:
  4392                           	line	280
  4393                           	
  4394  0E66                     l6032:	
  4395  0E66  3000               	movlw	0x0
  4396  0E67  00C0               	movwf	(?_ldexp)
  4397  0E68  3000               	movlw	0x0
  4398  0E69  00C1               	movwf	(?_ldexp+1)
  4399  0E6A  3000               	movlw	0x0
  4400  0E6B  00C2               	movwf	(?_ldexp+2)
  4401  0E6C  2F26               	goto	l3271
  4402                           	
  4403  0E6D                     l6034:	
  4404  0E6D  2F26               	goto	l3271
  4405                           	
  4406  0E6E                     l3270:	
  4407                           	line	282
  4408                           	
  4409  0E6E                     l6036:	
  4410  0E6E  0842               	movf	0+(ldexp@value)+02h,w
  4411  0E6F  397F               	andlw	(1<<7)-1
  4412  0E70  00C5               	movwf	(??_ldexp+0)+0
  4413  0E71  01C6               	clrf	(??_ldexp+0)+0+1
  4414  0E72  3001               	movlw	01h
  4415  0E73  00FF               	movwf	btemp+1
  4416  0E74                     u3935:
  4417  0E74  1003               	clrc
  4418  0E75  0DC5               	rlf	(??_ldexp+0)+0,f
  4419  0E76  0DC6               	rlf	(??_ldexp+0)+1,f
  4420  0E77  0BFF               	decfsz	btemp+1,f
  4421  0E78  2E74               	goto	u3935
  4422  0E79  0845               	movf	0+(??_ldexp+0)+0,w
  4423  0E7A  07C3               	addwf	(ldexp@newexp),f
  4424  0E7B  1803               	skipnc
  4425  0E7C  0AC4               	incf	(ldexp@newexp+1),f
  4426  0E7D  0846               	movf	1+(??_ldexp+0)+0,w
  4427  0E7E  07C4               	addwf	(ldexp@newexp+1),f
  4428                           	line	283
  4429                           	
  4430  0E7F                     l6038:	
  4431  0E7F  0D41               	rlf	0+(ldexp@value)+01h,w
  4432  0E80  0D41               	rlf	0+(ldexp@value)+01h,w
  4433  0E81  3901               	andlw	1
  4434  0E82  00C5               	movwf	(??_ldexp+0)+0
  4435  0E83  01C6               	clrf	(??_ldexp+0)+0+1
  4436  0E84  0845               	movf	0+(??_ldexp+0)+0,w
  4437  0E85  07C3               	addwf	(ldexp@newexp),f
  4438  0E86  1803               	skipnc
  4439  0E87  0AC4               	incf	(ldexp@newexp+1),f
  4440  0E88  0846               	movf	1+(??_ldexp+0)+0,w
  4441  0E89  07C4               	addwf	(ldexp@newexp+1),f
  4442                           	line	287
  4443                           	
  4444  0E8A                     l6040:	
  4445  0E8A  1FC4               	btfss	(ldexp@newexp+1),7
  4446  0E8B  2E8D               	goto	u3941
  4447  0E8C  2E8E               	goto	u3940
  4448  0E8D                     u3941:
  4449  0E8D  2E9F               	goto	l6048
  4450  0E8E                     u3940:
  4451                           	line	288
  4452                           	
  4453  0E8E                     l6042:	
  4454  0E8E  3022               	movlw	low(022h)
  4455  0E8F  1683               	bsf	status, 5	;RP0=1, select bank1
  4456  0E90  1303               	bcf	status, 6	;RP1=0, select bank1
  4457  0E91  00BB               	movwf	(_errno)^080h
  4458  0E92  3000               	movlw	high(022h)
  4459  0E93  00BC               	movwf	((_errno)^080h)+1
  4460                           	line	289
  4461  0E94  3000               	movlw	0x0
  4462  0E95  1283               	bcf	status, 5	;RP0=0, select bank0
  4463  0E96  1303               	bcf	status, 6	;RP1=0, select bank0
  4464  0E97  00C0               	movwf	(?_ldexp)
  4465  0E98  3000               	movlw	0x0
  4466  0E99  00C1               	movwf	(?_ldexp+1)
  4467  0E9A  3000               	movlw	0x0
  4468  0E9B  00C2               	movwf	(?_ldexp+2)
  4469  0E9C  2F26               	goto	l3271
  4470                           	
  4471  0E9D                     l6044:	
  4472  0E9D  2F26               	goto	l3271
  4473                           	line	290
  4474                           	
  4475  0E9E                     l6046:	
  4476  0E9E  2F25               	goto	l6076
  4477                           	line	291
  4478                           	
  4479  0E9F                     l3272:	
  4480                           	
  4481  0E9F                     l6048:	
  4482  0E9F  0844               	movf	(ldexp@newexp+1),w
  4483  0EA0  3A80               	xorlw	80h
  4484  0EA1  00FF               	movwf	btemp+1
  4485  0EA2  3081               	movlw	(high(0100h))^80h
  4486  0EA3  027F               	subwf	btemp+1,w
  4487  0EA4  1D03               	skipz
  4488  0EA5  2EA8               	goto	u3955
  4489  0EA6  3000               	movlw	low(0100h)
  4490  0EA7  0243               	subwf	(ldexp@newexp),w
  4491  0EA8                     u3955:
  4492                           
  4493  0EA8  1C03               	skipc
  4494  0EA9  2EAB               	goto	u3951
  4495  0EAA  2EAC               	goto	u3950
  4496  0EAB                     u3951:
  4497  0EAB  2F07               	goto	l6072
  4498  0EAC                     u3950:
  4499                           	line	292
  4500                           	
  4501  0EAC                     l6050:	
  4502  0EAC  3022               	movlw	low(022h)
  4503  0EAD  1683               	bsf	status, 5	;RP0=1, select bank1
  4504  0EAE  1303               	bcf	status, 6	;RP1=0, select bank1
  4505  0EAF  00BB               	movwf	(_errno)^080h
  4506  0EB0  3000               	movlw	high(022h)
  4507  0EB1  00BC               	movwf	((_errno)^080h)+1
  4508                           	line	293
  4509                           	
  4510  0EB2                     l6052:	
  4511  0EB2  1283               	bcf	status, 5	;RP0=0, select bank0
  4512  0EB3  1303               	bcf	status, 6	;RP1=0, select bank0
  4513  0EB4  0840               	movf	(ldexp@value),w
  4514  0EB5  00F0               	movwf	(?___ftge)
  4515  0EB6  0841               	movf	(ldexp@value+1),w
  4516  0EB7  00F1               	movwf	(?___ftge+1)
  4517  0EB8  0842               	movf	(ldexp@value+2),w
  4518  0EB9  00F2               	movwf	(?___ftge+2)
  4519  0EBA  3000               	movlw	0x0
  4520  0EBB  00F3               	movwf	0+(?___ftge)+03h
  4521  0EBC  3000               	movlw	0x0
  4522  0EBD  00F4               	movwf	1+(?___ftge)+03h
  4523  0EBE  3000               	movlw	0x0
  4524  0EBF  00F5               	movwf	2+(?___ftge)+03h
  4525  0EC0  120A  158A  2291   	fcall	___ftge
              120A  158A         
  4526  0EC5  1803               	btfsc	status,0
  4527  0EC6  2EC8               	goto	u3961
  4528  0EC7  2EC9               	goto	u3960
  4529  0EC8                     u3961:
  4530  0EC8  2EFB               	goto	l6068
  4531  0EC9                     u3960:
  4532  0EC9  2ED4               	goto	l6058
  4533                           	line	294
  4534                           	
  4535  0ECA                     l6054:	
  4536  0ECA  2ED4               	goto	l6058
  4537                           	
  4538  0ECB                     l6056:	
  4539  0ECB  3000               	movlw	0x0
  4540  0ECC  1283               	bcf	status, 5	;RP0=0, select bank0
  4541  0ECD  1303               	bcf	status, 6	;RP1=0, select bank0
  4542  0ECE  00C7               	movwf	(_ldexp$3573)
  4543  0ECF  3080               	movlw	0x80
  4544  0ED0  00C8               	movwf	(_ldexp$3573+1)
  4545  0ED1  307F               	movlw	0x7f
  4546  0ED2  00C9               	movwf	(_ldexp$3573+2)
  4547  0ED3  2EDD               	goto	l6060
  4548                           	
  4549  0ED4                     l3277:	
  4550                           	
  4551  0ED4                     l6058:	
  4552  0ED4  30FF               	movlw	0xff
  4553  0ED5  1283               	bcf	status, 5	;RP0=0, select bank0
  4554  0ED6  1303               	bcf	status, 6	;RP1=0, select bank0
  4555  0ED7  00C7               	movwf	(_ldexp$3573)
  4556  0ED8  307F               	movlw	0x7f
  4557  0ED9  00C8               	movwf	(_ldexp$3573+1)
  4558  0EDA  307F               	movlw	0x7f
  4559  0EDB  00C9               	movwf	(_ldexp$3573+2)
  4560  0EDC  2EDD               	goto	l6060
  4561                           	
  4562  0EDD                     l3279:	
  4563                           	
  4564  0EDD                     l6060:	
  4565  0EDD  0847               	movf	(_ldexp$3573),w
  4566  0EDE  00F8               	movwf	(?___ftneg)
  4567  0EDF  0848               	movf	(_ldexp$3573+1),w
  4568  0EE0  00F9               	movwf	(?___ftneg+1)
  4569  0EE1  0849               	movf	(_ldexp$3573+2),w
  4570  0EE2  00FA               	movwf	(?___ftneg+2)
  4571  0EE3  160A  118A  26B0   	fcall	___ftneg
              120A  158A         
  4572  0EE8  0878               	movf	(0+(?___ftneg)),w
  4573  0EE9  1283               	bcf	status, 5	;RP0=0, select bank0
  4574  0EEA  1303               	bcf	status, 6	;RP1=0, select bank0
  4575  0EEB  00C0               	movwf	(?_ldexp)
  4576  0EEC  0879               	movf	(1+(?___ftneg)),w
  4577  0EED  00C1               	movwf	(?_ldexp+1)
  4578  0EEE  087A               	movf	(2+(?___ftneg)),w
  4579  0EEF  00C2               	movwf	(?_ldexp+2)
  4580  0EF0  2F26               	goto	l3271
  4581                           	
  4582  0EF1                     l6062:	
  4583  0EF1  2F26               	goto	l3271
  4584                           	
  4585  0EF2                     l6064:	
  4586  0EF2  2F25               	goto	l6076
  4587                           	line	295
  4588                           	
  4589  0EF3                     l3275:	
  4590                           	line	296
  4591  0EF3  2EFB               	goto	l6068
  4592                           	
  4593  0EF4                     l6066:	
  4594  0EF4  3000               	movlw	0x0
  4595  0EF5  00C0               	movwf	(?_ldexp)
  4596  0EF6  3080               	movlw	0x80
  4597  0EF7  00C1               	movwf	(?_ldexp+1)
  4598  0EF8  307F               	movlw	0x7f
  4599  0EF9  00C2               	movwf	(?_ldexp+2)
  4600  0EFA  2F26               	goto	l3271
  4601                           	
  4602  0EFB                     l3282:	
  4603                           	
  4604  0EFB                     l6068:	
  4605  0EFB  30FF               	movlw	0xff
  4606  0EFC  1283               	bcf	status, 5	;RP0=0, select bank0
  4607  0EFD  1303               	bcf	status, 6	;RP1=0, select bank0
  4608  0EFE  00C0               	movwf	(?_ldexp)
  4609  0EFF  307F               	movlw	0x7f
  4610  0F00  00C1               	movwf	(?_ldexp+1)
  4611  0F01  307F               	movlw	0x7f
  4612  0F02  00C2               	movwf	(?_ldexp+2)
  4613  0F03  2F26               	goto	l3271
  4614                           	
  4615  0F04                     l3284:	
  4616  0F04  2F26               	goto	l3271
  4617                           	
  4618  0F05                     l6070:	
  4619  0F05  2F26               	goto	l3271
  4620                           	
  4621  0F06                     l3280:	
  4622                           	line	297
  4623  0F06  2F25               	goto	l6076
  4624                           	line	298
  4625                           	
  4626  0F07                     l3274:	
  4627                           	line	300
  4628                           	
  4629  0F07                     l6072:	
  4630  0F07  1283               	bcf	status, 5	;RP0=0, select bank0
  4631  0F08  1303               	bcf	status, 6	;RP1=0, select bank0
  4632  0F09  0844               	movf	(ldexp@newexp+1),w
  4633  0F0A  00C6               	movwf	(??_ldexp+0)+0+1
  4634  0F0B  0843               	movf	(ldexp@newexp),w
  4635  0F0C  00C5               	movwf	(??_ldexp+0)+0
  4636  0F0D  3001               	movlw	01h
  4637  0F0E  00FF               	movwf	btemp+1
  4638  0F0F                     u3975:
  4639  0F0F  0D46               	rlf	(??_ldexp+0)+1,w
  4640  0F10  0CC6               	rrf	(??_ldexp+0)+1,f
  4641  0F11  0CC5               	rrf	(??_ldexp+0)+0,f
  4642  0F12  0BFF               	decfsz	btemp+1,f
  4643  0F13  2F0F               	goto	u3975
  4644  0F14  0842               	movf	0+(ldexp@value)+02h,w
  4645  0F15  0645               	xorwf	0+(??_ldexp+0)+0,w
  4646  0F16  3980               	andlw	not ((1<<7)-1)
  4647  0F17  0645               	xorwf	0+(??_ldexp+0)+0,w
  4648  0F18  00C2               	movwf	0+(ldexp@value)+02h
  4649                           	line	301
  4650                           	
  4651  0F19                     l6074:	
  4652  0F19  0843               	movf	(ldexp@newexp),w
  4653  0F1A  3901               	andlw	01h
  4654  0F1B  00C5               	movwf	(??_ldexp+0)+0
  4655  0F1C  0CC5               	rrf	(??_ldexp+0)+0,f
  4656  0F1D  0CC5               	rrf	(??_ldexp+0)+0,f
  4657  0F1E  0841               	movf	0+(ldexp@value)+01h,w
  4658  0F1F  0645               	xorwf	(??_ldexp+0)+0,w
  4659  0F20  397F               	andlw	not (((1<<1)-1)<<7)
  4660  0F21  0645               	xorwf	(??_ldexp+0)+0,w
  4661  0F22  00C1               	movwf	0+(ldexp@value)+01h
  4662  0F23  2F25               	goto	l6076
  4663                           	line	305
  4664                           	
  4665  0F24                     l3285:	
  4666  0F24  2F25               	goto	l6076
  4667                           	
  4668  0F25                     l3273:	
  4669                           	line	306
  4670                           	
  4671  0F25                     l6076:	
  4672  0F25  2F26               	goto	l3271
  4673                           	
  4674  0F26                     l6078:	
  4675                           	line	307
  4676                           	
  4677  0F26                     l3271:	
  4678  0F26  0008               	return
  4679                           	opt stack 0
  4680                           GLOBAL	__end_of_ldexp
  4681  0F27                     	__end_of_ldexp:
  4682 ;; =============== function _ldexp ends ============
  4683                           
  4684                           	signat	_ldexp,8315
  4685                           	global	___lltoft
  4686                           psect	text800,local,class=CODE,delta=2
  4687                           global __ptext800
  4688  0881                     __ptext800:
  4689                           
  4690 ;; *************** function ___lltoft *****************
  4691 ;; Defined at:
  4692 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  c               4    8[COMMON] unsigned long 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  exp             1   13[COMMON] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  3    8[COMMON] float 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         4       0       0       0       0
  4707 ;;      Locals:         1       0       0       0       0
  4708 ;;      Temps:          1       0       0       0       0
  4709 ;;      Totals:         6       0       0       0       0
  4710 ;;Total ram usage:        6 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    1
  4713 ;; This function calls:
  4714 ;;		___ftpack
  4715 ;; This function is called by:
  4716 ;;		_pow
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           psect	text800
  4720                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  4721                           	line	36
  4722                           	global	__size_of___lltoft
  4723  0032                     	__size_of___lltoft	equ	__end_of___lltoft-___lltoft
  4724                           	
  4725  0881                     ___lltoft:	
  4726                           	opt	stack 4
  4727                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4728                           	line	38
  4729                           	
  4730  0881                     l6020:	
  4731  0881  308E               	movlw	(08Eh)
  4732  0882  00FC               	movwf	(??___lltoft+0)+0
  4733  0883  087C               	movf	(??___lltoft+0)+0,w
  4734  0884  00FD               	movwf	(___lltoft@exp)
  4735                           	line	41
  4736  0885  2894               	goto	l6024
  4737                           	
  4738  0886                     l3118:	
  4739                           	line	42
  4740                           	
  4741  0886                     l6022:	
  4742  0886  3001               	movlw	01h
  4743  0887                     u3905:
  4744  0887  1003               	clrc
  4745  0888  0CFB               	rrf	(___lltoft@c+3),f
  4746  0889  0CFA               	rrf	(___lltoft@c+2),f
  4747  088A  0CF9               	rrf	(___lltoft@c+1),f
  4748  088B  0CF8               	rrf	(___lltoft@c),f
  4749  088C  3EFF               	addlw	-1
  4750  088D  1D03               	skipz
  4751  088E  2887               	goto	u3905
  4752                           
  4753                           	line	43
  4754  088F  3001               	movlw	(01h)
  4755  0890  00FC               	movwf	(??___lltoft+0)+0
  4756  0891  087C               	movf	(??___lltoft+0)+0,w
  4757  0892  07FD               	addwf	(___lltoft@exp),f
  4758  0893  2894               	goto	l6024
  4759                           	line	44
  4760                           	
  4761  0894                     l3117:	
  4762                           	line	41
  4763                           	
  4764  0894                     l6024:	
  4765  0894  30FF               	movlw	high highword(-16777216)
  4766  0895  057B               	andwf	(___lltoft@c+3),w
  4767  0896  1D03               	btfss	status,2
  4768  0897  2899               	goto	u3911
  4769  0898  289A               	goto	u3910
  4770  0899                     u3911:
  4771  0899  2886               	goto	l6022
  4772  089A                     u3910:
  4773  089A  289B               	goto	l6026
  4774                           	
  4775  089B                     l3119:	
  4776                           	line	45
  4777                           	
  4778  089B                     l6026:	
  4779  089B  0878               	movf	(___lltoft@c),w
  4780  089C  00F0               	movwf	(?___ftpack)
  4781  089D  0879               	movf	(___lltoft@c+1),w
  4782  089E  00F1               	movwf	(?___ftpack+1)
  4783  089F  087A               	movf	(___lltoft@c+2),w
  4784  08A0  00F2               	movwf	(?___ftpack+2)
  4785  08A1  087D               	movf	(___lltoft@exp),w
  4786  08A2  00FC               	movwf	(??___lltoft+0)+0
  4787  08A3  087C               	movf	(??___lltoft+0)+0,w
  4788  08A4  00F3               	movwf	0+(?___ftpack)+03h
  4789  08A5  01F4               	clrf	0+(?___ftpack)+04h
  4790  08A6  120A  158A  2371   	fcall	___ftpack
              120A  158A         
  4791  08AB  0870               	movf	(0+(?___ftpack)),w
  4792  08AC  00F8               	movwf	(?___lltoft)
  4793  08AD  0871               	movf	(1+(?___ftpack)),w
  4794  08AE  00F9               	movwf	(?___lltoft+1)
  4795  08AF  0872               	movf	(2+(?___ftpack)),w
  4796  08B0  00FA               	movwf	(?___lltoft+2)
  4797  08B1  28B2               	goto	l3120
  4798                           	
  4799  08B2                     l6028:	
  4800                           	line	46
  4801                           	
  4802  08B2                     l3120:	
  4803  08B2  0008               	return
  4804                           	opt stack 0
  4805                           GLOBAL	__end_of___lltoft
  4806  08B3                     	__end_of___lltoft:
  4807 ;; =============== function ___lltoft ends ============
  4808                           
  4809                           	signat	___lltoft,4219
  4810                           	global	___altoft
  4811                           psect	text801,local,class=CODE,delta=2
  4812                           global __ptext801
  4813  0983                     __ptext801:
  4814                           
  4815 ;; *************** function ___altoft *****************
  4816 ;; Defined at:
  4817 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  c               4    0[BANK0 ] long 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  sign            1    7[BANK0 ] unsigned char 
  4822 ;;  exp             1    6[BANK0 ] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  3    0[BANK0 ] float 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0, pclath, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         0       4       0       0       0
  4833 ;;      Locals:         0       2       0       0       0
  4834 ;;      Temps:          0       2       0       0       0
  4835 ;;      Totals:         0       8       0       0       0
  4836 ;;Total ram usage:        8 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    1
  4839 ;; This function calls:
  4840 ;;		___ftpack
  4841 ;; This function is called by:
  4842 ;;		_floor
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           psect	text801
  4846                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  4847                           	line	43
  4848                           	global	__size_of___altoft
  4849  004D                     	__size_of___altoft	equ	__end_of___altoft-___altoft
  4850                           	
  4851  0983                     ___altoft:	
  4852                           	opt	stack 2
  4853                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4854                           	line	45
  4855                           	
  4856  0983                     l6002:	
  4857  0983  1283               	bcf	status, 5	;RP0=0, select bank0
  4858  0984  1303               	bcf	status, 6	;RP1=0, select bank0
  4859  0985  01A7               	clrf	(___altoft@sign)
  4860                           	line	46
  4861                           	
  4862  0986                     l6004:	
  4863  0986  308E               	movlw	(08Eh)
  4864  0987  00A4               	movwf	(??___altoft+0)+0
  4865  0988  0824               	movf	(??___altoft+0)+0,w
  4866  0989  00A6               	movwf	(___altoft@exp)
  4867                           	line	47
  4868                           	
  4869  098A                     l6006:	
  4870  098A  1FA3               	btfss	(___altoft@c+3),7
  4871  098B  298D               	goto	u3871
  4872  098C  298E               	goto	u3870
  4873  098D                     u3871:
  4874  098D  29AC               	goto	l6014
  4875  098E                     u3870:
  4876                           	line	48
  4877                           	
  4878  098E                     l6008:	
  4879  098E  09A0               	comf	(___altoft@c),f
  4880  098F  09A1               	comf	(___altoft@c+1),f
  4881  0990  09A2               	comf	(___altoft@c+2),f
  4882  0991  09A3               	comf	(___altoft@c+3),f
  4883  0992  0AA0               	incf	(___altoft@c),f
  4884  0993  1903               	skipnz
  4885  0994  0AA1               	incf	(___altoft@c+1),f
  4886  0995  1903               	skipnz
  4887  0996  0AA2               	incf	(___altoft@c+2),f
  4888  0997  1903               	skipnz
  4889  0998  0AA3               	incf	(___altoft@c+3),f
  4890                           	line	49
  4891                           	
  4892  0999                     l6010:	
  4893  0999  01A7               	clrf	(___altoft@sign)
  4894  099A  1403               	bsf	status,0
  4895  099B  0DA7               	rlf	(___altoft@sign),f
  4896  099C  29AC               	goto	l6014
  4897                           	line	50
  4898                           	
  4899  099D                     l3108:	
  4900                           	line	52
  4901  099D  29AC               	goto	l6014
  4902                           	
  4903  099E                     l3110:	
  4904                           	line	53
  4905                           	
  4906  099E                     l6012:	
  4907  099E  3001               	movlw	01h
  4908  099F                     u3885:
  4909  099F  1003               	clrc
  4910  09A0  0CA3               	rrf	(___altoft@c+3),f
  4911  09A1  0CA2               	rrf	(___altoft@c+2),f
  4912  09A2  0CA1               	rrf	(___altoft@c+1),f
  4913  09A3  0CA0               	rrf	(___altoft@c),f
  4914  09A4  3EFF               	addlw	-1
  4915  09A5  1D03               	skipz
  4916  09A6  299F               	goto	u3885
  4917                           
  4918                           	line	54
  4919  09A7  3001               	movlw	(01h)
  4920  09A8  00A4               	movwf	(??___altoft+0)+0
  4921  09A9  0824               	movf	(??___altoft+0)+0,w
  4922  09AA  07A6               	addwf	(___altoft@exp),f
  4923  09AB  29AC               	goto	l6014
  4924                           	line	55
  4925                           	
  4926  09AC                     l3109:	
  4927                           	line	52
  4928                           	
  4929  09AC                     l6014:	
  4930  09AC  30FF               	movlw	high highword(-16777216)
  4931  09AD  0523               	andwf	(___altoft@c+3),w
  4932  09AE  1D03               	btfss	status,2
  4933  09AF  29B1               	goto	u3891
  4934  09B0  29B2               	goto	u3890
  4935  09B1                     u3891:
  4936  09B1  299E               	goto	l6012
  4937  09B2                     u3890:
  4938  09B2  29B3               	goto	l6016
  4939                           	
  4940  09B3                     l3111:	
  4941                           	line	56
  4942                           	
  4943  09B3                     l6016:	
  4944  09B3  0820               	movf	(___altoft@c),w
  4945  09B4  00F0               	movwf	(?___ftpack)
  4946  09B5  0821               	movf	(___altoft@c+1),w
  4947  09B6  00F1               	movwf	(?___ftpack+1)
  4948  09B7  0822               	movf	(___altoft@c+2),w
  4949  09B8  00F2               	movwf	(?___ftpack+2)
  4950  09B9  0826               	movf	(___altoft@exp),w
  4951  09BA  00A4               	movwf	(??___altoft+0)+0
  4952  09BB  0824               	movf	(??___altoft+0)+0,w
  4953  09BC  00F3               	movwf	0+(?___ftpack)+03h
  4954  09BD  0827               	movf	(___altoft@sign),w
  4955  09BE  00A5               	movwf	(??___altoft+1)+0
  4956  09BF  0825               	movf	(??___altoft+1)+0,w
  4957  09C0  00F4               	movwf	0+(?___ftpack)+04h
  4958  09C1  120A  158A  2371   	fcall	___ftpack
              120A  158A         
  4959  09C6  0870               	movf	(0+(?___ftpack)),w
  4960  09C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4961  09C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4962  09C9  00A0               	movwf	(?___altoft)
  4963  09CA  0871               	movf	(1+(?___ftpack)),w
  4964  09CB  00A1               	movwf	(?___altoft+1)
  4965  09CC  0872               	movf	(2+(?___ftpack)),w
  4966  09CD  00A2               	movwf	(?___altoft+2)
  4967  09CE  29CF               	goto	l3112
  4968                           	
  4969  09CF                     l6018:	
  4970                           	line	57
  4971                           	
  4972  09CF                     l3112:	
  4973  09CF  0008               	return
  4974                           	opt stack 0
  4975                           GLOBAL	__end_of___altoft
  4976  09D0                     	__end_of___altoft:
  4977 ;; =============== function ___altoft ends ============
  4978                           
  4979                           	signat	___altoft,4219
  4980                           	global	___awtoft
  4981                           psect	text802,local,class=CODE,delta=2
  4982                           global __ptext802
  4983  17AB                     __ptext802:
  4984                           
  4985 ;; *************** function ___awtoft *****************
  4986 ;; Defined at:
  4987 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  c               2   11[COMMON] int 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  sign            1    2[BANK0 ] unsigned char 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  3   11[COMMON] float 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5001 ;;      Params:         3       0       0       0       0
  5002 ;;      Locals:         0       1       0       0       0
  5003 ;;      Temps:          0       2       0       0       0
  5004 ;;      Totals:         3       3       0       0       0
  5005 ;;Total ram usage:        6 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    1
  5008 ;; This function calls:
  5009 ;;		___ftpack
  5010 ;; This function is called by:
  5011 ;;		_ftoa
  5012 ;;		_exp
  5013 ;;		_log
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           psect	text802
  5017                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5018                           	line	33
  5019                           	global	__size_of___awtoft
  5020  002A                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  5021                           	
  5022  17AB                     ___awtoft:	
  5023                           	opt	stack 3
  5024                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5025                           	line	36
  5026                           	
  5027  17AB                     l5994:	
  5028  17AB  1283               	bcf	status, 5	;RP0=0, select bank0
  5029  17AC  1303               	bcf	status, 6	;RP1=0, select bank0
  5030  17AD  01A2               	clrf	(___awtoft@sign)
  5031                           	line	37
  5032  17AE  1FFC               	btfss	(___awtoft@c+1),7
  5033  17AF  2FB1               	goto	u3861
  5034  17B0  2FB2               	goto	u3860
  5035  17B1                     u3861:
  5036  17B1  2FBB               	goto	l5998
  5037  17B2                     u3860:
  5038                           	line	38
  5039                           	
  5040  17B2                     l5996:	
  5041  17B2  09FB               	comf	(___awtoft@c),f
  5042  17B3  09FC               	comf	(___awtoft@c+1),f
  5043  17B4  0AFB               	incf	(___awtoft@c),f
  5044  17B5  1903               	skipnz
  5045  17B6  0AFC               	incf	(___awtoft@c+1),f
  5046                           	line	39
  5047  17B7  01A2               	clrf	(___awtoft@sign)
  5048  17B8  1403               	bsf	status,0
  5049  17B9  0DA2               	rlf	(___awtoft@sign),f
  5050  17BA  2FBB               	goto	l5998
  5051                           	line	40
  5052                           	
  5053  17BB                     l3016:	
  5054                           	line	41
  5055                           	
  5056  17BB                     l5998:	
  5057  17BB  087B               	movf	(___awtoft@c),w
  5058  17BC  00F0               	movwf	(?___ftpack)
  5059  17BD  087C               	movf	(___awtoft@c+1),w
  5060  17BE  00F1               	movwf	(?___ftpack+1)
  5061  17BF  01F2               	clrf	(?___ftpack+2)
  5062  17C0  308E               	movlw	(08Eh)
  5063  17C1  00A0               	movwf	(??___awtoft+0)+0
  5064  17C2  0820               	movf	(??___awtoft+0)+0,w
  5065  17C3  00F3               	movwf	0+(?___ftpack)+03h
  5066  17C4  0822               	movf	(___awtoft@sign),w
  5067  17C5  00A1               	movwf	(??___awtoft+1)+0
  5068  17C6  0821               	movf	(??___awtoft+1)+0,w
  5069  17C7  00F4               	movwf	0+(?___ftpack)+04h
  5070  17C8  120A  158A  2371   	fcall	___ftpack
              160A  118A         
  5071  17CD  0870               	movf	(0+(?___ftpack)),w
  5072  17CE  00FB               	movwf	(?___awtoft)
  5073  17CF  0871               	movf	(1+(?___ftpack)),w
  5074  17D0  00FC               	movwf	(?___awtoft+1)
  5075  17D1  0872               	movf	(2+(?___ftpack)),w
  5076  17D2  00FD               	movwf	(?___awtoft+2)
  5077  17D3  2FD4               	goto	l3017
  5078                           	
  5079  17D4                     l6000:	
  5080                           	line	42
  5081                           	
  5082  17D4                     l3017:	
  5083  17D4  0008               	return
  5084                           	opt stack 0
  5085                           GLOBAL	__end_of___awtoft
  5086  17D5                     	__end_of___awtoft:
  5087 ;; =============== function ___awtoft ends ============
  5088                           
  5089                           	signat	___awtoft,4219
  5090                           	global	___lbtoft
  5091                           psect	text803,local,class=CODE,delta=2
  5092                           global __ptext803
  5093  16E6                     __ptext803:
  5094                           
  5095 ;; *************** function ___lbtoft *****************
  5096 ;; Defined at:
  5097 ;;		line 28 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbtoft.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  c               1    wreg     unsigned char 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  c               1   11[COMMON] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  3    8[COMMON] float 
  5104 ;; Registers used:
  5105 ;;		wreg, status,2, status,0, pclath, cstack
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5111 ;;      Params:         3       0       0       0       0
  5112 ;;      Locals:         1       0       0       0       0
  5113 ;;      Temps:          0       4       0       0       0
  5114 ;;      Totals:         4       4       0       0       0
  5115 ;;Total ram usage:        8 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:    1
  5118 ;; This function calls:
  5119 ;;		___ftpack
  5120 ;; This function is called by:
  5121 ;;		_read_a2d
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           psect	text803
  5125                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbtoft.c"
  5126                           	line	28
  5127                           	global	__size_of___lbtoft
  5128  001F                     	__size_of___lbtoft	equ	__end_of___lbtoft-___lbtoft
  5129                           	
  5130  16E6                     ___lbtoft:	
  5131                           	opt	stack 5
  5132                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5133                           ;___lbtoft@c stored from wreg
  5134  16E6  00FB               	movwf	(___lbtoft@c)
  5135                           	line	29
  5136                           	
  5137  16E7                     l5990:	
  5138  16E7  087B               	movf	(___lbtoft@c),w
  5139  16E8  1283               	bcf	status, 5	;RP0=0, select bank0
  5140  16E9  1303               	bcf	status, 6	;RP1=0, select bank0
  5141  16EA  00A0               	movwf	((??___lbtoft+0)+0)
  5142  16EB  01A1               	clrf	((??___lbtoft+0)+0+1)
  5143  16EC  01A2               	clrf	((??___lbtoft+0)+0+2)
  5144  16ED  0820               	movf	0+(??___lbtoft+0)+0,w
  5145  16EE  00F0               	movwf	(?___ftpack)
  5146  16EF  0821               	movf	1+(??___lbtoft+0)+0,w
  5147  16F0  00F1               	movwf	(?___ftpack+1)
  5148  16F1  0822               	movf	2+(??___lbtoft+0)+0,w
  5149  16F2  00F2               	movwf	(?___ftpack+2)
  5150  16F3  308E               	movlw	(08Eh)
  5151  16F4  00A3               	movwf	(??___lbtoft+3)+0
  5152  16F5  0823               	movf	(??___lbtoft+3)+0,w
  5153  16F6  00F3               	movwf	0+(?___ftpack)+03h
  5154  16F7  01F4               	clrf	0+(?___ftpack)+04h
  5155  16F8  120A  158A  2371   	fcall	___ftpack
              160A  118A         
  5156  16FD  0870               	movf	(0+(?___ftpack)),w
  5157  16FE  00F8               	movwf	(?___lbtoft)
  5158  16FF  0871               	movf	(1+(?___ftpack)),w
  5159  1700  00F9               	movwf	(?___lbtoft+1)
  5160  1701  0872               	movf	(2+(?___ftpack)),w
  5161  1702  00FA               	movwf	(?___lbtoft+2)
  5162  1703  2F04               	goto	l3005
  5163                           	
  5164  1704                     l5992:	
  5165                           	line	30
  5166                           	
  5167  1704                     l3005:	
  5168  1704  0008               	return
  5169                           	opt stack 0
  5170                           GLOBAL	__end_of___lbtoft
  5171  1705                     	__end_of___lbtoft:
  5172 ;; =============== function ___lbtoft ends ============
  5173                           
  5174                           	signat	___lbtoft,4219
  5175                           	global	___ftmul
  5176                           psect	text804,local,class=CODE,delta=2
  5177                           global __ptext804
  5178  00B3                     __ptext804:
  5179                           
  5180 ;; *************** function ___ftmul *****************
  5181 ;; Defined at:
  5182 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  f1              3    3[BANK0 ] float 
  5185 ;;  f2              3    6[BANK0 ] float 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  f3_as_produc    3   14[BANK0 ] unsigned um
  5188 ;;  sign            1   18[BANK0 ] unsigned char 
  5189 ;;  cntr            1   17[BANK0 ] unsigned char 
  5190 ;;  exp             1   13[BANK0 ] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  3    3[BANK0 ] float 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0, pclath, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5200 ;;      Params:         0       6       0       0       0
  5201 ;;      Locals:         0       6       0       0       0
  5202 ;;      Temps:          0       4       0       0       0
  5203 ;;      Totals:         0      16       0       0       0
  5204 ;;Total ram usage:       16 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    1
  5207 ;; This function calls:
  5208 ;;		___ftpack
  5209 ;; This function is called by:
  5210 ;;		_ftoa
  5211 ;;		_pow
  5212 ;;		_exp
  5213 ;;		_log
  5214 ;;		_eval_poly
  5215 ;;		_log10
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           psect	text804
  5219                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5220                           	line	52
  5221                           	global	__size_of___ftmul
  5222  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5223                           	
  5224  00B3                     ___ftmul:	
  5225                           	opt	stack 5
  5226                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5227                           	line	56
  5228                           	
  5229  00B3                     l5940:	
  5230  00B3  1283               	bcf	status, 5	;RP0=0, select bank0
  5231  00B4  1303               	bcf	status, 6	;RP1=0, select bank0
  5232  00B5  0823               	movf	(___ftmul@f1),w
  5233  00B6  00A9               	movwf	((??___ftmul+0)+0)
  5234  00B7  0824               	movf	(___ftmul@f1+1),w
  5235  00B8  00AA               	movwf	((??___ftmul+0)+0+1)
  5236  00B9  0825               	movf	(___ftmul@f1+2),w
  5237  00BA  00AB               	movwf	((??___ftmul+0)+0+2)
  5238  00BB  1003               	clrc
  5239  00BC  0D2A               	rlf	(??___ftmul+0)+1,w
  5240  00BD  0D2B               	rlf	(??___ftmul+0)+2,w
  5241  00BE  00AC               	movwf	(??___ftmul+3)+0
  5242  00BF  082C               	movf	(??___ftmul+3)+0,w
  5243  00C0  00AD               	movwf	(___ftmul@exp)
  5244  00C1  08AD               	movf	((___ftmul@exp)),f
  5245  00C2  1D03               	skipz
  5246  00C3  28C5               	goto	u3721
  5247  00C4  28C6               	goto	u3720
  5248  00C5                     u3721:
  5249  00C5  28CE               	goto	l5946
  5250  00C6                     u3720:
  5251                           	line	57
  5252                           	
  5253  00C6                     l5942:	
  5254  00C6  3000               	movlw	0x0
  5255  00C7  00A3               	movwf	(?___ftmul)
  5256  00C8  3000               	movlw	0x0
  5257  00C9  00A4               	movwf	(?___ftmul+1)
  5258  00CA  3000               	movlw	0x0
  5259  00CB  00A5               	movwf	(?___ftmul+2)
  5260  00CC  29A0               	goto	l2979
  5261                           	
  5262  00CD                     l5944:	
  5263  00CD  29A0               	goto	l2979
  5264                           	
  5265  00CE                     l2978:	
  5266                           	line	58
  5267                           	
  5268  00CE                     l5946:	
  5269  00CE  0826               	movf	(___ftmul@f2),w
  5270  00CF  00A9               	movwf	((??___ftmul+0)+0)
  5271  00D0  0827               	movf	(___ftmul@f2+1),w
  5272  00D1  00AA               	movwf	((??___ftmul+0)+0+1)
  5273  00D2  0828               	movf	(___ftmul@f2+2),w
  5274  00D3  00AB               	movwf	((??___ftmul+0)+0+2)
  5275  00D4  1003               	clrc
  5276  00D5  0D2A               	rlf	(??___ftmul+0)+1,w
  5277  00D6  0D2B               	rlf	(??___ftmul+0)+2,w
  5278  00D7  00AC               	movwf	(??___ftmul+3)+0
  5279  00D8  082C               	movf	(??___ftmul+3)+0,w
  5280  00D9  00B2               	movwf	(___ftmul@sign)
  5281  00DA  08B2               	movf	((___ftmul@sign)),f
  5282  00DB  1D03               	skipz
  5283  00DC  28DE               	goto	u3731
  5284  00DD  28DF               	goto	u3730
  5285  00DE                     u3731:
  5286  00DE  28E7               	goto	l5952
  5287  00DF                     u3730:
  5288                           	line	59
  5289                           	
  5290  00DF                     l5948:	
  5291  00DF  3000               	movlw	0x0
  5292  00E0  00A3               	movwf	(?___ftmul)
  5293  00E1  3000               	movlw	0x0
  5294  00E2  00A4               	movwf	(?___ftmul+1)
  5295  00E3  3000               	movlw	0x0
  5296  00E4  00A5               	movwf	(?___ftmul+2)
  5297  00E5  29A0               	goto	l2979
  5298                           	
  5299  00E6                     l5950:	
  5300  00E6  29A0               	goto	l2979
  5301                           	
  5302  00E7                     l2980:	
  5303                           	line	60
  5304                           	
  5305  00E7                     l5952:	
  5306  00E7  0832               	movf	(___ftmul@sign),w
  5307  00E8  3E7B               	addlw	07Bh
  5308  00E9  00A9               	movwf	(??___ftmul+0)+0
  5309  00EA  0829               	movf	(??___ftmul+0)+0,w
  5310  00EB  07AD               	addwf	(___ftmul@exp),f
  5311                           	line	61
  5312  00EC  0823               	movf	(___ftmul@f1),w
  5313  00ED  00A9               	movwf	((??___ftmul+0)+0)
  5314  00EE  0824               	movf	(___ftmul@f1+1),w
  5315  00EF  00AA               	movwf	((??___ftmul+0)+0+1)
  5316  00F0  0825               	movf	(___ftmul@f1+2),w
  5317  00F1  00AB               	movwf	((??___ftmul+0)+0+2)
  5318  00F2  3010               	movlw	010h
  5319  00F3                     u3745:
  5320  00F3  1003               	clrc
  5321  00F4  0CAB               	rrf	(??___ftmul+0)+2,f
  5322  00F5  0CAA               	rrf	(??___ftmul+0)+1,f
  5323  00F6  0CA9               	rrf	(??___ftmul+0)+0,f
  5324  00F7                     u3740:
  5325  00F7  3EFF               	addlw	-1
  5326  00F8  1D03               	skipz
  5327  00F9  28F3               	goto	u3745
  5328  00FA  0829               	movf	0+(??___ftmul+0)+0,w
  5329  00FB  00AC               	movwf	(??___ftmul+3)+0
  5330  00FC  082C               	movf	(??___ftmul+3)+0,w
  5331  00FD  00B2               	movwf	(___ftmul@sign)
  5332                           	line	62
  5333  00FE  0826               	movf	(___ftmul@f2),w
  5334  00FF  00A9               	movwf	((??___ftmul+0)+0)
  5335  0100  0827               	movf	(___ftmul@f2+1),w
  5336  0101  00AA               	movwf	((??___ftmul+0)+0+1)
  5337  0102  0828               	movf	(___ftmul@f2+2),w
  5338  0103  00AB               	movwf	((??___ftmul+0)+0+2)
  5339  0104  3010               	movlw	010h
  5340  0105                     u3755:
  5341  0105  1003               	clrc
  5342  0106  0CAB               	rrf	(??___ftmul+0)+2,f
  5343  0107  0CAA               	rrf	(??___ftmul+0)+1,f
  5344  0108  0CA9               	rrf	(??___ftmul+0)+0,f
  5345  0109                     u3750:
  5346  0109  3EFF               	addlw	-1
  5347  010A  1D03               	skipz
  5348  010B  2905               	goto	u3755
  5349  010C  0829               	movf	0+(??___ftmul+0)+0,w
  5350  010D  00AC               	movwf	(??___ftmul+3)+0
  5351  010E  082C               	movf	(??___ftmul+3)+0,w
  5352  010F  06B2               	xorwf	(___ftmul@sign),f
  5353                           	line	63
  5354  0110  3080               	movlw	(080h)
  5355  0111  00A9               	movwf	(??___ftmul+0)+0
  5356  0112  0829               	movf	(??___ftmul+0)+0,w
  5357  0113  05B2               	andwf	(___ftmul@sign),f
  5358                           	line	64
  5359                           	
  5360  0114                     l5954:	
  5361  0114  17A4               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5362                           	line	66
  5363                           	
  5364  0115                     l5956:	
  5365  0115  17A7               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5366                           	line	67
  5367                           	
  5368  0116                     l5958:	
  5369  0116  30FF               	movlw	0FFh
  5370  0117  05A6               	andwf	(___ftmul@f2),f
  5371  0118  30FF               	movlw	0FFh
  5372  0119  05A7               	andwf	(___ftmul@f2+1),f
  5373  011A  3000               	movlw	0
  5374  011B  05A8               	andwf	(___ftmul@f2+2),f
  5375                           	line	68
  5376                           	
  5377  011C                     l5960:	
  5378  011C  3000               	movlw	0
  5379  011D  00AE               	movwf	(___ftmul@f3_as_product)
  5380  011E  3000               	movlw	0
  5381  011F  00AF               	movwf	(___ftmul@f3_as_product+1)
  5382  0120  3000               	movlw	0
  5383  0121  00B0               	movwf	(___ftmul@f3_as_product+2)
  5384                           	line	69
  5385                           	
  5386  0122                     l5962:	
  5387  0122  3007               	movlw	(07h)
  5388  0123  00A9               	movwf	(??___ftmul+0)+0
  5389  0124  0829               	movf	(??___ftmul+0)+0,w
  5390  0125  00B1               	movwf	(___ftmul@cntr)
  5391  0126  2927               	goto	l5964
  5392                           	line	70
  5393                           	
  5394  0127                     l2981:	
  5395                           	line	71
  5396                           	
  5397  0127                     l5964:	
  5398  0127  1C23               	btfss	(___ftmul@f1),(0)&7
  5399  0128  292A               	goto	u3761
  5400  0129  292B               	goto	u3760
  5401  012A                     u3761:
  5402  012A  293C               	goto	l5968
  5403  012B                     u3760:
  5404                           	line	72
  5405                           	
  5406  012B                     l5966:	
  5407  012B  0826               	movf	(___ftmul@f2),w
  5408  012C  07AE               	addwf	(___ftmul@f3_as_product),f
  5409  012D  0827               	movf	(___ftmul@f2+1),w
  5410  012E  1103               	clrz
  5411  012F  1803               	skipnc
  5412  0130  0A27               	incf	(___ftmul@f2+1),w
  5413  0131  1903               	skipnz
  5414  0132  2934               	goto	u3771
  5415  0133  07AF               	addwf	(___ftmul@f3_as_product+1),f
  5416  0134                     u3771:
  5417  0134  0828               	movf	(___ftmul@f2+2),w
  5418  0135  1103               	clrz
  5419  0136  1803               	skipnc
  5420  0137  0A28               	incf	(___ftmul@f2+2),w
  5421  0138  1903               	skipnz
  5422  0139  293B               	goto	u3772
  5423  013A  07B0               	addwf	(___ftmul@f3_as_product+2),f
  5424  013B                     u3772:
  5425                           
  5426  013B  293C               	goto	l5968
  5427                           	
  5428  013C                     l2982:	
  5429                           	line	73
  5430                           	
  5431  013C                     l5968:	
  5432  013C  3001               	movlw	01h
  5433  013D                     u3785:
  5434  013D  1003               	clrc
  5435  013E  0CA5               	rrf	(___ftmul@f1+2),f
  5436  013F  0CA4               	rrf	(___ftmul@f1+1),f
  5437  0140  0CA3               	rrf	(___ftmul@f1),f
  5438  0141  3EFF               	addlw	-1
  5439  0142  1D03               	skipz
  5440  0143  293D               	goto	u3785
  5441                           
  5442                           	line	74
  5443                           	
  5444  0144                     l5970:	
  5445  0144  3001               	movlw	01h
  5446  0145                     u3795:
  5447  0145  1003               	clrc
  5448  0146  0DA6               	rlf	(___ftmul@f2),f
  5449  0147  0DA7               	rlf	(___ftmul@f2+1),f
  5450  0148  0DA8               	rlf	(___ftmul@f2+2),f
  5451  0149  3EFF               	addlw	-1
  5452  014A  1D03               	skipz
  5453  014B  2945               	goto	u3795
  5454                           	line	75
  5455                           	
  5456  014C                     l5972:	
  5457  014C  3001               	movlw	low(01h)
  5458  014D  02B1               	subwf	(___ftmul@cntr),f
  5459  014E  1D03               	btfss	status,2
  5460  014F  2951               	goto	u3801
  5461  0150  2952               	goto	u3800
  5462  0151                     u3801:
  5463  0151  2927               	goto	l5964
  5464  0152                     u3800:
  5465  0152  2953               	goto	l5974
  5466                           	
  5467  0153                     l2983:	
  5468                           	line	76
  5469                           	
  5470  0153                     l5974:	
  5471  0153  3009               	movlw	(09h)
  5472  0154  00A9               	movwf	(??___ftmul+0)+0
  5473  0155  0829               	movf	(??___ftmul+0)+0,w
  5474  0156  00B1               	movwf	(___ftmul@cntr)
  5475  0157  2958               	goto	l5976
  5476                           	line	77
  5477                           	
  5478  0158                     l2984:	
  5479                           	line	78
  5480                           	
  5481  0158                     l5976:	
  5482  0158  1C23               	btfss	(___ftmul@f1),(0)&7
  5483  0159  295B               	goto	u3811
  5484  015A  295C               	goto	u3810
  5485  015B                     u3811:
  5486  015B  296D               	goto	l5980
  5487  015C                     u3810:
  5488                           	line	79
  5489                           	
  5490  015C                     l5978:	
  5491  015C  0826               	movf	(___ftmul@f2),w
  5492  015D  07AE               	addwf	(___ftmul@f3_as_product),f
  5493  015E  0827               	movf	(___ftmul@f2+1),w
  5494  015F  1103               	clrz
  5495  0160  1803               	skipnc
  5496  0161  0A27               	incf	(___ftmul@f2+1),w
  5497  0162  1903               	skipnz
  5498  0163  2965               	goto	u3821
  5499  0164  07AF               	addwf	(___ftmul@f3_as_product+1),f
  5500  0165                     u3821:
  5501  0165  0828               	movf	(___ftmul@f2+2),w
  5502  0166  1103               	clrz
  5503  0167  1803               	skipnc
  5504  0168  0A28               	incf	(___ftmul@f2+2),w
  5505  0169  1903               	skipnz
  5506  016A  296C               	goto	u3822
  5507  016B  07B0               	addwf	(___ftmul@f3_as_product+2),f
  5508  016C                     u3822:
  5509                           
  5510  016C  296D               	goto	l5980
  5511                           	
  5512  016D                     l2985:	
  5513                           	line	80
  5514                           	
  5515  016D                     l5980:	
  5516  016D  3001               	movlw	01h
  5517  016E                     u3835:
  5518  016E  1003               	clrc
  5519  016F  0CA5               	rrf	(___ftmul@f1+2),f
  5520  0170  0CA4               	rrf	(___ftmul@f1+1),f
  5521  0171  0CA3               	rrf	(___ftmul@f1),f
  5522  0172  3EFF               	addlw	-1
  5523  0173  1D03               	skipz
  5524  0174  296E               	goto	u3835
  5525                           
  5526                           	line	81
  5527                           	
  5528  0175                     l5982:	
  5529  0175  3001               	movlw	01h
  5530  0176                     u3845:
  5531  0176  1003               	clrc
  5532  0177  0CB0               	rrf	(___ftmul@f3_as_product+2),f
  5533  0178  0CAF               	rrf	(___ftmul@f3_as_product+1),f
  5534  0179  0CAE               	rrf	(___ftmul@f3_as_product),f
  5535  017A  3EFF               	addlw	-1
  5536  017B  1D03               	skipz
  5537  017C  2976               	goto	u3845
  5538                           
  5539                           	line	82
  5540                           	
  5541  017D                     l5984:	
  5542  017D  3001               	movlw	low(01h)
  5543  017E  02B1               	subwf	(___ftmul@cntr),f
  5544  017F  1D03               	btfss	status,2
  5545  0180  2982               	goto	u3851
  5546  0181  2983               	goto	u3850
  5547  0182                     u3851:
  5548  0182  2958               	goto	l5976
  5549  0183                     u3850:
  5550  0183  2984               	goto	l5986
  5551                           	
  5552  0184                     l2986:	
  5553                           	line	83
  5554                           	
  5555  0184                     l5986:	
  5556  0184  082E               	movf	(___ftmul@f3_as_product),w
  5557  0185  00F0               	movwf	(?___ftpack)
  5558  0186  082F               	movf	(___ftmul@f3_as_product+1),w
  5559  0187  00F1               	movwf	(?___ftpack+1)
  5560  0188  0830               	movf	(___ftmul@f3_as_product+2),w
  5561  0189  00F2               	movwf	(?___ftpack+2)
  5562  018A  082D               	movf	(___ftmul@exp),w
  5563  018B  00A9               	movwf	(??___ftmul+0)+0
  5564  018C  0829               	movf	(??___ftmul+0)+0,w
  5565  018D  00F3               	movwf	0+(?___ftpack)+03h
  5566  018E  0832               	movf	(___ftmul@sign),w
  5567  018F  00AA               	movwf	(??___ftmul+1)+0
  5568  0190  082A               	movf	(??___ftmul+1)+0,w
  5569  0191  00F4               	movwf	0+(?___ftpack)+04h
  5570  0192  120A  158A  2371   	fcall	___ftpack
              120A  118A         
  5571  0197  0870               	movf	(0+(?___ftpack)),w
  5572  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  5573  0199  1303               	bcf	status, 6	;RP1=0, select bank0
  5574  019A  00A3               	movwf	(?___ftmul)
  5575  019B  0871               	movf	(1+(?___ftpack)),w
  5576  019C  00A4               	movwf	(?___ftmul+1)
  5577  019D  0872               	movf	(2+(?___ftpack)),w
  5578  019E  00A5               	movwf	(?___ftmul+2)
  5579  019F  29A0               	goto	l2979
  5580                           	
  5581  01A0                     l5988:	
  5582                           	line	84
  5583                           	
  5584  01A0                     l2979:	
  5585  01A0  0008               	return
  5586                           	opt stack 0
  5587                           GLOBAL	__end_of___ftmul
  5588  01A1                     	__end_of___ftmul:
  5589 ;; =============== function ___ftmul ends ============
  5590                           
  5591                           	signat	___ftmul,8315
  5592                           	global	___ftdiv
  5593                           psect	text805,local,class=CODE,delta=2
  5594                           global __ptext805
  5595  0D97                     __ptext805:
  5596                           
  5597 ;; *************** function ___ftdiv *****************
  5598 ;; Defined at:
  5599 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  f2              3    8[COMMON] float 
  5602 ;;  f1              3   11[COMMON] float 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  f3              3    5[BANK0 ] float 
  5605 ;;  sign            1    9[BANK0 ] unsigned char 
  5606 ;;  exp             1    8[BANK0 ] unsigned char 
  5607 ;;  cntr            1    4[BANK0 ] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  3    8[COMMON] float 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0, pclath, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5617 ;;      Params:         6       0       0       0       0
  5618 ;;      Locals:         0       6       0       0       0
  5619 ;;      Temps:          0       4       0       0       0
  5620 ;;      Totals:         6      10       0       0       0
  5621 ;;Total ram usage:       16 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    1
  5624 ;; This function calls:
  5625 ;;		___ftpack
  5626 ;; This function is called by:
  5627 ;;		_main
  5628 ;;		_exp
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           psect	text805
  5632                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5633                           	line	50
  5634                           	global	__size_of___ftdiv
  5635  00C6                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  5636                           	
  5637  0D97                     ___ftdiv:	
  5638                           	opt	stack 3
  5639                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5640                           	line	55
  5641                           	
  5642  0D97                     l5898:	
  5643  0D97  087B               	movf	(___ftdiv@f1),w
  5644  0D98  1283               	bcf	status, 5	;RP0=0, select bank0
  5645  0D99  1303               	bcf	status, 6	;RP1=0, select bank0
  5646  0D9A  00A0               	movwf	((??___ftdiv+0)+0)
  5647  0D9B  087C               	movf	(___ftdiv@f1+1),w
  5648  0D9C  00A1               	movwf	((??___ftdiv+0)+0+1)
  5649  0D9D  087D               	movf	(___ftdiv@f1+2),w
  5650  0D9E  00A2               	movwf	((??___ftdiv+0)+0+2)
  5651  0D9F  1003               	clrc
  5652  0DA0  0D21               	rlf	(??___ftdiv+0)+1,w
  5653  0DA1  0D22               	rlf	(??___ftdiv+0)+2,w
  5654  0DA2  00A3               	movwf	(??___ftdiv+3)+0
  5655  0DA3  0823               	movf	(??___ftdiv+3)+0,w
  5656  0DA4  00A8               	movwf	(___ftdiv@exp)
  5657  0DA5  08A8               	movf	((___ftdiv@exp)),f
  5658  0DA6  1D03               	skipz
  5659  0DA7  2DA9               	goto	u3641
  5660  0DA8  2DAA               	goto	u3640
  5661  0DA9                     u3641:
  5662  0DA9  2DB2               	goto	l5904
  5663  0DAA                     u3640:
  5664                           	line	56
  5665                           	
  5666  0DAA                     l5900:	
  5667  0DAA  3000               	movlw	0x0
  5668  0DAB  00F8               	movwf	(?___ftdiv)
  5669  0DAC  3000               	movlw	0x0
  5670  0DAD  00F9               	movwf	(?___ftdiv+1)
  5671  0DAE  3000               	movlw	0x0
  5672  0DAF  00FA               	movwf	(?___ftdiv+2)
  5673  0DB0  2E5C               	goto	l2969
  5674                           	
  5675  0DB1                     l5902:	
  5676  0DB1  2E5C               	goto	l2969
  5677                           	
  5678  0DB2                     l2968:	
  5679                           	line	57
  5680                           	
  5681  0DB2                     l5904:	
  5682  0DB2  0878               	movf	(___ftdiv@f2),w
  5683  0DB3  00A0               	movwf	((??___ftdiv+0)+0)
  5684  0DB4  0879               	movf	(___ftdiv@f2+1),w
  5685  0DB5  00A1               	movwf	((??___ftdiv+0)+0+1)
  5686  0DB6  087A               	movf	(___ftdiv@f2+2),w
  5687  0DB7  00A2               	movwf	((??___ftdiv+0)+0+2)
  5688  0DB8  1003               	clrc
  5689  0DB9  0D21               	rlf	(??___ftdiv+0)+1,w
  5690  0DBA  0D22               	rlf	(??___ftdiv+0)+2,w
  5691  0DBB  00A3               	movwf	(??___ftdiv+3)+0
  5692  0DBC  0823               	movf	(??___ftdiv+3)+0,w
  5693  0DBD  00A9               	movwf	(___ftdiv@sign)
  5694  0DBE  08A9               	movf	((___ftdiv@sign)),f
  5695  0DBF  1D03               	skipz
  5696  0DC0  2DC2               	goto	u3651
  5697  0DC1  2DC3               	goto	u3650
  5698  0DC2                     u3651:
  5699  0DC2  2DCB               	goto	l5910
  5700  0DC3                     u3650:
  5701                           	line	58
  5702                           	
  5703  0DC3                     l5906:	
  5704  0DC3  3000               	movlw	0x0
  5705  0DC4  00F8               	movwf	(?___ftdiv)
  5706  0DC5  3000               	movlw	0x0
  5707  0DC6  00F9               	movwf	(?___ftdiv+1)
  5708  0DC7  3000               	movlw	0x0
  5709  0DC8  00FA               	movwf	(?___ftdiv+2)
  5710  0DC9  2E5C               	goto	l2969
  5711                           	
  5712  0DCA                     l5908:	
  5713  0DCA  2E5C               	goto	l2969
  5714                           	
  5715  0DCB                     l2970:	
  5716                           	line	59
  5717                           	
  5718  0DCB                     l5910:	
  5719  0DCB  3000               	movlw	0
  5720  0DCC  00A5               	movwf	(___ftdiv@f3)
  5721  0DCD  3000               	movlw	0
  5722  0DCE  00A6               	movwf	(___ftdiv@f3+1)
  5723  0DCF  3000               	movlw	0
  5724  0DD0  00A7               	movwf	(___ftdiv@f3+2)
  5725                           	line	60
  5726                           	
  5727  0DD1                     l5912:	
  5728  0DD1  3089               	movlw	(089h)
  5729  0DD2  0729               	addwf	(___ftdiv@sign),w
  5730  0DD3  00A0               	movwf	(??___ftdiv+0)+0
  5731  0DD4  0820               	movf	0+(??___ftdiv+0)+0,w
  5732  0DD5  02A8               	subwf	(___ftdiv@exp),f
  5733                           	line	61
  5734                           	
  5735  0DD6                     l5914:	
  5736  0DD6  087B               	movf	(___ftdiv@f1),w
  5737  0DD7  00A0               	movwf	((??___ftdiv+0)+0)
  5738  0DD8  087C               	movf	(___ftdiv@f1+1),w
  5739  0DD9  00A1               	movwf	((??___ftdiv+0)+0+1)
  5740  0DDA  087D               	movf	(___ftdiv@f1+2),w
  5741  0DDB  00A2               	movwf	((??___ftdiv+0)+0+2)
  5742  0DDC  3010               	movlw	010h
  5743  0DDD                     u3665:
  5744  0DDD  1003               	clrc
  5745  0DDE  0CA2               	rrf	(??___ftdiv+0)+2,f
  5746  0DDF  0CA1               	rrf	(??___ftdiv+0)+1,f
  5747  0DE0  0CA0               	rrf	(??___ftdiv+0)+0,f
  5748  0DE1                     u3660:
  5749  0DE1  3EFF               	addlw	-1
  5750  0DE2  1D03               	skipz
  5751  0DE3  2DDD               	goto	u3665
  5752  0DE4  0820               	movf	0+(??___ftdiv+0)+0,w
  5753  0DE5  00A3               	movwf	(??___ftdiv+3)+0
  5754  0DE6  0823               	movf	(??___ftdiv+3)+0,w
  5755  0DE7  00A9               	movwf	(___ftdiv@sign)
  5756                           	line	62
  5757                           	
  5758  0DE8                     l5916:	
  5759  0DE8  0878               	movf	(___ftdiv@f2),w
  5760  0DE9  00A0               	movwf	((??___ftdiv+0)+0)
  5761  0DEA  0879               	movf	(___ftdiv@f2+1),w
  5762  0DEB  00A1               	movwf	((??___ftdiv+0)+0+1)
  5763  0DEC  087A               	movf	(___ftdiv@f2+2),w
  5764  0DED  00A2               	movwf	((??___ftdiv+0)+0+2)
  5765  0DEE  3010               	movlw	010h
  5766  0DEF                     u3675:
  5767  0DEF  1003               	clrc
  5768  0DF0  0CA2               	rrf	(??___ftdiv+0)+2,f
  5769  0DF1  0CA1               	rrf	(??___ftdiv+0)+1,f
  5770  0DF2  0CA0               	rrf	(??___ftdiv+0)+0,f
  5771  0DF3                     u3670:
  5772  0DF3  3EFF               	addlw	-1
  5773  0DF4  1D03               	skipz
  5774  0DF5  2DEF               	goto	u3675
  5775  0DF6  0820               	movf	0+(??___ftdiv+0)+0,w
  5776  0DF7  00A3               	movwf	(??___ftdiv+3)+0
  5777  0DF8  0823               	movf	(??___ftdiv+3)+0,w
  5778  0DF9  06A9               	xorwf	(___ftdiv@sign),f
  5779                           	line	63
  5780                           	
  5781  0DFA                     l5918:	
  5782  0DFA  3080               	movlw	(080h)
  5783  0DFB  00A0               	movwf	(??___ftdiv+0)+0
  5784  0DFC  0820               	movf	(??___ftdiv+0)+0,w
  5785  0DFD  05A9               	andwf	(___ftdiv@sign),f
  5786                           	line	64
  5787                           	
  5788  0DFE                     l5920:	
  5789  0DFE  17FC               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  5790                           	line	65
  5791  0DFF  30FF               	movlw	0FFh
  5792  0E00  05FB               	andwf	(___ftdiv@f1),f
  5793  0E01  30FF               	movlw	0FFh
  5794  0E02  05FC               	andwf	(___ftdiv@f1+1),f
  5795  0E03  3000               	movlw	0
  5796  0E04  05FD               	andwf	(___ftdiv@f1+2),f
  5797                           	line	66
  5798                           	
  5799  0E05                     l5922:	
  5800  0E05  17F9               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  5801                           	line	67
  5802  0E06  30FF               	movlw	0FFh
  5803  0E07  05F8               	andwf	(___ftdiv@f2),f
  5804  0E08  30FF               	movlw	0FFh
  5805  0E09  05F9               	andwf	(___ftdiv@f2+1),f
  5806  0E0A  3000               	movlw	0
  5807  0E0B  05FA               	andwf	(___ftdiv@f2+2),f
  5808                           	line	68
  5809  0E0C  3018               	movlw	(018h)
  5810  0E0D  00A0               	movwf	(??___ftdiv+0)+0
  5811  0E0E  0820               	movf	(??___ftdiv+0)+0,w
  5812  0E0F  00A4               	movwf	(___ftdiv@cntr)
  5813  0E10  2E11               	goto	l5924
  5814                           	line	69
  5815                           	
  5816  0E11                     l2971:	
  5817                           	line	70
  5818                           	
  5819  0E11                     l5924:	
  5820  0E11  3001               	movlw	01h
  5821  0E12                     u3685:
  5822  0E12  1003               	clrc
  5823  0E13  0DA5               	rlf	(___ftdiv@f3),f
  5824  0E14  0DA6               	rlf	(___ftdiv@f3+1),f
  5825  0E15  0DA7               	rlf	(___ftdiv@f3+2),f
  5826  0E16  3EFF               	addlw	-1
  5827  0E17  1D03               	skipz
  5828  0E18  2E12               	goto	u3685
  5829                           	line	71
  5830                           	
  5831  0E19                     l5926:	
  5832  0E19  087A               	movf	(___ftdiv@f2+2),w
  5833  0E1A  027D               	subwf	(___ftdiv@f1+2),w
  5834  0E1B  1D03               	skipz
  5835  0E1C  2E23               	goto	u3695
  5836  0E1D  0879               	movf	(___ftdiv@f2+1),w
  5837  0E1E  027C               	subwf	(___ftdiv@f1+1),w
  5838  0E1F  1D03               	skipz
  5839  0E20  2E23               	goto	u3695
  5840  0E21  0878               	movf	(___ftdiv@f2),w
  5841  0E22  027B               	subwf	(___ftdiv@f1),w
  5842  0E23                     u3695:
  5843  0E23  1C03               	skipc
  5844  0E24  2E26               	goto	u3691
  5845  0E25  2E27               	goto	u3690
  5846  0E26                     u3691:
  5847  0E26  2E33               	goto	l5932
  5848  0E27                     u3690:
  5849                           	line	72
  5850                           	
  5851  0E27                     l5928:	
  5852  0E27  0878               	movf	(___ftdiv@f2),w
  5853  0E28  02FB               	subwf	(___ftdiv@f1),f
  5854  0E29  0879               	movf	(___ftdiv@f2+1),w
  5855  0E2A  1C03               	skipc
  5856  0E2B  0F79               	incfsz	(___ftdiv@f2+1),w
  5857  0E2C  02FC               	subwf	(___ftdiv@f1+1),f
  5858  0E2D  087A               	movf	(___ftdiv@f2+2),w
  5859  0E2E  1C03               	skipc
  5860  0E2F  0A7A               	incf	(___ftdiv@f2+2),w
  5861  0E30  02FD               	subwf	(___ftdiv@f1+2),f
  5862                           	line	73
  5863                           	
  5864  0E31                     l5930:	
  5865  0E31  1425               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  5866  0E32  2E33               	goto	l5932
  5867                           	line	74
  5868                           	
  5869  0E33                     l2972:	
  5870                           	line	75
  5871                           	
  5872  0E33                     l5932:	
  5873  0E33  3001               	movlw	01h
  5874  0E34                     u3705:
  5875  0E34  1003               	clrc
  5876  0E35  0DFB               	rlf	(___ftdiv@f1),f
  5877  0E36  0DFC               	rlf	(___ftdiv@f1+1),f
  5878  0E37  0DFD               	rlf	(___ftdiv@f1+2),f
  5879  0E38  3EFF               	addlw	-1
  5880  0E39  1D03               	skipz
  5881  0E3A  2E34               	goto	u3705
  5882                           	line	76
  5883                           	
  5884  0E3B                     l5934:	
  5885  0E3B  3001               	movlw	low(01h)
  5886  0E3C  02A4               	subwf	(___ftdiv@cntr),f
  5887  0E3D  1D03               	btfss	status,2
  5888  0E3E  2E40               	goto	u3711
  5889  0E3F  2E41               	goto	u3710
  5890  0E40                     u3711:
  5891  0E40  2E11               	goto	l5924
  5892  0E41                     u3710:
  5893  0E41  2E42               	goto	l5936
  5894                           	
  5895  0E42                     l2973:	
  5896                           	line	77
  5897                           	
  5898  0E42                     l5936:	
  5899  0E42  0825               	movf	(___ftdiv@f3),w
  5900  0E43  00F0               	movwf	(?___ftpack)
  5901  0E44  0826               	movf	(___ftdiv@f3+1),w
  5902  0E45  00F1               	movwf	(?___ftpack+1)
  5903  0E46  0827               	movf	(___ftdiv@f3+2),w
  5904  0E47  00F2               	movwf	(?___ftpack+2)
  5905  0E48  0828               	movf	(___ftdiv@exp),w
  5906  0E49  00A0               	movwf	(??___ftdiv+0)+0
  5907  0E4A  0820               	movf	(??___ftdiv+0)+0,w
  5908  0E4B  00F3               	movwf	0+(?___ftpack)+03h
  5909  0E4C  0829               	movf	(___ftdiv@sign),w
  5910  0E4D  00A1               	movwf	(??___ftdiv+1)+0
  5911  0E4E  0821               	movf	(??___ftdiv+1)+0,w
  5912  0E4F  00F4               	movwf	0+(?___ftpack)+04h
  5913  0E50  120A  158A  2371   	fcall	___ftpack
              120A  158A         
  5914  0E55  0870               	movf	(0+(?___ftpack)),w
  5915  0E56  00F8               	movwf	(?___ftdiv)
  5916  0E57  0871               	movf	(1+(?___ftpack)),w
  5917  0E58  00F9               	movwf	(?___ftdiv+1)
  5918  0E59  0872               	movf	(2+(?___ftpack)),w
  5919  0E5A  00FA               	movwf	(?___ftdiv+2)
  5920  0E5B  2E5C               	goto	l2969
  5921                           	
  5922  0E5C                     l5938:	
  5923                           	line	78
  5924                           	
  5925  0E5C                     l2969:	
  5926  0E5C  0008               	return
  5927                           	opt stack 0
  5928                           GLOBAL	__end_of___ftdiv
  5929  0E5D                     	__end_of___ftdiv:
  5930 ;; =============== function ___ftdiv ends ============
  5931                           
  5932                           	signat	___ftdiv,8315
  5933                           	global	___ftadd
  5934                           psect	text806,local,class=CODE,delta=2
  5935                           global __ptext806
  5936  0406                     __ptext806:
  5937                           
  5938 ;; *************** function ___ftadd *****************
  5939 ;; Defined at:
  5940 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  f1              3   19[BANK0 ] float 
  5943 ;;  f2              3   22[BANK0 ] float 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  exp1            1   31[BANK0 ] unsigned char 
  5946 ;;  exp2            1   30[BANK0 ] unsigned char 
  5947 ;;  sign            1   29[BANK0 ] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  3   19[BANK0 ] float 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, pclath, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5957 ;;      Params:         0       6       0       0       0
  5958 ;;      Locals:         0       3       0       0       0
  5959 ;;      Temps:          0       4       0       0       0
  5960 ;;      Totals:         0      13       0       0       0
  5961 ;;Total ram usage:       13 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    1
  5964 ;; This function calls:
  5965 ;;		___ftpack
  5966 ;; This function is called by:
  5967 ;;		_ftoa
  5968 ;;		___ftsub
  5969 ;;		_floor
  5970 ;;		_log
  5971 ;;		_eval_poly
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           psect	text806
  5975                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  5976                           	line	87
  5977                           	global	__size_of___ftadd
  5978  0146                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  5979                           	
  5980  0406                     ___ftadd:	
  5981                           	opt	stack 2
  5982                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5983                           	line	90
  5984                           	
  5985  0406                     l5828:	
  5986  0406  1283               	bcf	status, 5	;RP0=0, select bank0
  5987  0407  1303               	bcf	status, 6	;RP1=0, select bank0
  5988  0408  0833               	movf	(___ftadd@f1),w
  5989  0409  00B9               	movwf	((??___ftadd+0)+0)
  5990  040A  0834               	movf	(___ftadd@f1+1),w
  5991  040B  00BA               	movwf	((??___ftadd+0)+0+1)
  5992  040C  0835               	movf	(___ftadd@f1+2),w
  5993  040D  00BB               	movwf	((??___ftadd+0)+0+2)
  5994  040E  1003               	clrc
  5995  040F  0D3A               	rlf	(??___ftadd+0)+1,w
  5996  0410  0D3B               	rlf	(??___ftadd+0)+2,w
  5997  0411  00BC               	movwf	(??___ftadd+3)+0
  5998  0412  083C               	movf	(??___ftadd+3)+0,w
  5999  0413  00BF               	movwf	(___ftadd@exp1)
  6000                           	line	91
  6001  0414  0836               	movf	(___ftadd@f2),w
  6002  0415  00B9               	movwf	((??___ftadd+0)+0)
  6003  0416  0837               	movf	(___ftadd@f2+1),w
  6004  0417  00BA               	movwf	((??___ftadd+0)+0+1)
  6005  0418  0838               	movf	(___ftadd@f2+2),w
  6006  0419  00BB               	movwf	((??___ftadd+0)+0+2)
  6007  041A  1003               	clrc
  6008  041B  0D3A               	rlf	(??___ftadd+0)+1,w
  6009  041C  0D3B               	rlf	(??___ftadd+0)+2,w
  6010  041D  00BC               	movwf	(??___ftadd+3)+0
  6011  041E  083C               	movf	(??___ftadd+3)+0,w
  6012  041F  00BE               	movwf	(___ftadd@exp2)
  6013                           	line	92
  6014                           	
  6015  0420                     l5830:	
  6016  0420  083F               	movf	(___ftadd@exp1),w
  6017  0421  1D03               	skipz
  6018  0422  2C24               	goto	u3400
  6019  0423  2C35               	goto	l5836
  6020  0424                     u3400:
  6021                           	
  6022  0424                     l5832:	
  6023  0424  083E               	movf	(___ftadd@exp2),w
  6024  0425  023F               	subwf	(___ftadd@exp1),w
  6025  0426  1803               	skipnc
  6026  0427  2C29               	goto	u3411
  6027  0428  2C2A               	goto	u3410
  6028  0429                     u3411:
  6029  0429  2C3D               	goto	l5840
  6030  042A                     u3410:
  6031                           	
  6032  042A                     l5834:	
  6033  042A  033F               	decf	(___ftadd@exp1),w
  6034  042B  3AFF               	xorlw	0ffh
  6035  042C  073E               	addwf	(___ftadd@exp2),w
  6036  042D  00B9               	movwf	(??___ftadd+0)+0
  6037  042E  3019               	movlw	(019h)
  6038  042F  0239               	subwf	0+(??___ftadd+0)+0,w
  6039  0430  1C03               	skipc
  6040  0431  2C33               	goto	u3421
  6041  0432  2C34               	goto	u3420
  6042  0433                     u3421:
  6043  0433  2C3D               	goto	l5840
  6044  0434                     u3420:
  6045  0434  2C35               	goto	l5836
  6046                           	
  6047  0435                     l2926:	
  6048                           	line	93
  6049                           	
  6050  0435                     l5836:	
  6051  0435  0836               	movf	(___ftadd@f2),w
  6052  0436  00B3               	movwf	(?___ftadd)
  6053  0437  0837               	movf	(___ftadd@f2+1),w
  6054  0438  00B4               	movwf	(?___ftadd+1)
  6055  0439  0838               	movf	(___ftadd@f2+2),w
  6056  043A  00B5               	movwf	(?___ftadd+2)
  6057  043B  2D4B               	goto	l2927
  6058                           	
  6059  043C                     l5838:	
  6060  043C  2D4B               	goto	l2927
  6061                           	
  6062  043D                     l2924:	
  6063                           	line	94
  6064                           	
  6065  043D                     l5840:	
  6066  043D  083E               	movf	(___ftadd@exp2),w
  6067  043E  1D03               	skipz
  6068  043F  2C41               	goto	u3430
  6069  0440  2C51               	goto	l2930
  6070  0441                     u3430:
  6071                           	
  6072  0441                     l5842:	
  6073  0441  083F               	movf	(___ftadd@exp1),w
  6074  0442  023E               	subwf	(___ftadd@exp2),w
  6075  0443  1803               	skipnc
  6076  0444  2C46               	goto	u3441
  6077  0445  2C47               	goto	u3440
  6078  0446                     u3441:
  6079  0446  2C52               	goto	l5846
  6080  0447                     u3440:
  6081                           	
  6082  0447                     l5844:	
  6083  0447  033E               	decf	(___ftadd@exp2),w
  6084  0448  3AFF               	xorlw	0ffh
  6085  0449  073F               	addwf	(___ftadd@exp1),w
  6086  044A  00B9               	movwf	(??___ftadd+0)+0
  6087  044B  3019               	movlw	(019h)
  6088  044C  0239               	subwf	0+(??___ftadd+0)+0,w
  6089  044D  1C03               	skipc
  6090  044E  2C50               	goto	u3451
  6091  044F  2C51               	goto	u3450
  6092  0450                     u3451:
  6093  0450  2C52               	goto	l5846
  6094  0451                     u3450:
  6095                           	
  6096  0451                     l2930:	
  6097                           	line	95
  6098  0451  2D4B               	goto	l2927
  6099                           	
  6100  0452                     l2928:	
  6101                           	line	96
  6102                           	
  6103  0452                     l5846:	
  6104  0452  3006               	movlw	(06h)
  6105  0453  00B9               	movwf	(??___ftadd+0)+0
  6106  0454  0839               	movf	(??___ftadd+0)+0,w
  6107  0455  00BD               	movwf	(___ftadd@sign)
  6108                           	line	97
  6109                           	
  6110  0456                     l5848:	
  6111  0456  1FB5               	btfss	(___ftadd@f1+2),(23)&7
  6112  0457  2C59               	goto	u3461
  6113  0458  2C5A               	goto	u3460
  6114  0459                     u3461:
  6115  0459  2C5B               	goto	l2931
  6116  045A                     u3460:
  6117                           	line	98
  6118                           	
  6119  045A                     l5850:	
  6120  045A  17BD               	bsf	(___ftadd@sign)+(7/8),(7)&7
  6121                           	
  6122  045B                     l2931:	
  6123                           	line	99
  6124  045B  1FB8               	btfss	(___ftadd@f2+2),(23)&7
  6125  045C  2C5E               	goto	u3471
  6126  045D  2C5F               	goto	u3470
  6127  045E                     u3471:
  6128  045E  2C60               	goto	l2932
  6129  045F                     u3470:
  6130                           	line	100
  6131                           	
  6132  045F                     l5852:	
  6133  045F  173D               	bsf	(___ftadd@sign)+(6/8),(6)&7
  6134                           	
  6135  0460                     l2932:	
  6136                           	line	101
  6137  0460  17B4               	bsf	(___ftadd@f1)+(15/8),(15)&7
  6138                           	line	102
  6139                           	
  6140  0461                     l5854:	
  6141  0461  30FF               	movlw	0FFh
  6142  0462  05B3               	andwf	(___ftadd@f1),f
  6143  0463  30FF               	movlw	0FFh
  6144  0464  05B4               	andwf	(___ftadd@f1+1),f
  6145  0465  3000               	movlw	0
  6146  0466  05B5               	andwf	(___ftadd@f1+2),f
  6147                           	line	103
  6148                           	
  6149  0467                     l5856:	
  6150  0467  17B7               	bsf	(___ftadd@f2)+(15/8),(15)&7
  6151                           	line	104
  6152  0468  30FF               	movlw	0FFh
  6153  0469  05B6               	andwf	(___ftadd@f2),f
  6154  046A  30FF               	movlw	0FFh
  6155  046B  05B7               	andwf	(___ftadd@f2+1),f
  6156  046C  3000               	movlw	0
  6157  046D  05B8               	andwf	(___ftadd@f2+2),f
  6158                           	line	106
  6159  046E  083E               	movf	(___ftadd@exp2),w
  6160  046F  023F               	subwf	(___ftadd@exp1),w
  6161  0470  1803               	skipnc
  6162  0471  2C73               	goto	u3481
  6163  0472  2C74               	goto	u3480
  6164  0473                     u3481:
  6165  0473  2CA5               	goto	l5868
  6166  0474                     u3480:
  6167  0474  2C75               	goto	l5858
  6168                           	line	109
  6169                           	
  6170  0475                     l2934:	
  6171                           	line	110
  6172                           	
  6173  0475                     l5858:	
  6174  0475  3001               	movlw	01h
  6175  0476                     u3495:
  6176  0476  1003               	clrc
  6177  0477  0DB6               	rlf	(___ftadd@f2),f
  6178  0478  0DB7               	rlf	(___ftadd@f2+1),f
  6179  0479  0DB8               	rlf	(___ftadd@f2+2),f
  6180  047A  3EFF               	addlw	-1
  6181  047B  1D03               	skipz
  6182  047C  2C76               	goto	u3495
  6183                           	line	111
  6184  047D  3001               	movlw	low(01h)
  6185  047E  02BE               	subwf	(___ftadd@exp2),f
  6186                           	line	112
  6187                           	
  6188  047F                     l5860:	
  6189  047F  083E               	movf	(___ftadd@exp2),w
  6190  0480  063F               	xorwf	(___ftadd@exp1),w
  6191  0481  1903               	skipnz
  6192  0482  2C84               	goto	u3501
  6193  0483  2C85               	goto	u3500
  6194  0484                     u3501:
  6195  0484  2C9D               	goto	l5866
  6196  0485                     u3500:
  6197                           	
  6198  0485                     l5862:	
  6199  0485  3001               	movlw	low(01h)
  6200  0486  02BD               	subwf	(___ftadd@sign),f
  6201  0487  083D               	movf	((___ftadd@sign)),w
  6202  0488  3907               	andlw	07h
  6203  0489  1D03               	btfss	status,2
  6204  048A  2C8C               	goto	u3511
  6205  048B  2C8D               	goto	u3510
  6206  048C                     u3511:
  6207  048C  2C75               	goto	l5858
  6208  048D                     u3510:
  6209  048D  2C9D               	goto	l5866
  6210                           	
  6211  048E                     l2936:	
  6212  048E  2C9D               	goto	l5866
  6213                           	
  6214  048F                     l2937:	
  6215                           	line	113
  6216  048F  2C9D               	goto	l5866
  6217                           	
  6218  0490                     l2939:	
  6219                           	line	114
  6220                           	
  6221  0490                     l5864:	
  6222  0490  3001               	movlw	01h
  6223  0491                     u3525:
  6224  0491  1003               	clrc
  6225  0492  0CB5               	rrf	(___ftadd@f1+2),f
  6226  0493  0CB4               	rrf	(___ftadd@f1+1),f
  6227  0494  0CB3               	rrf	(___ftadd@f1),f
  6228  0495  3EFF               	addlw	-1
  6229  0496  1D03               	skipz
  6230  0497  2C91               	goto	u3525
  6231                           
  6232                           	line	115
  6233  0498  3001               	movlw	(01h)
  6234  0499  00B9               	movwf	(??___ftadd+0)+0
  6235  049A  0839               	movf	(??___ftadd+0)+0,w
  6236  049B  07BF               	addwf	(___ftadd@exp1),f
  6237  049C  2C9D               	goto	l5866
  6238                           	line	116
  6239                           	
  6240  049D                     l2938:	
  6241                           	line	113
  6242                           	
  6243  049D                     l5866:	
  6244  049D  083F               	movf	(___ftadd@exp1),w
  6245  049E  063E               	xorwf	(___ftadd@exp2),w
  6246  049F  1D03               	skipz
  6247  04A0  2CA2               	goto	u3531
  6248  04A1  2CA3               	goto	u3530
  6249  04A2                     u3531:
  6250  04A2  2C90               	goto	l5864
  6251  04A3                     u3530:
  6252  04A3  2CDC               	goto	l2941
  6253                           	
  6254  04A4                     l2940:	
  6255                           	line	117
  6256  04A4  2CDC               	goto	l2941
  6257                           	
  6258  04A5                     l2933:	
  6259                           	
  6260  04A5                     l5868:	
  6261  04A5  083F               	movf	(___ftadd@exp1),w
  6262  04A6  023E               	subwf	(___ftadd@exp2),w
  6263  04A7  1803               	skipnc
  6264  04A8  2CAA               	goto	u3541
  6265  04A9  2CAB               	goto	u3540
  6266  04AA                     u3541:
  6267  04AA  2CDC               	goto	l2941
  6268  04AB                     u3540:
  6269  04AB  2CAC               	goto	l5870
  6270                           	line	120
  6271                           	
  6272  04AC                     l2943:	
  6273                           	line	121
  6274                           	
  6275  04AC                     l5870:	
  6276  04AC  3001               	movlw	01h
  6277  04AD                     u3555:
  6278  04AD  1003               	clrc
  6279  04AE  0DB3               	rlf	(___ftadd@f1),f
  6280  04AF  0DB4               	rlf	(___ftadd@f1+1),f
  6281  04B0  0DB5               	rlf	(___ftadd@f1+2),f
  6282  04B1  3EFF               	addlw	-1
  6283  04B2  1D03               	skipz
  6284  04B3  2CAD               	goto	u3555
  6285                           	line	122
  6286  04B4  3001               	movlw	low(01h)
  6287  04B5  02BF               	subwf	(___ftadd@exp1),f
  6288                           	line	123
  6289                           	
  6290  04B6                     l5872:	
  6291  04B6  083E               	movf	(___ftadd@exp2),w
  6292  04B7  063F               	xorwf	(___ftadd@exp1),w
  6293  04B8  1903               	skipnz
  6294  04B9  2CBB               	goto	u3561
  6295  04BA  2CBC               	goto	u3560
  6296  04BB                     u3561:
  6297  04BB  2CD4               	goto	l5878
  6298  04BC                     u3560:
  6299                           	
  6300  04BC                     l5874:	
  6301  04BC  3001               	movlw	low(01h)
  6302  04BD  02BD               	subwf	(___ftadd@sign),f
  6303  04BE  083D               	movf	((___ftadd@sign)),w
  6304  04BF  3907               	andlw	07h
  6305  04C0  1D03               	btfss	status,2
  6306  04C1  2CC3               	goto	u3571
  6307  04C2  2CC4               	goto	u3570
  6308  04C3                     u3571:
  6309  04C3  2CAC               	goto	l5870
  6310  04C4                     u3570:
  6311  04C4  2CD4               	goto	l5878
  6312                           	
  6313  04C5                     l2945:	
  6314  04C5  2CD4               	goto	l5878
  6315                           	
  6316  04C6                     l2946:	
  6317                           	line	124
  6318  04C6  2CD4               	goto	l5878
  6319                           	
  6320  04C7                     l2948:	
  6321                           	line	125
  6322                           	
  6323  04C7                     l5876:	
  6324  04C7  3001               	movlw	01h
  6325  04C8                     u3585:
  6326  04C8  1003               	clrc
  6327  04C9  0CB8               	rrf	(___ftadd@f2+2),f
  6328  04CA  0CB7               	rrf	(___ftadd@f2+1),f
  6329  04CB  0CB6               	rrf	(___ftadd@f2),f
  6330  04CC  3EFF               	addlw	-1
  6331  04CD  1D03               	skipz
  6332  04CE  2CC8               	goto	u3585
  6333                           
  6334                           	line	126
  6335  04CF  3001               	movlw	(01h)
  6336  04D0  00B9               	movwf	(??___ftadd+0)+0
  6337  04D1  0839               	movf	(??___ftadd+0)+0,w
  6338  04D2  07BE               	addwf	(___ftadd@exp2),f
  6339  04D3  2CD4               	goto	l5878
  6340                           	line	127
  6341                           	
  6342  04D4                     l2947:	
  6343                           	line	124
  6344                           	
  6345  04D4                     l5878:	
  6346  04D4  083F               	movf	(___ftadd@exp1),w
  6347  04D5  063E               	xorwf	(___ftadd@exp2),w
  6348  04D6  1D03               	skipz
  6349  04D7  2CD9               	goto	u3591
  6350  04D8  2CDA               	goto	u3590
  6351  04D9                     u3591:
  6352  04D9  2CC7               	goto	l5876
  6353  04DA                     u3590:
  6354  04DA  2CDC               	goto	l2941
  6355                           	
  6356  04DB                     l2949:	
  6357  04DB  2CDC               	goto	l2941
  6358                           	line	128
  6359                           	
  6360  04DC                     l2942:	
  6361                           	line	129
  6362                           	
  6363  04DC                     l2941:	
  6364  04DC  1FBD               	btfss	(___ftadd@sign),(7)&7
  6365  04DD  2CDF               	goto	u3601
  6366  04DE  2CE0               	goto	u3600
  6367  04DF                     u3601:
  6368  04DF  2CF1               	goto	l5882
  6369  04E0                     u3600:
  6370                           	line	131
  6371                           	
  6372  04E0                     l5880:	
  6373  04E0  30FF               	movlw	0FFh
  6374  04E1  06B3               	xorwf	(___ftadd@f1),f
  6375  04E2  30FF               	movlw	0FFh
  6376  04E3  06B4               	xorwf	(___ftadd@f1+1),f
  6377  04E4  30FF               	movlw	0FFh
  6378  04E5  06B5               	xorwf	(___ftadd@f1+2),f
  6379                           	line	132
  6380  04E6  3001               	movlw	01h
  6381  04E7  07B3               	addwf	(___ftadd@f1),f
  6382  04E8  3000               	movlw	0
  6383  04E9  1803               	skipnc
  6384  04EA  3001               movlw 1
  6385  04EB  07B4               	addwf	(___ftadd@f1+1),f
  6386  04EC  3000               	movlw	0
  6387  04ED  1803               	skipnc
  6388  04EE  3001               movlw 1
  6389  04EF  07B5               	addwf	(___ftadd@f1+2),f
  6390  04F0  2CF1               	goto	l5882
  6391                           	line	133
  6392                           	
  6393  04F1                     l2950:	
  6394                           	line	134
  6395                           	
  6396  04F1                     l5882:	
  6397  04F1  1F3D               	btfss	(___ftadd@sign),(6)&7
  6398  04F2  2CF4               	goto	u3611
  6399  04F3  2CF5               	goto	u3610
  6400  04F4                     u3611:
  6401  04F4  2D06               	goto	l5886
  6402  04F5                     u3610:
  6403                           	line	136
  6404                           	
  6405  04F5                     l5884:	
  6406  04F5  30FF               	movlw	0FFh
  6407  04F6  06B6               	xorwf	(___ftadd@f2),f
  6408  04F7  30FF               	movlw	0FFh
  6409  04F8  06B7               	xorwf	(___ftadd@f2+1),f
  6410  04F9  30FF               	movlw	0FFh
  6411  04FA  06B8               	xorwf	(___ftadd@f2+2),f
  6412                           	line	137
  6413  04FB  3001               	movlw	01h
  6414  04FC  07B6               	addwf	(___ftadd@f2),f
  6415  04FD  3000               	movlw	0
  6416  04FE  1803               	skipnc
  6417  04FF  3001               movlw 1
  6418  0500  07B7               	addwf	(___ftadd@f2+1),f
  6419  0501  3000               	movlw	0
  6420  0502  1803               	skipnc
  6421  0503  3001               movlw 1
  6422  0504  07B8               	addwf	(___ftadd@f2+2),f
  6423  0505  2D06               	goto	l5886
  6424                           	line	138
  6425                           	
  6426  0506                     l2951:	
  6427                           	line	139
  6428                           	
  6429  0506                     l5886:	
  6430  0506  01BD               	clrf	(___ftadd@sign)
  6431                           	line	140
  6432  0507  0833               	movf	(___ftadd@f1),w
  6433  0508  07B6               	addwf	(___ftadd@f2),f
  6434  0509  0834               	movf	(___ftadd@f1+1),w
  6435  050A  1103               	clrz
  6436  050B  1803               	skipnc
  6437  050C  0A34               	incf	(___ftadd@f1+1),w
  6438  050D  1903               	skipnz
  6439  050E  2D10               	goto	u3621
  6440  050F  07B7               	addwf	(___ftadd@f2+1),f
  6441  0510                     u3621:
  6442  0510  0835               	movf	(___ftadd@f1+2),w
  6443  0511  1103               	clrz
  6444  0512  1803               	skipnc
  6445  0513  0A35               	incf	(___ftadd@f1+2),w
  6446  0514  1903               	skipnz
  6447  0515  2D17               	goto	u3622
  6448  0516  07B8               	addwf	(___ftadd@f2+2),f
  6449  0517                     u3622:
  6450                           
  6451                           	line	141
  6452                           	
  6453  0517                     l5888:	
  6454  0517  1FB8               	btfss	(___ftadd@f2+2),(23)&7
  6455  0518  2D1A               	goto	u3631
  6456  0519  2D1B               	goto	u3630
  6457  051A                     u3631:
  6458  051A  2D2F               	goto	l5894
  6459  051B                     u3630:
  6460                           	line	142
  6461                           	
  6462  051B                     l5890:	
  6463  051B  30FF               	movlw	0FFh
  6464  051C  06B6               	xorwf	(___ftadd@f2),f
  6465  051D  30FF               	movlw	0FFh
  6466  051E  06B7               	xorwf	(___ftadd@f2+1),f
  6467  051F  30FF               	movlw	0FFh
  6468  0520  06B8               	xorwf	(___ftadd@f2+2),f
  6469                           	line	143
  6470  0521  3001               	movlw	01h
  6471  0522  07B6               	addwf	(___ftadd@f2),f
  6472  0523  3000               	movlw	0
  6473  0524  1803               	skipnc
  6474  0525  3001               movlw 1
  6475  0526  07B7               	addwf	(___ftadd@f2+1),f
  6476  0527  3000               	movlw	0
  6477  0528  1803               	skipnc
  6478  0529  3001               movlw 1
  6479  052A  07B8               	addwf	(___ftadd@f2+2),f
  6480                           	line	144
  6481                           	
  6482  052B                     l5892:	
  6483  052B  01BD               	clrf	(___ftadd@sign)
  6484  052C  1403               	bsf	status,0
  6485  052D  0DBD               	rlf	(___ftadd@sign),f
  6486  052E  2D2F               	goto	l5894
  6487                           	line	145
  6488                           	
  6489  052F                     l2952:	
  6490                           	line	146
  6491                           	
  6492  052F                     l5894:	
  6493  052F  0836               	movf	(___ftadd@f2),w
  6494  0530  00F0               	movwf	(?___ftpack)
  6495  0531  0837               	movf	(___ftadd@f2+1),w
  6496  0532  00F1               	movwf	(?___ftpack+1)
  6497  0533  0838               	movf	(___ftadd@f2+2),w
  6498  0534  00F2               	movwf	(?___ftpack+2)
  6499  0535  083F               	movf	(___ftadd@exp1),w
  6500  0536  00B9               	movwf	(??___ftadd+0)+0
  6501  0537  0839               	movf	(??___ftadd+0)+0,w
  6502  0538  00F3               	movwf	0+(?___ftpack)+03h
  6503  0539  083D               	movf	(___ftadd@sign),w
  6504  053A  00BA               	movwf	(??___ftadd+1)+0
  6505  053B  083A               	movf	(??___ftadd+1)+0,w
  6506  053C  00F4               	movwf	0+(?___ftpack)+04h
  6507  053D  120A  158A  2371   	fcall	___ftpack
              120A  118A         
  6508  0542  0870               	movf	(0+(?___ftpack)),w
  6509  0543  1283               	bcf	status, 5	;RP0=0, select bank0
  6510  0544  1303               	bcf	status, 6	;RP1=0, select bank0
  6511  0545  00B3               	movwf	(?___ftadd)
  6512  0546  0871               	movf	(1+(?___ftpack)),w
  6513  0547  00B4               	movwf	(?___ftadd+1)
  6514  0548  0872               	movf	(2+(?___ftpack)),w
  6515  0549  00B5               	movwf	(?___ftadd+2)
  6516  054A  2D4B               	goto	l2927
  6517                           	
  6518  054B                     l5896:	
  6519                           	line	148
  6520                           	
  6521  054B                     l2927:	
  6522  054B  0008               	return
  6523                           	opt stack 0
  6524                           GLOBAL	__end_of___ftadd
  6525  054C                     	__end_of___ftadd:
  6526 ;; =============== function ___ftadd ends ============
  6527                           
  6528                           	signat	___ftadd,8315
  6529                           	global	_DelaySec
  6530                           psect	text807,local,class=CODE,delta=2
  6531                           global __ptext807
  6532  1724                     __ptext807:
  6533                           
  6534 ;; *************** function _DelaySec *****************
  6535 ;; Defined at:
  6536 ;;		line 136 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\
       Serial-Requirements\Codes\USART_main.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  sec             2    4[COMMON] int 
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  i               2    7[COMMON] int 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;		None               void
  6543 ;; Registers used:
  6544 ;;		wreg, status,2, status,0, pclath, cstack
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6550 ;;      Params:         2       0       0       0       0
  6551 ;;      Locals:         2       0       0       0       0
  6552 ;;      Temps:          1       0       0       0       0
  6553 ;;      Totals:         5       0       0       0       0
  6554 ;;Total ram usage:        5 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    1
  6557 ;; This function calls:
  6558 ;;		_DelayMs
  6559 ;; This function is called by:
  6560 ;;		_main
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           psect	text807
  6564                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
  6565                           	line	136
  6566                           	global	__size_of_DelaySec
  6567  0020                     	__size_of_DelaySec	equ	__end_of_DelaySec-_DelaySec
  6568                           	
  6569  1724                     _DelaySec:	
  6570                           	opt	stack 6
  6571                           ; Regs used in _DelaySec: [wreg+status,2+status,0+pclath+cstack]
  6572                           	line	137
  6573                           	
  6574  1724                     l5820:	
  6575                           ;USART_main.c: 137: for(int i=0;i<sec;i++)
  6576  1724  01F7               	clrf	(DelaySec@i)
  6577  1725  01F8               	clrf	(DelaySec@i+1)
  6578  1726  2F34               	goto	l5826
  6579                           	line	138
  6580                           	
  6581  1727                     l2178:	
  6582                           	
  6583  1727                     l5822:	
  6584                           ;USART_main.c: 138: DelayMs(1000);
  6585  1727  30E8               	movlw	(0E8h)
  6586  1728  160A  118A  2744   	fcall	_DelayMs
              160A  118A         
  6587                           	line	137
  6588                           	
  6589  172D                     l5824:	
  6590  172D  3001               	movlw	low(01h)
  6591  172E  07F7               	addwf	(DelaySec@i),f
  6592  172F  1803               	skipnc
  6593  1730  0AF8               	incf	(DelaySec@i+1),f
  6594  1731  3000               	movlw	high(01h)
  6595  1732  07F8               	addwf	(DelaySec@i+1),f
  6596  1733  2F34               	goto	l5826
  6597                           	
  6598  1734                     l2177:	
  6599                           	
  6600  1734                     l5826:	
  6601  1734  0878               	movf	(DelaySec@i+1),w
  6602  1735  3A80               	xorlw	80h
  6603  1736  00F6               	movwf	(??_DelaySec+0)+0
  6604  1737  0875               	movf	(DelaySec@sec+1),w
  6605  1738  3A80               	xorlw	80h
  6606  1739  0276               	subwf	(??_DelaySec+0)+0,w
  6607  173A  1D03               	skipz
  6608  173B  2F3E               	goto	u3395
  6609  173C  0874               	movf	(DelaySec@sec),w
  6610  173D  0277               	subwf	(DelaySec@i),w
  6611  173E                     u3395:
  6612                           
  6613  173E  1C03               	skipc
  6614  173F  2F41               	goto	u3391
  6615  1740  2F42               	goto	u3390
  6616  1741                     u3391:
  6617  1741  2F27               	goto	l5822
  6618  1742                     u3390:
  6619  1742  2F43               	goto	l2180
  6620                           	
  6621  1743                     l2179:	
  6622                           	line	139
  6623                           	
  6624  1743                     l2180:	
  6625  1743  0008               	return
  6626                           	opt stack 0
  6627                           GLOBAL	__end_of_DelaySec
  6628  1744                     	__end_of_DelaySec:
  6629 ;; =============== function _DelaySec ends ============
  6630                           
  6631                           	signat	_DelaySec,4216
  6632                           	global	_intToStr
  6633                           psect	text808,local,class=CODE,delta=2
  6634                           global __ptext808
  6635  0C6B                     __ptext808:
  6636                           
  6637 ;; *************** function _intToStr *****************
  6638 ;; Defined at:
  6639 ;;		line 24 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\string.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  x               2    0[BANK0 ] int 
  6642 ;;  str             1    2[BANK0 ] PTR unsigned char 
  6643 ;;		 -> str(10), 
  6644 ;;  d               2    3[BANK0 ] int 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  i               2    7[BANK0 ] int 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  2    0[BANK0 ] int 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6656 ;;      Params:         0       5       0       0       0
  6657 ;;      Locals:         0       2       0       0       0
  6658 ;;      Temps:          0       2       0       0       0
  6659 ;;      Totals:         0       9       0       0       0
  6660 ;;Total ram usage:        9 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    1
  6663 ;; This function calls:
  6664 ;;		___awmod
  6665 ;;		___awdiv
  6666 ;;		_reverse
  6667 ;; This function is called by:
  6668 ;;		_ftoa
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           psect	text808
  6672                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\string.c"
  6673                           	line	24
  6674                           	global	__size_of_intToStr
  6675  0088                     	__size_of_intToStr	equ	__end_of_intToStr-_intToStr
  6676                           	
  6677  0C6B                     _intToStr:	
  6678                           	opt	stack 5
  6679                           ; Regs used in _intToStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6680                           	line	25
  6681                           	
  6682  0C6B                     l5796:	
  6683                           ;string.c: 25: int i = 0;
  6684  0C6B  1283               	bcf	status, 5	;RP0=0, select bank0
  6685  0C6C  1303               	bcf	status, 6	;RP1=0, select bank0
  6686  0C6D  01A7               	clrf	(intToStr@i)
  6687  0C6E  01A8               	clrf	(intToStr@i+1)
  6688                           	line	26
  6689                           ;string.c: 26: while (x)
  6690  0C6F  2CAA               	goto	l5804
  6691                           	
  6692  0C70                     l1421:	
  6693                           	line	28
  6694                           	
  6695  0C70                     l5798:	
  6696                           ;string.c: 27: {
  6697                           ;string.c: 28: str[i++] = (x%10) + '0';
  6698  0C70  300A               	movlw	low(0Ah)
  6699  0C71  00F0               	movwf	(?___awmod)
  6700  0C72  3000               	movlw	high(0Ah)
  6701  0C73  00F1               	movwf	((?___awmod))+1
  6702  0C74  0821               	movf	(intToStr@x+1),w
  6703  0C75  01F3               	clrf	1+(?___awmod)+02h
  6704  0C76  07F3               	addwf	1+(?___awmod)+02h
  6705  0C77  0820               	movf	(intToStr@x),w
  6706  0C78  01F2               	clrf	0+(?___awmod)+02h
  6707  0C79  07F2               	addwf	0+(?___awmod)+02h
  6708                           
  6709  0C7A  120A  158A  222B   	fcall	___awmod
              120A  158A         
  6710  0C7F  0870               	movf	(0+(?___awmod)),w
  6711  0C80  3E30               	addlw	030h
  6712  0C81  1283               	bcf	status, 5	;RP0=0, select bank0
  6713  0C82  1303               	bcf	status, 6	;RP1=0, select bank0
  6714  0C83  00A5               	movwf	(??_intToStr+0)+0
  6715  0C84  0827               	movf	(intToStr@i),w
  6716  0C85  0722               	addwf	(intToStr@str),w
  6717  0C86  00A6               	movwf	(??_intToStr+1)+0
  6718  0C87  0826               	movf	0+(??_intToStr+1)+0,w
  6719  0C88  0084               	movwf	fsr0
  6720  0C89  0825               	movf	(??_intToStr+0)+0,w
  6721  0C8A  1383               	bcf	status, 7	;select IRP bank0
  6722  0C8B  0080               	movwf	indf
  6723                           	
  6724  0C8C                     l5800:	
  6725  0C8C  3001               	movlw	low(01h)
  6726  0C8D  07A7               	addwf	(intToStr@i),f
  6727  0C8E  1803               	skipnc
  6728  0C8F  0AA8               	incf	(intToStr@i+1),f
  6729  0C90  3000               	movlw	high(01h)
  6730  0C91  07A8               	addwf	(intToStr@i+1),f
  6731                           	line	29
  6732                           	
  6733  0C92                     l5802:	
  6734                           ;string.c: 29: x = x/10;
  6735  0C92  300A               	movlw	low(0Ah)
  6736  0C93  00F0               	movwf	(?___awdiv)
  6737  0C94  3000               	movlw	high(0Ah)
  6738  0C95  00F1               	movwf	((?___awdiv))+1
  6739  0C96  0821               	movf	(intToStr@x+1),w
  6740  0C97  01F3               	clrf	1+(?___awdiv)+02h
  6741  0C98  07F3               	addwf	1+(?___awdiv)+02h
  6742  0C99  0820               	movf	(intToStr@x),w
  6743  0C9A  01F2               	clrf	0+(?___awdiv)+02h
  6744  0C9B  07F2               	addwf	0+(?___awdiv)+02h
  6745                           
  6746  0C9C  120A  158A  22FD   	fcall	___awdiv
              120A  158A         
  6747  0CA1  0871               	movf	(1+(?___awdiv)),w
  6748  0CA2  1283               	bcf	status, 5	;RP0=0, select bank0
  6749  0CA3  1303               	bcf	status, 6	;RP1=0, select bank0
  6750  0CA4  01A1               	clrf	(intToStr@x+1)
  6751  0CA5  07A1               	addwf	(intToStr@x+1)
  6752  0CA6  0870               	movf	(0+(?___awdiv)),w
  6753  0CA7  01A0               	clrf	(intToStr@x)
  6754  0CA8  07A0               	addwf	(intToStr@x)
  6755                           
  6756  0CA9  2CAA               	goto	l5804
  6757                           	line	30
  6758                           	
  6759  0CAA                     l1420:	
  6760                           	line	26
  6761                           	
  6762  0CAA                     l5804:	
  6763  0CAA  0821               	movf	((intToStr@x+1)),w
  6764  0CAB  0420               	iorwf	((intToStr@x)),w
  6765  0CAC  1D03               	skipz
  6766  0CAD  2CAF               	goto	u3371
  6767  0CAE  2CB0               	goto	u3370
  6768  0CAF                     u3371:
  6769  0CAF  2C70               	goto	l5798
  6770  0CB0                     u3370:
  6771  0CB0  2CC5               	goto	l5810
  6772                           	
  6773  0CB1                     l1422:	
  6774                           	line	34
  6775                           ;string.c: 30: }
  6776                           ;string.c: 34: while (i < d)
  6777  0CB1  2CC5               	goto	l5810
  6778                           	
  6779  0CB2                     l1424:	
  6780                           	line	35
  6781                           	
  6782  0CB2                     l5806:	
  6783                           ;string.c: 35: str[i++] = '0';
  6784  0CB2  3030               	movlw	(030h)
  6785  0CB3  1283               	bcf	status, 5	;RP0=0, select bank0
  6786  0CB4  1303               	bcf	status, 6	;RP1=0, select bank0
  6787  0CB5  00A5               	movwf	(??_intToStr+0)+0
  6788  0CB6  0827               	movf	(intToStr@i),w
  6789  0CB7  0722               	addwf	(intToStr@str),w
  6790  0CB8  00A6               	movwf	(??_intToStr+1)+0
  6791  0CB9  0826               	movf	0+(??_intToStr+1)+0,w
  6792  0CBA  0084               	movwf	fsr0
  6793  0CBB  0825               	movf	(??_intToStr+0)+0,w
  6794  0CBC  1383               	bcf	status, 7	;select IRP bank0
  6795  0CBD  0080               	movwf	indf
  6796                           	
  6797  0CBE                     l5808:	
  6798  0CBE  3001               	movlw	low(01h)
  6799  0CBF  07A7               	addwf	(intToStr@i),f
  6800  0CC0  1803               	skipnc
  6801  0CC1  0AA8               	incf	(intToStr@i+1),f
  6802  0CC2  3000               	movlw	high(01h)
  6803  0CC3  07A8               	addwf	(intToStr@i+1),f
  6804  0CC4  2CC5               	goto	l5810
  6805                           	
  6806  0CC5                     l1423:	
  6807                           	line	34
  6808                           	
  6809  0CC5                     l5810:	
  6810  0CC5  0828               	movf	(intToStr@i+1),w
  6811  0CC6  3A80               	xorlw	80h
  6812  0CC7  00A5               	movwf	(??_intToStr+0)+0
  6813  0CC8  0824               	movf	(intToStr@d+1),w
  6814  0CC9  3A80               	xorlw	80h
  6815  0CCA  0225               	subwf	(??_intToStr+0)+0,w
  6816  0CCB  1D03               	skipz
  6817  0CCC  2CCF               	goto	u3385
  6818  0CCD  0823               	movf	(intToStr@d),w
  6819  0CCE  0227               	subwf	(intToStr@i),w
  6820  0CCF                     u3385:
  6821                           
  6822  0CCF  1C03               	skipc
  6823  0CD0  2CD2               	goto	u3381
  6824  0CD1  2CD3               	goto	u3380
  6825  0CD2                     u3381:
  6826  0CD2  2CB2               	goto	l5806
  6827  0CD3                     u3380:
  6828  0CD3  2CD4               	goto	l5812
  6829                           	
  6830  0CD4                     l1425:	
  6831                           	line	37
  6832                           	
  6833  0CD4                     l5812:	
  6834                           ;string.c: 37: reverse(str, i);
  6835  0CD4  1283               	bcf	status, 5	;RP0=0, select bank0
  6836  0CD5  1303               	bcf	status, 6	;RP1=0, select bank0
  6837  0CD6  0828               	movf	(intToStr@i+1),w
  6838  0CD7  01F1               	clrf	(?_reverse+1)
  6839  0CD8  07F1               	addwf	(?_reverse+1)
  6840  0CD9  0827               	movf	(intToStr@i),w
  6841  0CDA  01F0               	clrf	(?_reverse)
  6842  0CDB  07F0               	addwf	(?_reverse)
  6843                           
  6844  0CDC  0822               	movf	(intToStr@str),w
  6845  0CDD  120A  158A  2136   	fcall	_reverse
              120A  158A         
  6846                           	line	38
  6847                           	
  6848  0CE2                     l5814:	
  6849                           ;string.c: 38: str[i] = '\0';
  6850  0CE2  1283               	bcf	status, 5	;RP0=0, select bank0
  6851  0CE3  1303               	bcf	status, 6	;RP1=0, select bank0
  6852  0CE4  0827               	movf	(intToStr@i),w
  6853  0CE5  0722               	addwf	(intToStr@str),w
  6854  0CE6  00A5               	movwf	(??_intToStr+0)+0
  6855  0CE7  0825               	movf	0+(??_intToStr+0)+0,w
  6856  0CE8  0084               	movwf	fsr0
  6857  0CE9  1383               	bcf	status, 7	;select IRP bank0
  6858  0CEA  0180               	clrf	indf
  6859                           	line	39
  6860                           	
  6861  0CEB                     l5816:	
  6862                           ;string.c: 39: return i;
  6863  0CEB  0828               	movf	(intToStr@i+1),w
  6864  0CEC  01A1               	clrf	(?_intToStr+1)
  6865  0CED  07A1               	addwf	(?_intToStr+1)
  6866  0CEE  0827               	movf	(intToStr@i),w
  6867  0CEF  01A0               	clrf	(?_intToStr)
  6868  0CF0  07A0               	addwf	(?_intToStr)
  6869                           
  6870  0CF1  2CF2               	goto	l1426
  6871                           	
  6872  0CF2                     l5818:	
  6873                           	line	40
  6874                           	
  6875  0CF2                     l1426:	
  6876  0CF2  0008               	return
  6877                           	opt stack 0
  6878                           GLOBAL	__end_of_intToStr
  6879  0CF3                     	__end_of_intToStr:
  6880 ;; =============== function _intToStr ends ============
  6881                           
  6882                           	signat	_intToStr,12410
  6883                           	global	_lcd_init
  6884                           psect	text809,local,class=CODE,delta=2
  6885                           global __ptext809
  6886  09D0                     __ptext809:
  6887                           
  6888 ;; *************** function _lcd_init *****************
  6889 ;; Defined at:
  6890 ;;		line 57 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\lcd.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;		None
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  _dcnt           1    6[COMMON] unsigned char 
  6895 ;;  _dcnt           1    5[COMMON] unsigned char 
  6896 ;; Return value:  Size  Location     Type
  6897 ;;		None               void
  6898 ;; Registers used:
  6899 ;;		wreg, status,2, status,0, pclath, cstack
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6905 ;;      Params:         0       0       0       0       0
  6906 ;;      Locals:         2       0       0       0       0
  6907 ;;      Temps:          1       0       0       0       0
  6908 ;;      Totals:         3       0       0       0       0
  6909 ;;Total ram usage:        3 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; Hardware stack levels required when called:    1
  6912 ;; This function calls:
  6913 ;;		_DelayMs
  6914 ;;		_lcd_write
  6915 ;; This function is called by:
  6916 ;;		_main
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           psect	text809
  6920                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\lcd.c"
  6921                           	line	57
  6922                           	global	__size_of_lcd_init
  6923  005B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  6924                           	
  6925  09D0                     _lcd_init:	
  6926                           	opt	stack 6
  6927                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  6928                           	line	58
  6929                           	
  6930  09D0                     l5764:	
  6931                           ;lcd.c: 58: RE0 = 0;
  6932  09D0  1283               	bcf	status, 5	;RP0=0, select bank0
  6933  09D1  1303               	bcf	status, 6	;RP1=0, select bank0
  6934  09D2  1009               	bcf	(72/8),(72)&7
  6935                           	line	59
  6936                           	
  6937  09D3                     l5766:	
  6938                           ;lcd.c: 59: DelayMs(15);
  6939  09D3  300F               	movlw	(0Fh)
  6940  09D4  160A  118A  2744   	fcall	_DelayMs
              120A  158A         
  6941                           	line	60
  6942                           	
  6943  09D9                     l5768:	
  6944                           ;lcd.c: 60: PORTD = (0x3 << 4);
  6945  09D9  3030               	movlw	(030h)
  6946  09DA  1283               	bcf	status, 5	;RP0=0, select bank0
  6947  09DB  1303               	bcf	status, 6	;RP1=0, select bank0
  6948  09DC  0088               	movwf	(8)	;volatile
  6949                           	line	61
  6950                           	
  6951  09DD                     l5770:	
  6952                           ;lcd.c: 61: ((RE1 = 1),(RE1=0));
  6953  09DD  1489               	bsf	(73/8),(73)&7
  6954                           	
  6955  09DE                     l5772:	
  6956  09DE  1089               	bcf	(73/8),(73)&7
  6957                           	line	62
  6958                           	
  6959  09DF                     l5774:	
  6960                           ;lcd.c: 62: DelayMs(5);
  6961  09DF  3005               	movlw	(05h)
  6962  09E0  160A  118A  2744   	fcall	_DelayMs
              120A  158A         
  6963                           	line	63
  6964                           	
  6965  09E5                     l5776:	
  6966                           ;lcd.c: 63: ((RE1 = 1),(RE1=0));
  6967  09E5  1283               	bcf	status, 5	;RP0=0, select bank0
  6968  09E6  1303               	bcf	status, 6	;RP1=0, select bank0
  6969  09E7  1489               	bsf	(73/8),(73)&7
  6970                           	
  6971  09E8                     l5778:	
  6972  09E8  1089               	bcf	(73/8),(73)&7
  6973                           	line	64
  6974                           ;lcd.c: 64: { unsigned char _dcnt; _dcnt = (100)/((12*1000L)/(4*1000L))|1; while(--_dcnt
                                  != 0) continue; };
  6975  09E9  3021               	movlw	(021h)
  6976  09EA  00F4               	movwf	(??_lcd_init+0)+0
  6977  09EB  0874               	movf	(??_lcd_init+0)+0,w
  6978  09EC  00F5               	movwf	(lcd_init@_dcnt)
  6979  09ED  29EF               	goto	l5780
  6980                           	
  6981  09EE                     l722:	
  6982  09EE  29EF               	goto	l5780
  6983                           	
  6984  09EF                     l721:	
  6985                           	
  6986  09EF                     l5780:	
  6987  09EF  3001               	movlw	low(01h)
  6988  09F0  02F5               	subwf	(lcd_init@_dcnt),f
  6989  09F1  1D03               	btfss	status,2
  6990  09F2  29F4               	goto	u3351
  6991  09F3  29F5               	goto	u3350
  6992  09F4                     u3351:
  6993  09F4  29EF               	goto	l5780
  6994  09F5                     u3350:
  6995                           	
  6996  09F5                     l723:	
  6997                           	line	65
  6998                           ;lcd.c: 65: ((RE1 = 1),(RE1=0));
  6999  09F5  1283               	bcf	status, 5	;RP0=0, select bank0
  7000  09F6  1303               	bcf	status, 6	;RP1=0, select bank0
  7001  09F7  1489               	bsf	(73/8),(73)&7
  7002  09F8  1089               	bcf	(73/8),(73)&7
  7003                           	line	66
  7004                           	
  7005  09F9                     l5782:	
  7006                           ;lcd.c: 66: DelayMs(5);
  7007  09F9  3005               	movlw	(05h)
  7008  09FA  160A  118A  2744   	fcall	_DelayMs
              120A  158A         
  7009                           	line	67
  7010                           	
  7011  09FF                     l5784:	
  7012                           ;lcd.c: 67: PORTD = (0x2 << 4);
  7013  09FF  3020               	movlw	(020h)
  7014  0A00  1283               	bcf	status, 5	;RP0=0, select bank0
  7015  0A01  1303               	bcf	status, 6	;RP1=0, select bank0
  7016  0A02  0088               	movwf	(8)	;volatile
  7017                           	line	68
  7018                           	
  7019  0A03                     l5786:	
  7020                           ;lcd.c: 68: ((RE1 = 1),(RE1=0));
  7021  0A03  1489               	bsf	(73/8),(73)&7
  7022                           	
  7023  0A04                     l5788:	
  7024  0A04  1089               	bcf	(73/8),(73)&7
  7025                           	line	69
  7026                           	
  7027  0A05                     l5790:	
  7028                           ;lcd.c: 69: { unsigned char _dcnt; _dcnt = (40)/((12*1000L)/(4*1000L))|1; while(--_dcnt 
                                 != 0) continue; };
  7029  0A05  300D               	movlw	(0Dh)
  7030  0A06  00F4               	movwf	(??_lcd_init+0)+0
  7031  0A07  0874               	movf	(??_lcd_init+0)+0,w
  7032  0A08  00F6               	movwf	(lcd_init@_dcnt_1244)
  7033  0A09  2A0B               	goto	l5792
  7034                           	
  7035  0A0A                     l725:	
  7036  0A0A  2A0B               	goto	l5792
  7037                           	
  7038  0A0B                     l724:	
  7039                           	
  7040  0A0B                     l5792:	
  7041  0A0B  3001               	movlw	low(01h)
  7042  0A0C  02F6               	subwf	(lcd_init@_dcnt_1244),f
  7043  0A0D  1D03               	btfss	status,2
  7044  0A0E  2A10               	goto	u3361
  7045  0A0F  2A11               	goto	u3360
  7046  0A10                     u3361:
  7047  0A10  2A0B               	goto	l5792
  7048  0A11                     u3360:
  7049  0A11  2A12               	goto	l5794
  7050                           	
  7051  0A12                     l726:	
  7052                           	line	70
  7053                           	
  7054  0A12                     l5794:	
  7055                           ;lcd.c: 70: lcd_write(0x28);
  7056  0A12  3028               	movlw	(028h)
  7057  0A13  160A  118A  2786   	fcall	_lcd_write
              120A  158A         
  7058                           	line	71
  7059                           ;lcd.c: 71: lcd_write(0x08);
  7060  0A18  3008               	movlw	(08h)
  7061  0A19  160A  118A  2786   	fcall	_lcd_write
              120A  158A         
  7062                           	line	72
  7063                           ;lcd.c: 72: lcd_write(0x0F);
  7064  0A1E  300F               	movlw	(0Fh)
  7065  0A1F  160A  118A  2786   	fcall	_lcd_write
              120A  158A         
  7066                           	line	73
  7067                           ;lcd.c: 73: lcd_write(0x06);
  7068  0A24  3006               	movlw	(06h)
  7069  0A25  160A  118A  2786   	fcall	_lcd_write
              120A  158A         
  7070                           	line	74
  7071                           	
  7072  0A2A                     l727:	
  7073  0A2A  0008               	return
  7074                           	opt stack 0
  7075                           GLOBAL	__end_of_lcd_init
  7076  0A2B                     	__end_of_lcd_init:
  7077 ;; =============== function _lcd_init ends ============
  7078                           
  7079                           	signat	_lcd_init,88
  7080                           	global	_lcd_goto
  7081                           psect	text810,local,class=CODE,delta=2
  7082                           global __ptext810
  7083  16BC                     __ptext810:
  7084                           
  7085 ;; *************** function _lcd_goto *****************
  7086 ;; Defined at:
  7087 ;;		line 52 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\lcd.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  pos             1    wreg     unsigned char 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  pos             1    3[COMMON] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;		None               void
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0, pclath, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7101 ;;      Params:         0       0       0       0       0
  7102 ;;      Locals:         1       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0
  7104 ;;      Totals:         1       0       0       0       0
  7105 ;;Total ram usage:        1 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    1
  7108 ;; This function calls:
  7109 ;;		_lcd_write
  7110 ;; This function is called by:
  7111 ;;		_main
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           psect	text810
  7115                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\lcd.c"
  7116                           	line	52
  7117                           	global	__size_of_lcd_goto
  7118  000C                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  7119                           	
  7120  16BC                     _lcd_goto:	
  7121                           	opt	stack 6
  7122                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  7123                           ;lcd_goto@pos stored from wreg
  7124  16BC  00F3               	movwf	(lcd_goto@pos)
  7125                           	line	53
  7126                           	
  7127  16BD                     l5760:	
  7128                           ;lcd.c: 53: RE0 = 0;
  7129  16BD  1283               	bcf	status, 5	;RP0=0, select bank0
  7130  16BE  1303               	bcf	status, 6	;RP1=0, select bank0
  7131  16BF  1009               	bcf	(72/8),(72)&7
  7132                           	line	54
  7133                           	
  7134  16C0                     l5762:	
  7135                           ;lcd.c: 54: lcd_write(0x80+pos);
  7136  16C0  0873               	movf	(lcd_goto@pos),w
  7137  16C1  3E80               	addlw	080h
  7138  16C2  160A  118A  2786   	fcall	_lcd_write
              160A  118A         
  7139                           	line	55
  7140                           	
  7141  16C7                     l718:	
  7142  16C7  0008               	return
  7143                           	opt stack 0
  7144                           GLOBAL	__end_of_lcd_goto
  7145  16C8                     	__end_of_lcd_goto:
  7146 ;; =============== function _lcd_goto ends ============
  7147                           
  7148                           	signat	_lcd_goto,4216
  7149                           	global	_lcd_puts
  7150                           psect	text811,local,class=CODE,delta=2
  7151                           global __ptext811
  7152  17D5                     __ptext811:
  7153                           
  7154 ;; *************** function _lcd_puts *****************
  7155 ;; Defined at:
  7156 ;;		line 37 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\lcd.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  s               2    3[COMMON] PTR const unsigned char 
  7159 ;;		 -> STR_3(9), STR_2(9), str(10), STR_1(12), 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;		None
  7162 ;; Return value:  Size  Location     Type
  7163 ;;		None               void
  7164 ;; Registers used:
  7165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7171 ;;      Params:         2       0       0       0       0
  7172 ;;      Locals:         0       0       0       0       0
  7173 ;;      Temps:          0       0       0       0       0
  7174 ;;      Totals:         2       0       0       0       0
  7175 ;;Total ram usage:        2 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    1
  7178 ;; This function calls:
  7179 ;;		_lcd_write
  7180 ;; This function is called by:
  7181 ;;		_main
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           psect	text811
  7185                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\lcd.c"
  7186                           	line	37
  7187                           	global	__size_of_lcd_puts
  7188  002B                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  7189                           	
  7190  17D5                     _lcd_puts:	
  7191                           	opt	stack 6
  7192                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7193                           	line	38
  7194                           	
  7195  17D5                     l5752:	
  7196                           ;lcd.c: 38: RE0 = 1;
  7197  17D5  1283               	bcf	status, 5	;RP0=0, select bank0
  7198  17D6  1303               	bcf	status, 6	;RP1=0, select bank0
  7199  17D7  1409               	bsf	(72/8),(72)&7
  7200                           	line	39
  7201                           ;lcd.c: 39: while(*s)
  7202  17D8  2FEE               	goto	l5758
  7203                           	
  7204  17D9                     l707:	
  7205                           	line	40
  7206                           	
  7207  17D9                     l5754:	
  7208                           ;lcd.c: 40: lcd_write(*s++);
  7209  17D9  0874               	movf	(lcd_puts@s+1),w
  7210  17DA  00FF               	movwf	btemp+1
  7211  17DB  0873               	movf	(lcd_puts@s),w
  7212  17DC  0084               	movwf	fsr0
  7213  17DD  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7214  17E2  160A  118A  2786   	fcall	_lcd_write
              160A  118A         
  7215                           	
  7216  17E7                     l5756:	
  7217  17E7  3001               	movlw	low(01h)
  7218  17E8  07F3               	addwf	(lcd_puts@s),f
  7219  17E9  1803               	skipnc
  7220  17EA  0AF4               	incf	(lcd_puts@s+1),f
  7221  17EB  3000               	movlw	high(01h)
  7222  17EC  07F4               	addwf	(lcd_puts@s+1),f
  7223  17ED  2FEE               	goto	l5758
  7224                           	
  7225  17EE                     l706:	
  7226                           	line	39
  7227                           	
  7228  17EE                     l5758:	
  7229  17EE  0874               	movf	(lcd_puts@s+1),w
  7230  17EF  1283               	bcf	status, 5	;RP0=0, select bank0
  7231  17F0  1303               	bcf	status, 6	;RP1=0, select bank0
  7232  17F1  00FF               	movwf	btemp+1
  7233  17F2  0873               	movf	(lcd_puts@s),w
  7234  17F3  0084               	movwf	fsr0
  7235  17F4  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7236  17F9  3800               	iorlw	0
  7237  17FA  1D03               	skipz
  7238  17FB  2FFD               	goto	u3341
  7239  17FC  2FFE               	goto	u3340
  7240  17FD                     u3341:
  7241  17FD  2FD9               	goto	l5754
  7242  17FE                     u3340:
  7243  17FE  2FFF               	goto	l709
  7244                           	
  7245  17FF                     l708:	
  7246                           	line	41
  7247                           	
  7248  17FF                     l709:	
  7249  17FF  0008               	return
  7250                           	opt stack 0
  7251                           GLOBAL	__end_of_lcd_puts
  7252  1800                     	__end_of_lcd_puts:
  7253 ;; =============== function _lcd_puts ends ============
  7254                           
  7255                           	signat	_lcd_puts,4216
  7256                           	global	_lcd_clear
  7257                           psect	text812,local,class=CODE,delta=2
  7258                           global __ptext812
  7259  16D6                     __ptext812:
  7260                           
  7261 ;; *************** function _lcd_clear *****************
  7262 ;; Defined at:
  7263 ;;		line 31 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\lcd.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;		None
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;		None
  7268 ;; Return value:  Size  Location     Type
  7269 ;;		None               void
  7270 ;; Registers used:
  7271 ;;		wreg, status,2, status,0, pclath, cstack
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7277 ;;      Params:         0       0       0       0       0
  7278 ;;      Locals:         0       0       0       0       0
  7279 ;;      Temps:          0       0       0       0       0
  7280 ;;      Totals:         0       0       0       0       0
  7281 ;;Total ram usage:        0 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:    1
  7284 ;; This function calls:
  7285 ;;		_lcd_write
  7286 ;;		_DelayMs
  7287 ;; This function is called by:
  7288 ;;		_main
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           psect	text812
  7292                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\lcd.c"
  7293                           	line	31
  7294                           	global	__size_of_lcd_clear
  7295  0010                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  7296                           	
  7297  16D6                     _lcd_clear:	
  7298                           	opt	stack 6
  7299                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  7300                           	line	32
  7301                           	
  7302  16D6                     l5748:	
  7303                           ;lcd.c: 32: RE0 = 0;
  7304  16D6  1283               	bcf	status, 5	;RP0=0, select bank0
  7305  16D7  1303               	bcf	status, 6	;RP1=0, select bank0
  7306  16D8  1009               	bcf	(72/8),(72)&7
  7307                           	line	33
  7308                           	
  7309  16D9                     l5750:	
  7310                           ;lcd.c: 33: lcd_write(0x1);
  7311  16D9  3001               	movlw	(01h)
  7312  16DA  160A  118A  2786   	fcall	_lcd_write
              160A  118A         
  7313                           	line	34
  7314                           ;lcd.c: 34: DelayMs(2);
  7315  16DF  3002               	movlw	(02h)
  7316  16E0  160A  118A  2744   	fcall	_DelayMs
              160A  118A         
  7317                           	line	35
  7318                           	
  7319  16E5                     l703:	
  7320  16E5  0008               	return
  7321                           	opt stack 0
  7322                           GLOBAL	__end_of_lcd_clear
  7323  16E6                     	__end_of_lcd_clear:
  7324 ;; =============== function _lcd_clear ends ============
  7325                           
  7326                           	signat	_lcd_clear,88
  7327                           	global	_frexp
  7328                           psect	text813,local,class=CODE,delta=2
  7329                           global __ptext813
  7330  08EC                     __ptext813:
  7331                           
  7332 ;; *************** function _frexp *****************
  7333 ;; Defined at:
  7334 ;;		line 255 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  value           3    0[COMMON] PTR const unsigned char 
  7337 ;;  eptr            1    3[COMMON] PTR int 
  7338 ;;		 -> log@exp(2), floor@expon(2), 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  3    0[COMMON] PTR int 
  7343 ;; Registers used:
  7344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7350 ;;      Params:         4       0       0       0       0
  7351 ;;      Locals:         0       0       0       0       0
  7352 ;;      Temps:          2       0       0       0       0
  7353 ;;      Totals:         6       0       0       0       0
  7354 ;;Total ram usage:        6 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_floor
  7360 ;;		_log
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           psect	text813
  7364                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  7365                           	line	255
  7366                           	global	__size_of_frexp
  7367  004A                     	__size_of_frexp	equ	__end_of_frexp-_frexp
  7368                           	
  7369  08EC                     _frexp:	
  7370                           	opt	stack 3
  7371                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  7372                           	line	256
  7373                           	
  7374  08EC                     l5720:	
  7375  08EC  0872               	movf	(frexp@value+2),w
  7376  08ED  0471               	iorwf	(frexp@value+1),w
  7377  08EE  0470               	iorwf	(frexp@value),w
  7378  08EF  1D03               	skipz
  7379  08F0  28F2               	goto	u3321
  7380  08F1  28F3               	goto	u3320
  7381  08F2                     u3321:
  7382  08F2  2903               	goto	l5728
  7383  08F3                     u3320:
  7384                           	line	257
  7385                           	
  7386  08F3                     l5722:	
  7387  08F3  0873               	movf	(frexp@eptr),w
  7388  08F4  0084               	movwf	fsr0
  7389  08F5  3000               	movlw	low(0)
  7390  08F6  1383               	bcf	status, 7	;select IRP bank0
  7391  08F7  0080               	movwf	indf
  7392  08F8  0A84               	incf	fsr0,f
  7393  08F9  3000               	movlw	high(0)
  7394  08FA  0080               	movwf	indf
  7395                           	line	258
  7396                           	
  7397  08FB                     l5724:	
  7398  08FB  3000               	movlw	0x0
  7399  08FC  00F0               	movwf	(?_frexp)
  7400  08FD  3000               	movlw	0x0
  7401  08FE  00F1               	movwf	(?_frexp+1)
  7402  08FF  3000               	movlw	0x0
  7403  0900  00F2               	movwf	(?_frexp+2)
  7404  0901  2935               	goto	l3267
  7405                           	
  7406  0902                     l5726:	
  7407  0902  2935               	goto	l3267
  7408                           	line	259
  7409                           	
  7410  0903                     l3266:	
  7411                           	line	261
  7412                           	
  7413  0903                     l5728:	
  7414  0903  0872               	movf	0+(frexp@value)+02h,w
  7415  0904  397F               	andlw	(1<<7)-1
  7416  0905  00F4               	movwf	(??_frexp+0)+0
  7417  0906  01F5               	clrf	(??_frexp+0)+0+1
  7418  0907  3001               	movlw	01h
  7419  0908  00FF               	movwf	btemp+1
  7420  0909                     u3335:
  7421  0909  1003               	clrc
  7422  090A  0DF4               	rlf	(??_frexp+0)+0,f
  7423  090B  0DF5               	rlf	(??_frexp+0)+1,f
  7424  090C  0BFF               	decfsz	btemp+1,f
  7425  090D  2909               	goto	u3335
  7426  090E  0873               	movf	(frexp@eptr),w
  7427  090F  0084               	movwf	fsr0
  7428  0910  0874               	movf	0+(??_frexp+0)+0,w
  7429  0911  1383               	bcf	status, 7	;select IRP bank0
  7430  0912  0080               	movwf	indf
  7431  0913  0A84               	incf	fsr0,f
  7432  0914  0875               	movf	1+(??_frexp+0)+0,w
  7433  0915  0080               	movwf	indf
  7434                           	line	262
  7435                           	
  7436  0916                     l5730:	
  7437  0916  0D71               	rlf	0+(frexp@value)+01h,w
  7438  0917  0D71               	rlf	0+(frexp@value)+01h,w
  7439  0918  3901               	andlw	1
  7440  0919  00F4               	movwf	(??_frexp+0)+0
  7441  091A  01F5               	clrf	(??_frexp+0)+0+1
  7442  091B  0873               	movf	(frexp@eptr),w
  7443  091C  0084               	movwf	fsr0
  7444  091D  0874               	movf	0+(??_frexp+0)+0,w
  7445  091E  0480               	iorwf	indf,f
  7446  091F  0A84               	incf	fsr0,f
  7447  0920  0875               	movf	1+(??_frexp+0)+0,w
  7448  0921  0480               	iorwf	indf,f
  7449                           	line	263
  7450                           	
  7451  0922                     l5732:	
  7452  0922  0873               	movf	(frexp@eptr),w
  7453  0923  0084               	movwf	fsr0
  7454  0924  3082               	movlw	low(-126)
  7455  0925  0780               	addwf	indf,f
  7456  0926  0F84               	incfsz	fsr0,f
  7457  0927  0800               	movf	indf,w
  7458  0928  1803               	skipnc
  7459  0929  0A00               	incf	indf,w
  7460  092A  00FF               	movwf	btemp+1
  7461  092B  30FF               	movlw	high(-126)
  7462  092C  077F               	addwf	btemp+1,w
  7463  092D  0080               	movwf	indf
  7464  092E  0384               	decf	fsr0,f
  7465                           	line	268
  7466                           	
  7467  092F                     l5734:	
  7468  092F  0872               	movf	0+(frexp@value)+02h,w
  7469  0930  3980               	andlw	not (((1<<7)-1)<<0)
  7470  0931  383F               	iorlw	(03Fh & ((1<<7)-1))<<0
  7471  0932  00F2               	movwf	0+(frexp@value)+02h
  7472                           	line	269
  7473                           	
  7474  0933                     l5736:	
  7475  0933  13F1               	bcf	0+(frexp@value)+01h,7
  7476                           	line	273
  7477                           	
  7478  0934                     l5738:	
  7479  0934  2935               	goto	l3267
  7480                           	
  7481  0935                     l5740:	
  7482                           	line	274
  7483                           	
  7484  0935                     l3267:	
  7485  0935  0008               	return
  7486                           	opt stack 0
  7487                           GLOBAL	__end_of_frexp
  7488  0936                     	__end_of_frexp:
  7489 ;; =============== function _frexp ends ============
  7490                           
  7491                           	signat	_frexp,8315
  7492                           	global	___awmod
  7493                           psect	text814,local,class=CODE,delta=2
  7494                           global __ptext814
  7495  0A2B                     __ptext814:
  7496                           
  7497 ;; *************** function ___awmod *****************
  7498 ;; Defined at:
  7499 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  divisor         2    0[COMMON] int 
  7502 ;;  dividend        2    2[COMMON] int 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  sign            1    6[COMMON] unsigned char 
  7505 ;;  counter         1    5[COMMON] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  2    0[COMMON] int 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7515 ;;      Params:         4       0       0       0       0
  7516 ;;      Locals:         2       0       0       0       0
  7517 ;;      Temps:          1       0       0       0       0
  7518 ;;      Totals:         7       0       0       0       0
  7519 ;;Total ram usage:        7 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; This function calls:
  7522 ;;		Nothing
  7523 ;; This function is called by:
  7524 ;;		_intToStr
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           psect	text814
  7528                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7529                           	line	5
  7530                           	global	__size_of___awmod
  7531  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  7532                           	
  7533  0A2B                     ___awmod:	
  7534                           	opt	stack 5
  7535                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7536                           	line	8
  7537                           	
  7538  0A2B                     l5668:	
  7539  0A2B  01F6               	clrf	(___awmod@sign)
  7540                           	line	9
  7541  0A2C  1FF3               	btfss	(___awmod@dividend+1),7
  7542  0A2D  2A2F               	goto	u3221
  7543  0A2E  2A30               	goto	u3220
  7544  0A2F                     u3221:
  7545  0A2F  2A39               	goto	l5672
  7546  0A30                     u3220:
  7547                           	line	10
  7548                           	
  7549  0A30                     l5670:	
  7550  0A30  09F2               	comf	(___awmod@dividend),f
  7551  0A31  09F3               	comf	(___awmod@dividend+1),f
  7552  0A32  0AF2               	incf	(___awmod@dividend),f
  7553  0A33  1903               	skipnz
  7554  0A34  0AF3               	incf	(___awmod@dividend+1),f
  7555                           	line	11
  7556  0A35  01F6               	clrf	(___awmod@sign)
  7557  0A36  1403               	bsf	status,0
  7558  0A37  0DF6               	rlf	(___awmod@sign),f
  7559  0A38  2A39               	goto	l5672
  7560                           	line	12
  7561                           	
  7562  0A39                     l3088:	
  7563                           	line	13
  7564                           	
  7565  0A39                     l5672:	
  7566  0A39  1FF1               	btfss	(___awmod@divisor+1),7
  7567  0A3A  2A3C               	goto	u3231
  7568  0A3B  2A3D               	goto	u3230
  7569  0A3C                     u3231:
  7570  0A3C  2A43               	goto	l5676
  7571  0A3D                     u3230:
  7572                           	line	14
  7573                           	
  7574  0A3D                     l5674:	
  7575  0A3D  09F0               	comf	(___awmod@divisor),f
  7576  0A3E  09F1               	comf	(___awmod@divisor+1),f
  7577  0A3F  0AF0               	incf	(___awmod@divisor),f
  7578  0A40  1903               	skipnz
  7579  0A41  0AF1               	incf	(___awmod@divisor+1),f
  7580  0A42  2A43               	goto	l5676
  7581                           	
  7582  0A43                     l3089:	
  7583                           	line	15
  7584                           	
  7585  0A43                     l5676:	
  7586  0A43  0871               	movf	(___awmod@divisor+1),w
  7587  0A44  0470               	iorwf	(___awmod@divisor),w
  7588  0A45  1903               	skipnz
  7589  0A46  2A48               	goto	u3241
  7590  0A47  2A49               	goto	u3240
  7591  0A48                     u3241:
  7592  0A48  2A7F               	goto	l5694
  7593  0A49                     u3240:
  7594                           	line	16
  7595                           	
  7596  0A49                     l5678:	
  7597  0A49  01F5               	clrf	(___awmod@counter)
  7598  0A4A  1403               	bsf	status,0
  7599  0A4B  0DF5               	rlf	(___awmod@counter),f
  7600                           	line	17
  7601  0A4C  2A59               	goto	l5684
  7602                           	
  7603  0A4D                     l3092:	
  7604                           	line	18
  7605                           	
  7606  0A4D                     l5680:	
  7607  0A4D  3001               	movlw	01h
  7608                           	
  7609  0A4E                     u3255:
  7610  0A4E  1003               	clrc
  7611  0A4F  0DF0               	rlf	(___awmod@divisor),f
  7612  0A50  0DF1               	rlf	(___awmod@divisor+1),f
  7613  0A51  3EFF               	addlw	-1
  7614  0A52  1D03               	skipz
  7615  0A53  2A4E               	goto	u3255
  7616                           	line	19
  7617                           	
  7618  0A54                     l5682:	
  7619  0A54  3001               	movlw	(01h)
  7620  0A55  00F4               	movwf	(??___awmod+0)+0
  7621  0A56  0874               	movf	(??___awmod+0)+0,w
  7622  0A57  07F5               	addwf	(___awmod@counter),f
  7623  0A58  2A59               	goto	l5684
  7624                           	line	20
  7625                           	
  7626  0A59                     l3091:	
  7627                           	line	17
  7628                           	
  7629  0A59                     l5684:	
  7630  0A59  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  7631  0A5A  2A5C               	goto	u3261
  7632  0A5B  2A5D               	goto	u3260
  7633  0A5C                     u3261:
  7634  0A5C  2A4D               	goto	l5680
  7635  0A5D                     u3260:
  7636  0A5D  2A5F               	goto	l5686
  7637                           	
  7638  0A5E                     l3093:	
  7639  0A5E  2A5F               	goto	l5686
  7640                           	line	21
  7641                           	
  7642  0A5F                     l3094:	
  7643                           	line	22
  7644                           	
  7645  0A5F                     l5686:	
  7646  0A5F  0871               	movf	(___awmod@divisor+1),w
  7647  0A60  0273               	subwf	(___awmod@dividend+1),w
  7648  0A61  1D03               	skipz
  7649  0A62  2A65               	goto	u3275
  7650  0A63  0870               	movf	(___awmod@divisor),w
  7651  0A64  0272               	subwf	(___awmod@dividend),w
  7652  0A65                     u3275:
  7653  0A65  1C03               	skipc
  7654  0A66  2A68               	goto	u3271
  7655  0A67  2A69               	goto	u3270
  7656  0A68                     u3271:
  7657  0A68  2A70               	goto	l5690
  7658  0A69                     u3270:
  7659                           	line	23
  7660                           	
  7661  0A69                     l5688:	
  7662  0A69  0870               	movf	(___awmod@divisor),w
  7663  0A6A  02F2               	subwf	(___awmod@dividend),f
  7664  0A6B  0871               	movf	(___awmod@divisor+1),w
  7665  0A6C  1C03               	skipc
  7666  0A6D  03F3               	decf	(___awmod@dividend+1),f
  7667  0A6E  02F3               	subwf	(___awmod@dividend+1),f
  7668  0A6F  2A70               	goto	l5690
  7669                           	
  7670  0A70                     l3095:	
  7671                           	line	24
  7672                           	
  7673  0A70                     l5690:	
  7674  0A70  3001               	movlw	01h
  7675                           	
  7676  0A71                     u3285:
  7677  0A71  1003               	clrc
  7678  0A72  0CF1               	rrf	(___awmod@divisor+1),f
  7679  0A73  0CF0               	rrf	(___awmod@divisor),f
  7680  0A74  3EFF               	addlw	-1
  7681  0A75  1D03               	skipz
  7682  0A76  2A71               	goto	u3285
  7683                           	line	25
  7684                           	
  7685  0A77                     l5692:	
  7686  0A77  3001               	movlw	low(01h)
  7687  0A78  02F5               	subwf	(___awmod@counter),f
  7688  0A79  1D03               	btfss	status,2
  7689  0A7A  2A7C               	goto	u3291
  7690  0A7B  2A7D               	goto	u3290
  7691  0A7C                     u3291:
  7692  0A7C  2A5F               	goto	l5686
  7693  0A7D                     u3290:
  7694  0A7D  2A7F               	goto	l5694
  7695                           	
  7696  0A7E                     l3096:	
  7697  0A7E  2A7F               	goto	l5694
  7698                           	line	26
  7699                           	
  7700  0A7F                     l3090:	
  7701                           	line	27
  7702                           	
  7703  0A7F                     l5694:	
  7704  0A7F  0876               	movf	(___awmod@sign),w
  7705  0A80  1D03               	skipz
  7706  0A81  2A83               	goto	u3300
  7707  0A82  2A89               	goto	l5698
  7708  0A83                     u3300:
  7709                           	line	28
  7710                           	
  7711  0A83                     l5696:	
  7712  0A83  09F2               	comf	(___awmod@dividend),f
  7713  0A84  09F3               	comf	(___awmod@dividend+1),f
  7714  0A85  0AF2               	incf	(___awmod@dividend),f
  7715  0A86  1903               	skipnz
  7716  0A87  0AF3               	incf	(___awmod@dividend+1),f
  7717  0A88  2A89               	goto	l5698
  7718                           	
  7719  0A89                     l3097:	
  7720                           	line	29
  7721                           	
  7722  0A89                     l5698:	
  7723  0A89  0873               	movf	(___awmod@dividend+1),w
  7724  0A8A  01F1               	clrf	(?___awmod+1)
  7725  0A8B  07F1               	addwf	(?___awmod+1)
  7726  0A8C  0872               	movf	(___awmod@dividend),w
  7727  0A8D  01F0               	clrf	(?___awmod)
  7728  0A8E  07F0               	addwf	(?___awmod)
  7729                           
  7730  0A8F  2A90               	goto	l3098
  7731                           	
  7732  0A90                     l5700:	
  7733                           	line	30
  7734                           	
  7735  0A90                     l3098:	
  7736  0A90  0008               	return
  7737                           	opt stack 0
  7738                           GLOBAL	__end_of___awmod
  7739  0A91                     	__end_of___awmod:
  7740 ;; =============== function ___awmod ends ============
  7741                           
  7742                           	signat	___awmod,8314
  7743                           	global	___ftge
  7744                           psect	text815,local,class=CODE,delta=2
  7745                           global __ptext815
  7746  0A91                     __ptext815:
  7747                           
  7748 ;; *************** function ___ftge *****************
  7749 ;; Defined at:
  7750 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  ff1             3    0[COMMON] float 
  7753 ;;  ff2             3    3[COMMON] float 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;		None               void
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7765 ;;      Params:         6       0       0       0       0
  7766 ;;      Locals:         0       0       0       0       0
  7767 ;;      Temps:          6       0       0       0       0
  7768 ;;      Totals:        12       0       0       0       0
  7769 ;;Total ram usage:       12 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_main
  7775 ;;		_pow
  7776 ;;		_exp
  7777 ;;		_floor
  7778 ;;		_log
  7779 ;;		_ldexp
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           psect	text815
  7783                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  7784                           	line	5
  7785                           	global	__size_of___ftge
  7786  006C                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  7787                           	
  7788  0A91                     ___ftge:	
  7789                           	opt	stack 7
  7790                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7791                           	line	6
  7792                           	
  7793  0A91                     l5648:	
  7794  0A91  1FF2               	btfss	(___ftge@ff1+2),(23)&7
  7795  0A92  2A94               	goto	u3171
  7796  0A93  2A95               	goto	u3170
  7797  0A94                     u3171:
  7798  0A94  2ABB               	goto	l5652
  7799  0A95                     u3170:
  7800                           	line	7
  7801                           	
  7802  0A95                     l5650:	
  7803  0A95  3000               	movlw	0
  7804  0A96  00F6               	movwf	((??___ftge+0)+0)
  7805  0A97  3000               	movlw	0
  7806  0A98  00F7               	movwf	((??___ftge+0)+0+1)
  7807  0A99  3080               	movlw	080h
  7808  0A9A  00F8               	movwf	((??___ftge+0)+0+2)
  7809  0A9B  0970               	comf	(___ftge@ff1),w
  7810  0A9C  00F9               	movwf	(??___ftge+3)+0
  7811  0A9D  0971               	comf	(___ftge@ff1+1),w
  7812  0A9E  00FA               	movwf	((??___ftge+3)+0+1)
  7813  0A9F  0972               	comf	(___ftge@ff1+2),w
  7814  0AA0  00FB               	movwf	((??___ftge+3)+0+2)
  7815  0AA1  0AF9               	incf	(??___ftge+3)+0,f
  7816  0AA2  1903               	skipnz
  7817  0AA3  0AFA               	incf	((??___ftge+3)+0+1),f
  7818  0AA4  1903               	skipnz
  7819  0AA5  0AFB               	incf	((??___ftge+3)+0+2),f
  7820  0AA6  0879               	movf	0+(??___ftge+3)+0,w
  7821  0AA7  07F6               	addwf	(??___ftge+0)+0,f
  7822  0AA8  087A               	movf	1+(??___ftge+3)+0,w
  7823  0AA9  1803               	skipnc
  7824  0AAA  0F7A               	incfsz	1+(??___ftge+3)+0,w
  7825  0AAB  2AAD               	goto	u3181
  7826  0AAC  2AAE               	goto	u3182
  7827  0AAD                     u3181:
  7828  0AAD  07F7               	addwf	(??___ftge+0)+1,f
  7829                           	
  7830  0AAE                     u3182:
  7831  0AAE  087B               	movf	2+(??___ftge+3)+0,w
  7832  0AAF  1803               	skipnc
  7833  0AB0  0F7B               	incfsz	2+(??___ftge+3)+0,w
  7834  0AB1  2AB3               	goto	u3183
  7835  0AB2  2AB4               	goto	u3184
  7836  0AB3                     u3183:
  7837  0AB3  07F8               	addwf	(??___ftge+0)+2,f
  7838                           	
  7839  0AB4                     u3184:
  7840  0AB4  0876               	movf	0+(??___ftge+0)+0,w
  7841  0AB5  00F0               	movwf	(___ftge@ff1)
  7842  0AB6  0877               	movf	1+(??___ftge+0)+0,w
  7843  0AB7  00F1               	movwf	(___ftge@ff1+1)
  7844  0AB8  0878               	movf	2+(??___ftge+0)+0,w
  7845  0AB9  00F2               	movwf	(___ftge@ff1+2)
  7846  0ABA  2ABB               	goto	l5652
  7847                           	
  7848  0ABB                     l3047:	
  7849                           	line	8
  7850                           	
  7851  0ABB                     l5652:	
  7852  0ABB  1FF5               	btfss	(___ftge@ff2+2),(23)&7
  7853  0ABC  2ABE               	goto	u3191
  7854  0ABD  2ABF               	goto	u3190
  7855  0ABE                     u3191:
  7856  0ABE  2AE5               	goto	l5656
  7857  0ABF                     u3190:
  7858                           	line	9
  7859                           	
  7860  0ABF                     l5654:	
  7861  0ABF  3000               	movlw	0
  7862  0AC0  00F6               	movwf	((??___ftge+0)+0)
  7863  0AC1  3000               	movlw	0
  7864  0AC2  00F7               	movwf	((??___ftge+0)+0+1)
  7865  0AC3  3080               	movlw	080h
  7866  0AC4  00F8               	movwf	((??___ftge+0)+0+2)
  7867  0AC5  0973               	comf	(___ftge@ff2),w
  7868  0AC6  00F9               	movwf	(??___ftge+3)+0
  7869  0AC7  0974               	comf	(___ftge@ff2+1),w
  7870  0AC8  00FA               	movwf	((??___ftge+3)+0+1)
  7871  0AC9  0975               	comf	(___ftge@ff2+2),w
  7872  0ACA  00FB               	movwf	((??___ftge+3)+0+2)
  7873  0ACB  0AF9               	incf	(??___ftge+3)+0,f
  7874  0ACC  1903               	skipnz
  7875  0ACD  0AFA               	incf	((??___ftge+3)+0+1),f
  7876  0ACE  1903               	skipnz
  7877  0ACF  0AFB               	incf	((??___ftge+3)+0+2),f
  7878  0AD0  0879               	movf	0+(??___ftge+3)+0,w
  7879  0AD1  07F6               	addwf	(??___ftge+0)+0,f
  7880  0AD2  087A               	movf	1+(??___ftge+3)+0,w
  7881  0AD3  1803               	skipnc
  7882  0AD4  0F7A               	incfsz	1+(??___ftge+3)+0,w
  7883  0AD5  2AD7               	goto	u3201
  7884  0AD6  2AD8               	goto	u3202
  7885  0AD7                     u3201:
  7886  0AD7  07F7               	addwf	(??___ftge+0)+1,f
  7887                           	
  7888  0AD8                     u3202:
  7889  0AD8  087B               	movf	2+(??___ftge+3)+0,w
  7890  0AD9  1803               	skipnc
  7891  0ADA  0F7B               	incfsz	2+(??___ftge+3)+0,w
  7892  0ADB  2ADD               	goto	u3203
  7893  0ADC  2ADE               	goto	u3204
  7894  0ADD                     u3203:
  7895  0ADD  07F8               	addwf	(??___ftge+0)+2,f
  7896                           	
  7897  0ADE                     u3204:
  7898  0ADE  0876               	movf	0+(??___ftge+0)+0,w
  7899  0ADF  00F3               	movwf	(___ftge@ff2)
  7900  0AE0  0877               	movf	1+(??___ftge+0)+0,w
  7901  0AE1  00F4               	movwf	(___ftge@ff2+1)
  7902  0AE2  0878               	movf	2+(??___ftge+0)+0,w
  7903  0AE3  00F5               	movwf	(___ftge@ff2+2)
  7904  0AE4  2AE5               	goto	l5656
  7905                           	
  7906  0AE5                     l3048:	
  7907                           	line	10
  7908                           	
  7909  0AE5                     l5656:	
  7910  0AE5  3080               	movlw	080h
  7911  0AE6  06F2               	xorwf	(___ftge@ff1+2),f
  7912                           	line	11
  7913                           	
  7914  0AE7                     l5658:	
  7915  0AE7  3080               	movlw	080h
  7916  0AE8  06F5               	xorwf	(___ftge@ff2+2),f
  7917                           	line	12
  7918                           	
  7919  0AE9                     l5660:	
  7920  0AE9  0875               	movf	(___ftge@ff2+2),w
  7921  0AEA  0272               	subwf	(___ftge@ff1+2),w
  7922  0AEB  1D03               	skipz
  7923  0AEC  2AF3               	goto	u3215
  7924  0AED  0874               	movf	(___ftge@ff2+1),w
  7925  0AEE  0271               	subwf	(___ftge@ff1+1),w
  7926  0AEF  1D03               	skipz
  7927  0AF0  2AF3               	goto	u3215
  7928  0AF1  0873               	movf	(___ftge@ff2),w
  7929  0AF2  0270               	subwf	(___ftge@ff1),w
  7930  0AF3                     u3215:
  7931  0AF3  1803               	skipnc
  7932  0AF4  2AF6               	goto	u3211
  7933  0AF5  2AF7               	goto	u3210
  7934  0AF6                     u3211:
  7935  0AF6  2AF9               	goto	l5664
  7936  0AF7                     u3210:
  7937                           	
  7938  0AF7                     l5662:	
  7939  0AF7  1003               	clrc
  7940                           	
  7941  0AF8  2AFC               	goto	l3049
  7942                           	
  7943  0AF9                     l5442:	
  7944                           	
  7945  0AF9                     l5664:	
  7946  0AF9  1403               	setc
  7947                           	
  7948  0AFA  2AFC               	goto	l3049
  7949                           	
  7950  0AFB                     l5444:	
  7951  0AFB  2AFC               	goto	l3049
  7952                           	
  7953  0AFC                     l5666:	
  7954                           	line	13
  7955                           	
  7956  0AFC                     l3049:	
  7957  0AFC  0008               	return
  7958                           	opt stack 0
  7959                           GLOBAL	__end_of___ftge
  7960  0AFD                     	__end_of___ftge:
  7961 ;; =============== function ___ftge ends ============
  7962                           
  7963                           	signat	___ftge,8312
  7964                           	global	___ftneg
  7965                           psect	text816,local,class=CODE,delta=2
  7966                           global __ptext816
  7967  16B0                     __ptext816:
  7968                           
  7969 ;; *************** function ___ftneg *****************
  7970 ;; Defined at:
  7971 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  f1              3    8[COMMON] float 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;		None
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  3    8[COMMON] float 
  7978 ;; Registers used:
  7979 ;;		wreg
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7985 ;;      Params:         3       0       0       0       0
  7986 ;;      Locals:         0       0       0       0       0
  7987 ;;      Temps:          0       0       0       0       0
  7988 ;;      Totals:         3       0       0       0       0
  7989 ;;Total ram usage:        3 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_ftoa
  7995 ;;		_pow
  7996 ;;		_exp
  7997 ;;		_ldexp
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           psect	text816
  8001                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  8002                           	line	16
  8003                           	global	__size_of___ftneg
  8004  000C                     	__size_of___ftneg	equ	__end_of___ftneg-___ftneg
  8005                           	
  8006  16B0                     ___ftneg:	
  8007                           	opt	stack 3
  8008                           ; Regs used in ___ftneg: [wreg]
  8009                           	line	17
  8010                           	
  8011  16B0                     l5640:	
  8012  16B0  087A               	movf	(___ftneg@f1+2),w
  8013  16B1  0479               	iorwf	(___ftneg@f1+1),w
  8014  16B2  0478               	iorwf	(___ftneg@f1),w
  8015  16B3  1903               	skipnz
  8016  16B4  2EB6               	goto	u3161
  8017  16B5  2EB7               	goto	u3160
  8018  16B6                     u3161:
  8019  16B6  2EBA               	goto	l5644
  8020  16B7                     u3160:
  8021                           	line	18
  8022                           	
  8023  16B7                     l5642:	
  8024  16B7  3080               	movlw	080h
  8025  16B8  06FA               	xorwf	(___ftneg@f1+2),f
  8026  16B9  2EBA               	goto	l5644
  8027                           	
  8028  16BA                     l3043:	
  8029                           	line	19
  8030                           	
  8031  16BA                     l5644:	
  8032  16BA  2EBB               	goto	l3044
  8033                           	
  8034  16BB                     l5646:	
  8035                           	line	20
  8036                           	
  8037  16BB                     l3044:	
  8038  16BB  0008               	return
  8039                           	opt stack 0
  8040                           GLOBAL	__end_of___ftneg
  8041  16BC                     	__end_of___ftneg:
  8042 ;; =============== function ___ftneg ends ============
  8043                           
  8044                           	signat	___ftneg,4219
  8045                           	global	___awdiv
  8046                           psect	text817,local,class=CODE,delta=2
  8047                           global __ptext817
  8048  0AFD                     __ptext817:
  8049                           
  8050 ;; *************** function ___awdiv *****************
  8051 ;; Defined at:
  8052 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  divisor         2    0[COMMON] int 
  8055 ;;  dividend        2    2[COMMON] int 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  quotient        2    7[COMMON] int 
  8058 ;;  sign            1    6[COMMON] unsigned char 
  8059 ;;  counter         1    5[COMMON] unsigned char 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  2    0[COMMON] int 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8069 ;;      Params:         4       0       0       0       0
  8070 ;;      Locals:         4       0       0       0       0
  8071 ;;      Temps:          1       0       0       0       0
  8072 ;;      Totals:         9       0       0       0       0
  8073 ;;Total ram usage:        9 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_intToStr
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           psect	text817
  8082                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  8083                           	line	5
  8084                           	global	__size_of___awdiv
  8085  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  8086                           	
  8087  0AFD                     ___awdiv:	
  8088                           	opt	stack 5
  8089                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8090                           	line	9
  8091                           	
  8092  0AFD                     l5600:	
  8093  0AFD  01F6               	clrf	(___awdiv@sign)
  8094                           	line	10
  8095  0AFE  1FF1               	btfss	(___awdiv@divisor+1),7
  8096  0AFF  2B01               	goto	u3061
  8097  0B00  2B02               	goto	u3060
  8098  0B01                     u3061:
  8099  0B01  2B0B               	goto	l5604
  8100  0B02                     u3060:
  8101                           	line	11
  8102                           	
  8103  0B02                     l5602:	
  8104  0B02  09F0               	comf	(___awdiv@divisor),f
  8105  0B03  09F1               	comf	(___awdiv@divisor+1),f
  8106  0B04  0AF0               	incf	(___awdiv@divisor),f
  8107  0B05  1903               	skipnz
  8108  0B06  0AF1               	incf	(___awdiv@divisor+1),f
  8109                           	line	12
  8110  0B07  01F6               	clrf	(___awdiv@sign)
  8111  0B08  1403               	bsf	status,0
  8112  0B09  0DF6               	rlf	(___awdiv@sign),f
  8113  0B0A  2B0B               	goto	l5604
  8114                           	line	13
  8115                           	
  8116  0B0B                     l3020:	
  8117                           	line	14
  8118                           	
  8119  0B0B                     l5604:	
  8120  0B0B  1FF3               	btfss	(___awdiv@dividend+1),7
  8121  0B0C  2B0E               	goto	u3071
  8122  0B0D  2B0F               	goto	u3070
  8123  0B0E                     u3071:
  8124  0B0E  2B19               	goto	l5610
  8125  0B0F                     u3070:
  8126                           	line	15
  8127                           	
  8128  0B0F                     l5606:	
  8129  0B0F  09F2               	comf	(___awdiv@dividend),f
  8130  0B10  09F3               	comf	(___awdiv@dividend+1),f
  8131  0B11  0AF2               	incf	(___awdiv@dividend),f
  8132  0B12  1903               	skipnz
  8133  0B13  0AF3               	incf	(___awdiv@dividend+1),f
  8134                           	line	16
  8135                           	
  8136  0B14                     l5608:	
  8137  0B14  3001               	movlw	(01h)
  8138  0B15  00F4               	movwf	(??___awdiv+0)+0
  8139  0B16  0874               	movf	(??___awdiv+0)+0,w
  8140  0B17  06F6               	xorwf	(___awdiv@sign),f
  8141  0B18  2B19               	goto	l5610
  8142                           	line	17
  8143                           	
  8144  0B19                     l3021:	
  8145                           	line	18
  8146                           	
  8147  0B19                     l5610:	
  8148  0B19  01F7               	clrf	(___awdiv@quotient)
  8149  0B1A  01F8               	clrf	(___awdiv@quotient+1)
  8150                           	line	19
  8151                           	
  8152  0B1B                     l5612:	
  8153  0B1B  0871               	movf	(___awdiv@divisor+1),w
  8154  0B1C  0470               	iorwf	(___awdiv@divisor),w
  8155  0B1D  1903               	skipnz
  8156  0B1E  2B20               	goto	u3081
  8157  0B1F  2B21               	goto	u3080
  8158  0B20                     u3081:
  8159  0B20  2B5F               	goto	l5632
  8160  0B21                     u3080:
  8161                           	line	20
  8162                           	
  8163  0B21                     l5614:	
  8164  0B21  01F5               	clrf	(___awdiv@counter)
  8165  0B22  1403               	bsf	status,0
  8166  0B23  0DF5               	rlf	(___awdiv@counter),f
  8167                           	line	21
  8168  0B24  2B31               	goto	l5620
  8169                           	
  8170  0B25                     l3024:	
  8171                           	line	22
  8172                           	
  8173  0B25                     l5616:	
  8174  0B25  3001               	movlw	01h
  8175                           	
  8176  0B26                     u3095:
  8177  0B26  1003               	clrc
  8178  0B27  0DF0               	rlf	(___awdiv@divisor),f
  8179  0B28  0DF1               	rlf	(___awdiv@divisor+1),f
  8180  0B29  3EFF               	addlw	-1
  8181  0B2A  1D03               	skipz
  8182  0B2B  2B26               	goto	u3095
  8183                           	line	23
  8184                           	
  8185  0B2C                     l5618:	
  8186  0B2C  3001               	movlw	(01h)
  8187  0B2D  00F4               	movwf	(??___awdiv+0)+0
  8188  0B2E  0874               	movf	(??___awdiv+0)+0,w
  8189  0B2F  07F5               	addwf	(___awdiv@counter),f
  8190  0B30  2B31               	goto	l5620
  8191                           	line	24
  8192                           	
  8193  0B31                     l3023:	
  8194                           	line	21
  8195                           	
  8196  0B31                     l5620:	
  8197  0B31  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  8198  0B32  2B34               	goto	u3101
  8199  0B33  2B35               	goto	u3100
  8200  0B34                     u3101:
  8201  0B34  2B25               	goto	l5616
  8202  0B35                     u3100:
  8203  0B35  2B37               	goto	l5622
  8204                           	
  8205  0B36                     l3025:	
  8206  0B36  2B37               	goto	l5622
  8207                           	line	25
  8208                           	
  8209  0B37                     l3026:	
  8210                           	line	26
  8211                           	
  8212  0B37                     l5622:	
  8213  0B37  3001               	movlw	01h
  8214                           	
  8215  0B38                     u3115:
  8216  0B38  1003               	clrc
  8217  0B39  0DF7               	rlf	(___awdiv@quotient),f
  8218  0B3A  0DF8               	rlf	(___awdiv@quotient+1),f
  8219  0B3B  3EFF               	addlw	-1
  8220  0B3C  1D03               	skipz
  8221  0B3D  2B38               	goto	u3115
  8222                           	line	27
  8223  0B3E  0871               	movf	(___awdiv@divisor+1),w
  8224  0B3F  0273               	subwf	(___awdiv@dividend+1),w
  8225  0B40  1D03               	skipz
  8226  0B41  2B44               	goto	u3125
  8227  0B42  0870               	movf	(___awdiv@divisor),w
  8228  0B43  0272               	subwf	(___awdiv@dividend),w
  8229  0B44                     u3125:
  8230  0B44  1C03               	skipc
  8231  0B45  2B47               	goto	u3121
  8232  0B46  2B48               	goto	u3120
  8233  0B47                     u3121:
  8234  0B47  2B50               	goto	l5628
  8235  0B48                     u3120:
  8236                           	line	28
  8237                           	
  8238  0B48                     l5624:	
  8239  0B48  0870               	movf	(___awdiv@divisor),w
  8240  0B49  02F2               	subwf	(___awdiv@dividend),f
  8241  0B4A  0871               	movf	(___awdiv@divisor+1),w
  8242  0B4B  1C03               	skipc
  8243  0B4C  03F3               	decf	(___awdiv@dividend+1),f
  8244  0B4D  02F3               	subwf	(___awdiv@dividend+1),f
  8245                           	line	29
  8246                           	
  8247  0B4E                     l5626:	
  8248  0B4E  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  8249  0B4F  2B50               	goto	l5628
  8250                           	line	30
  8251                           	
  8252  0B50                     l3027:	
  8253                           	line	31
  8254                           	
  8255  0B50                     l5628:	
  8256  0B50  3001               	movlw	01h
  8257                           	
  8258  0B51                     u3135:
  8259  0B51  1003               	clrc
  8260  0B52  0CF1               	rrf	(___awdiv@divisor+1),f
  8261  0B53  0CF0               	rrf	(___awdiv@divisor),f
  8262  0B54  3EFF               	addlw	-1
  8263  0B55  1D03               	skipz
  8264  0B56  2B51               	goto	u3135
  8265                           	line	32
  8266                           	
  8267  0B57                     l5630:	
  8268  0B57  3001               	movlw	low(01h)
  8269  0B58  02F5               	subwf	(___awdiv@counter),f
  8270  0B59  1D03               	btfss	status,2
  8271  0B5A  2B5C               	goto	u3141
  8272  0B5B  2B5D               	goto	u3140
  8273  0B5C                     u3141:
  8274  0B5C  2B37               	goto	l5622
  8275  0B5D                     u3140:
  8276  0B5D  2B5F               	goto	l5632
  8277                           	
  8278  0B5E                     l3028:	
  8279  0B5E  2B5F               	goto	l5632
  8280                           	line	33
  8281                           	
  8282  0B5F                     l3022:	
  8283                           	line	34
  8284                           	
  8285  0B5F                     l5632:	
  8286  0B5F  0876               	movf	(___awdiv@sign),w
  8287  0B60  1D03               	skipz
  8288  0B61  2B63               	goto	u3150
  8289  0B62  2B69               	goto	l5636
  8290  0B63                     u3150:
  8291                           	line	35
  8292                           	
  8293  0B63                     l5634:	
  8294  0B63  09F7               	comf	(___awdiv@quotient),f
  8295  0B64  09F8               	comf	(___awdiv@quotient+1),f
  8296  0B65  0AF7               	incf	(___awdiv@quotient),f
  8297  0B66  1903               	skipnz
  8298  0B67  0AF8               	incf	(___awdiv@quotient+1),f
  8299  0B68  2B69               	goto	l5636
  8300                           	
  8301  0B69                     l3029:	
  8302                           	line	36
  8303                           	
  8304  0B69                     l5636:	
  8305  0B69  0878               	movf	(___awdiv@quotient+1),w
  8306  0B6A  01F1               	clrf	(?___awdiv+1)
  8307  0B6B  07F1               	addwf	(?___awdiv+1)
  8308  0B6C  0877               	movf	(___awdiv@quotient),w
  8309  0B6D  01F0               	clrf	(?___awdiv)
  8310  0B6E  07F0               	addwf	(?___awdiv)
  8311                           
  8312  0B6F  2B70               	goto	l3030
  8313                           	
  8314  0B70                     l5638:	
  8315                           	line	37
  8316                           	
  8317  0B70                     l3030:	
  8318  0B70  0008               	return
  8319                           	opt stack 0
  8320                           GLOBAL	__end_of___awdiv
  8321  0B71                     	__end_of___awdiv:
  8322 ;; =============== function ___awdiv ends ============
  8323                           
  8324                           	signat	___awdiv,8314
  8325                           	global	___fttol
  8326                           psect	text818,local,class=CODE,delta=2
  8327                           global __ptext818
  8328  0CF3                     __ptext818:
  8329                           
  8330 ;; *************** function ___fttol *****************
  8331 ;; Defined at:
  8332 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  f1              3    0[COMMON] float 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  lval            4    9[COMMON] unsigned long 
  8337 ;;  exp1            1   13[COMMON] unsigned char 
  8338 ;;  sign1           1    8[COMMON] unsigned char 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  4    0[COMMON] long 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8348 ;;      Params:         4       0       0       0       0
  8349 ;;      Locals:         6       0       0       0       0
  8350 ;;      Temps:          4       0       0       0       0
  8351 ;;      Totals:        14       0       0       0       0
  8352 ;;Total ram usage:       14 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_ftoa
  8358 ;;		_pow
  8359 ;;		_exp
  8360 ;;		_floor
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           psect	text818
  8364                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8365                           	line	45
  8366                           	global	__size_of___fttol
  8367  00A4                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  8368                           	
  8369  0CF3                     ___fttol:	
  8370                           	opt	stack 4
  8371                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8372                           	line	49
  8373                           	
  8374  0CF3                     l5548:	
  8375  0CF3  0870               	movf	(___fttol@f1),w
  8376  0CF4  00F4               	movwf	((??___fttol+0)+0)
  8377  0CF5  0871               	movf	(___fttol@f1+1),w
  8378  0CF6  00F5               	movwf	((??___fttol+0)+0+1)
  8379  0CF7  0872               	movf	(___fttol@f1+2),w
  8380  0CF8  00F6               	movwf	((??___fttol+0)+0+2)
  8381  0CF9  1003               	clrc
  8382  0CFA  0D75               	rlf	(??___fttol+0)+1,w
  8383  0CFB  0D76               	rlf	(??___fttol+0)+2,w
  8384  0CFC  00F7               	movwf	(??___fttol+3)+0
  8385  0CFD  0877               	movf	(??___fttol+3)+0,w
  8386  0CFE  00FD               	movwf	(___fttol@exp1)
  8387  0CFF  08FD               	movf	((___fttol@exp1)),f
  8388  0D00  1D03               	skipz
  8389  0D01  2D03               	goto	u2951
  8390  0D02  2D04               	goto	u2950
  8391  0D03                     u2951:
  8392  0D03  2D0E               	goto	l5554
  8393  0D04                     u2950:
  8394                           	line	50
  8395                           	
  8396  0D04                     l5550:	
  8397  0D04  3000               	movlw	0
  8398  0D05  00F3               	movwf	(?___fttol+3)
  8399  0D06  3000               	movlw	0
  8400  0D07  00F2               	movwf	(?___fttol+2)
  8401  0D08  3000               	movlw	0
  8402  0D09  00F1               	movwf	(?___fttol+1)
  8403  0D0A  3000               	movlw	0
  8404  0D0B  00F0               	movwf	(?___fttol)
  8405                           
  8406  0D0C  2D96               	goto	l2990
  8407                           	
  8408  0D0D                     l5552:	
  8409  0D0D  2D96               	goto	l2990
  8410                           	
  8411  0D0E                     l2989:	
  8412                           	line	51
  8413                           	
  8414  0D0E                     l5554:	
  8415  0D0E  0870               	movf	(___fttol@f1),w
  8416  0D0F  00F4               	movwf	((??___fttol+0)+0)
  8417  0D10  0871               	movf	(___fttol@f1+1),w
  8418  0D11  00F5               	movwf	((??___fttol+0)+0+1)
  8419  0D12  0872               	movf	(___fttol@f1+2),w
  8420  0D13  00F6               	movwf	((??___fttol+0)+0+2)
  8421  0D14  3017               	movlw	017h
  8422  0D15                     u2965:
  8423  0D15  1003               	clrc
  8424  0D16  0CF6               	rrf	(??___fttol+0)+2,f
  8425  0D17  0CF5               	rrf	(??___fttol+0)+1,f
  8426  0D18  0CF4               	rrf	(??___fttol+0)+0,f
  8427  0D19                     u2960:
  8428  0D19  3EFF               	addlw	-1
  8429  0D1A  1D03               	skipz
  8430  0D1B  2D15               	goto	u2965
  8431  0D1C  0874               	movf	0+(??___fttol+0)+0,w
  8432  0D1D  00F7               	movwf	(??___fttol+3)+0
  8433  0D1E  0877               	movf	(??___fttol+3)+0,w
  8434  0D1F  00F8               	movwf	(___fttol@sign1)
  8435                           	line	52
  8436                           	
  8437  0D20                     l5556:	
  8438  0D20  17F1               	bsf	(___fttol@f1)+(15/8),(15)&7
  8439                           	line	53
  8440                           	
  8441  0D21                     l5558:	
  8442  0D21  30FF               	movlw	0FFh
  8443  0D22  05F0               	andwf	(___fttol@f1),f
  8444  0D23  30FF               	movlw	0FFh
  8445  0D24  05F1               	andwf	(___fttol@f1+1),f
  8446  0D25  3000               	movlw	0
  8447  0D26  05F2               	andwf	(___fttol@f1+2),f
  8448                           	line	54
  8449                           	
  8450  0D27                     l5560:	
  8451  0D27  0870               	movf	(___fttol@f1),w
  8452  0D28  00F9               	movwf	(___fttol@lval)
  8453  0D29  0871               	movf	(___fttol@f1+1),w
  8454  0D2A  00FA               	movwf	((___fttol@lval))+1
  8455  0D2B  0872               	movf	(___fttol@f1+2),w
  8456  0D2C  00FB               	movwf	((___fttol@lval))+2
  8457  0D2D  01FC               	clrf	((___fttol@lval))+3
  8458                           	line	55
  8459                           	
  8460  0D2E                     l5562:	
  8461  0D2E  308E               	movlw	low(08Eh)
  8462  0D2F  02FD               	subwf	(___fttol@exp1),f
  8463                           	line	56
  8464                           	
  8465  0D30                     l5564:	
  8466  0D30  1FFD               	btfss	(___fttol@exp1),7
  8467  0D31  2D33               	goto	u2971
  8468  0D32  2D34               	goto	u2970
  8469  0D33                     u2971:
  8470  0D33  2D59               	goto	l5574
  8471  0D34                     u2970:
  8472                           	line	57
  8473                           	
  8474  0D34                     l5566:	
  8475  0D34  087D               	movf	(___fttol@exp1),w
  8476  0D35  3A80               	xorlw	80h
  8477  0D36  3E8F               	addlw	-((-15)^80h)
  8478  0D37  1803               	skipnc
  8479  0D38  2D3A               	goto	u2981
  8480  0D39  2D3B               	goto	u2980
  8481  0D3A                     u2981:
  8482  0D3A  2D46               	goto	l5572
  8483  0D3B                     u2980:
  8484                           	line	58
  8485                           	
  8486  0D3B                     l5568:	
  8487  0D3B  3000               	movlw	0
  8488  0D3C  00F3               	movwf	(?___fttol+3)
  8489  0D3D  3000               	movlw	0
  8490  0D3E  00F2               	movwf	(?___fttol+2)
  8491  0D3F  3000               	movlw	0
  8492  0D40  00F1               	movwf	(?___fttol+1)
  8493  0D41  3000               	movlw	0
  8494  0D42  00F0               	movwf	(?___fttol)
  8495                           
  8496  0D43  2D96               	goto	l2990
  8497                           	
  8498  0D44                     l5570:	
  8499  0D44  2D96               	goto	l2990
  8500                           	
  8501  0D45                     l2992:	
  8502  0D45  2D46               	goto	l5572
  8503                           	line	59
  8504                           	
  8505  0D46                     l2993:	
  8506                           	line	60
  8507                           	
  8508  0D46                     l5572:	
  8509  0D46  3001               	movlw	01h
  8510  0D47                     u2995:
  8511  0D47  1003               	clrc
  8512  0D48  0CFC               	rrf	(___fttol@lval+3),f
  8513  0D49  0CFB               	rrf	(___fttol@lval+2),f
  8514  0D4A  0CFA               	rrf	(___fttol@lval+1),f
  8515  0D4B  0CF9               	rrf	(___fttol@lval),f
  8516  0D4C  3EFF               	addlw	-1
  8517  0D4D  1D03               	skipz
  8518  0D4E  2D47               	goto	u2995
  8519                           
  8520                           	line	61
  8521  0D4F  3001               	movlw	(01h)
  8522  0D50  00F4               	movwf	(??___fttol+0)+0
  8523  0D51  0874               	movf	(??___fttol+0)+0,w
  8524  0D52  07FD               	addwf	(___fttol@exp1),f
  8525  0D53  1D03               	btfss	status,2
  8526  0D54  2D56               	goto	u3001
  8527  0D55  2D57               	goto	u3000
  8528  0D56                     u3001:
  8529  0D56  2D46               	goto	l5572
  8530  0D57                     u3000:
  8531  0D57  2D7D               	goto	l5584
  8532                           	
  8533  0D58                     l2994:	
  8534                           	line	62
  8535  0D58  2D7D               	goto	l5584
  8536                           	
  8537  0D59                     l2991:	
  8538                           	line	63
  8539                           	
  8540  0D59                     l5574:	
  8541  0D59  3018               	movlw	(018h)
  8542  0D5A  027D               	subwf	(___fttol@exp1),w
  8543  0D5B  1C03               	skipc
  8544  0D5C  2D5E               	goto	u3011
  8545  0D5D  2D5F               	goto	u3010
  8546  0D5E                     u3011:
  8547  0D5E  2D76               	goto	l5582
  8548  0D5F                     u3010:
  8549                           	line	64
  8550                           	
  8551  0D5F                     l5576:	
  8552  0D5F  3000               	movlw	0
  8553  0D60  00F3               	movwf	(?___fttol+3)
  8554  0D61  3000               	movlw	0
  8555  0D62  00F2               	movwf	(?___fttol+2)
  8556  0D63  3000               	movlw	0
  8557  0D64  00F1               	movwf	(?___fttol+1)
  8558  0D65  3000               	movlw	0
  8559  0D66  00F0               	movwf	(?___fttol)
  8560                           
  8561  0D67  2D96               	goto	l2990
  8562                           	
  8563  0D68                     l5578:	
  8564  0D68  2D96               	goto	l2990
  8565                           	
  8566  0D69                     l2996:	
  8567                           	line	65
  8568  0D69  2D76               	goto	l5582
  8569                           	
  8570  0D6A                     l2998:	
  8571                           	line	66
  8572                           	
  8573  0D6A                     l5580:	
  8574  0D6A  3001               	movlw	01h
  8575  0D6B  00F4               	movwf	(??___fttol+0)+0
  8576  0D6C                     u3025:
  8577  0D6C  1003               	clrc
  8578  0D6D  0DF9               	rlf	(___fttol@lval),f
  8579  0D6E  0DFA               	rlf	(___fttol@lval+1),f
  8580  0D6F  0DFB               	rlf	(___fttol@lval+2),f
  8581  0D70  0DFC               	rlf	(___fttol@lval+3),f
  8582  0D71  0BF4               	decfsz	(??___fttol+0)+0
  8583  0D72  2D6C               	goto	u3025
  8584                           	line	67
  8585  0D73  3001               	movlw	low(01h)
  8586  0D74  02FD               	subwf	(___fttol@exp1),f
  8587  0D75  2D76               	goto	l5582
  8588                           	line	68
  8589                           	
  8590  0D76                     l2997:	
  8591                           	line	65
  8592                           	
  8593  0D76                     l5582:	
  8594  0D76  08FD               	movf	(___fttol@exp1),f
  8595  0D77  1D03               	skipz
  8596  0D78  2D7A               	goto	u3031
  8597  0D79  2D7B               	goto	u3030
  8598  0D7A                     u3031:
  8599  0D7A  2D6A               	goto	l5580
  8600  0D7B                     u3030:
  8601  0D7B  2D7D               	goto	l5584
  8602                           	
  8603  0D7C                     l2999:	
  8604  0D7C  2D7D               	goto	l5584
  8605                           	line	69
  8606                           	
  8607  0D7D                     l2995:	
  8608                           	line	70
  8609                           	
  8610  0D7D                     l5584:	
  8611  0D7D  0878               	movf	(___fttol@sign1),w
  8612  0D7E  1D03               	skipz
  8613  0D7F  2D81               	goto	u3040
  8614  0D80  2D8D               	goto	l5588
  8615  0D81                     u3040:
  8616                           	line	71
  8617                           	
  8618  0D81                     l5586:	
  8619  0D81  09F9               	comf	(___fttol@lval),f
  8620  0D82  09FA               	comf	(___fttol@lval+1),f
  8621  0D83  09FB               	comf	(___fttol@lval+2),f
  8622  0D84  09FC               	comf	(___fttol@lval+3),f
  8623  0D85  0AF9               	incf	(___fttol@lval),f
  8624  0D86  1903               	skipnz
  8625  0D87  0AFA               	incf	(___fttol@lval+1),f
  8626  0D88  1903               	skipnz
  8627  0D89  0AFB               	incf	(___fttol@lval+2),f
  8628  0D8A  1903               	skipnz
  8629  0D8B  0AFC               	incf	(___fttol@lval+3),f
  8630  0D8C  2D8D               	goto	l5588
  8631                           	
  8632  0D8D                     l3000:	
  8633                           	line	72
  8634                           	
  8635  0D8D                     l5588:	
  8636  0D8D  087C               	movf	(___fttol@lval+3),w
  8637  0D8E  00F3               	movwf	(?___fttol+3)
  8638  0D8F  087B               	movf	(___fttol@lval+2),w
  8639  0D90  00F2               	movwf	(?___fttol+2)
  8640  0D91  087A               	movf	(___fttol@lval+1),w
  8641  0D92  00F1               	movwf	(?___fttol+1)
  8642  0D93  0879               	movf	(___fttol@lval),w
  8643  0D94  00F0               	movwf	(?___fttol)
  8644                           
  8645  0D95  2D96               	goto	l2990
  8646                           	
  8647  0D96                     l5590:	
  8648                           	line	73
  8649                           	
  8650  0D96                     l2990:	
  8651  0D96  0008               	return
  8652                           	opt stack 0
  8653                           GLOBAL	__end_of___fttol
  8654  0D97                     	__end_of___fttol:
  8655 ;; =============== function ___fttol ends ============
  8656                           
  8657                           	signat	___fttol,4220
  8658                           	global	___ftpack
  8659                           psect	text819,local,class=CODE,delta=2
  8660                           global __ptext819
  8661  0B71                     __ptext819:
  8662                           
  8663 ;; *************** function ___ftpack *****************
  8664 ;; Defined at:
  8665 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  arg             3    0[COMMON] unsigned um
  8668 ;;  exp             1    3[COMMON] unsigned char 
  8669 ;;  sign            1    4[COMMON] unsigned char 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;		None
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  3    0[COMMON] float 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8681 ;;      Params:         5       0       0       0       0
  8682 ;;      Locals:         0       0       0       0       0
  8683 ;;      Temps:          3       0       0       0       0
  8684 ;;      Totals:         8       0       0       0       0
  8685 ;;Total ram usage:        8 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		___ftadd
  8691 ;;		___ftdiv
  8692 ;;		___ftmul
  8693 ;;		___lbtoft
  8694 ;;		___awtoft
  8695 ;;		___altoft
  8696 ;;		___lltoft
  8697 ;;		___abtoft
  8698 ;;		___lwtoft
  8699 ;;		___attoft
  8700 ;;		___lttoft
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           psect	text819
  8704                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  8705                           	line	63
  8706                           	global	__size_of___ftpack
  8707  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  8708                           	
  8709  0B71                     ___ftpack:	
  8710                           	opt	stack 5
  8711                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8712                           	line	64
  8713                           	
  8714  0B71                     l5518:	
  8715  0B71  0873               	movf	(___ftpack@exp),w
  8716  0B72  1D03               	skipz
  8717  0B73  2B75               	goto	u2840
  8718  0B74  2B7D               	goto	l5522
  8719  0B75                     u2840:
  8720                           	
  8721  0B75                     l5520:	
  8722  0B75  0872               	movf	(___ftpack@arg+2),w
  8723  0B76  0471               	iorwf	(___ftpack@arg+1),w
  8724  0B77  0470               	iorwf	(___ftpack@arg),w
  8725  0B78  1D03               	skipz
  8726  0B79  2B7B               	goto	u2851
  8727  0B7A  2B7C               	goto	u2850
  8728  0B7B                     u2851:
  8729  0B7B  2B93               	goto	l5528
  8730  0B7C                     u2850:
  8731  0B7C  2B7D               	goto	l5522
  8732                           	
  8733  0B7D                     l3290:	
  8734                           	line	65
  8735                           	
  8736  0B7D                     l5522:	
  8737  0B7D  3000               	movlw	0x0
  8738  0B7E  00F0               	movwf	(?___ftpack)
  8739  0B7F  3000               	movlw	0x0
  8740  0B80  00F1               	movwf	(?___ftpack+1)
  8741  0B81  3000               	movlw	0x0
  8742  0B82  00F2               	movwf	(?___ftpack+2)
  8743  0B83  2BEB               	goto	l3291
  8744                           	
  8745  0B84                     l5524:	
  8746  0B84  2BEB               	goto	l3291
  8747                           	
  8748  0B85                     l3288:	
  8749                           	line	66
  8750  0B85  2B93               	goto	l5528
  8751                           	
  8752  0B86                     l3293:	
  8753                           	line	67
  8754                           	
  8755  0B86                     l5526:	
  8756  0B86  3001               	movlw	(01h)
  8757  0B87  00F5               	movwf	(??___ftpack+0)+0
  8758  0B88  0875               	movf	(??___ftpack+0)+0,w
  8759  0B89  07F3               	addwf	(___ftpack@exp),f
  8760                           	line	68
  8761  0B8A  3001               	movlw	01h
  8762  0B8B                     u2865:
  8763  0B8B  1003               	clrc
  8764  0B8C  0CF2               	rrf	(___ftpack@arg+2),f
  8765  0B8D  0CF1               	rrf	(___ftpack@arg+1),f
  8766  0B8E  0CF0               	rrf	(___ftpack@arg),f
  8767  0B8F  3EFF               	addlw	-1
  8768  0B90  1D03               	skipz
  8769  0B91  2B8B               	goto	u2865
  8770                           
  8771  0B92  2B93               	goto	l5528
  8772                           	line	69
  8773                           	
  8774  0B93                     l3292:	
  8775                           	line	66
  8776                           	
  8777  0B93                     l5528:	
  8778  0B93  30FE               	movlw	low highword(0FE0000h)
  8779  0B94  0572               	andwf	(___ftpack@arg+2),w
  8780  0B95  1D03               	btfss	status,2
  8781  0B96  2B98               	goto	u2871
  8782  0B97  2B99               	goto	u2870
  8783  0B98                     u2871:
  8784  0B98  2B86               	goto	l5526
  8785  0B99                     u2870:
  8786  0B99  2BB1               	goto	l3295
  8787                           	
  8788  0B9A                     l3294:	
  8789                           	line	70
  8790  0B9A  2BB1               	goto	l3295
  8791                           	
  8792  0B9B                     l3296:	
  8793                           	line	71
  8794                           	
  8795  0B9B                     l5530:	
  8796  0B9B  3001               	movlw	(01h)
  8797  0B9C  00F5               	movwf	(??___ftpack+0)+0
  8798  0B9D  0875               	movf	(??___ftpack+0)+0,w
  8799  0B9E  07F3               	addwf	(___ftpack@exp),f
  8800                           	line	72
  8801                           	
  8802  0B9F                     l5532:	
  8803  0B9F  3001               	movlw	01h
  8804  0BA0  07F0               	addwf	(___ftpack@arg),f
  8805  0BA1  3000               	movlw	0
  8806  0BA2  1803               	skipnc
  8807  0BA3  3001               movlw 1
  8808  0BA4  07F1               	addwf	(___ftpack@arg+1),f
  8809  0BA5  3000               	movlw	0
  8810  0BA6  1803               	skipnc
  8811  0BA7  3001               movlw 1
  8812  0BA8  07F2               	addwf	(___ftpack@arg+2),f
  8813                           	line	73
  8814                           	
  8815  0BA9                     l5534:	
  8816  0BA9  3001               	movlw	01h
  8817  0BAA                     u2885:
  8818  0BAA  1003               	clrc
  8819  0BAB  0CF2               	rrf	(___ftpack@arg+2),f
  8820  0BAC  0CF1               	rrf	(___ftpack@arg+1),f
  8821  0BAD  0CF0               	rrf	(___ftpack@arg),f
  8822  0BAE  3EFF               	addlw	-1
  8823  0BAF  1D03               	skipz
  8824  0BB0  2BAA               	goto	u2885
  8825                           
  8826                           	line	74
  8827                           	
  8828  0BB1                     l3295:	
  8829                           	line	70
  8830  0BB1  30FF               	movlw	low highword(0FF0000h)
  8831  0BB2  0572               	andwf	(___ftpack@arg+2),w
  8832  0BB3  1D03               	btfss	status,2
  8833  0BB4  2BB6               	goto	u2891
  8834  0BB5  2BB7               	goto	u2890
  8835  0BB6                     u2891:
  8836  0BB6  2B9B               	goto	l5530
  8837  0BB7                     u2890:
  8838  0BB7  2BC4               	goto	l5538
  8839                           	
  8840  0BB8                     l3297:	
  8841                           	line	75
  8842  0BB8  2BC4               	goto	l5538
  8843                           	
  8844  0BB9                     l3299:	
  8845                           	line	76
  8846                           	
  8847  0BB9                     l5536:	
  8848  0BB9  3001               	movlw	low(01h)
  8849  0BBA  02F3               	subwf	(___ftpack@exp),f
  8850                           	line	77
  8851  0BBB  3001               	movlw	01h
  8852  0BBC                     u2905:
  8853  0BBC  1003               	clrc
  8854  0BBD  0DF0               	rlf	(___ftpack@arg),f
  8855  0BBE  0DF1               	rlf	(___ftpack@arg+1),f
  8856  0BBF  0DF2               	rlf	(___ftpack@arg+2),f
  8857  0BC0  3EFF               	addlw	-1
  8858  0BC1  1D03               	skipz
  8859  0BC2  2BBC               	goto	u2905
  8860  0BC3  2BC4               	goto	l5538
  8861                           	line	78
  8862                           	
  8863  0BC4                     l3298:	
  8864                           	line	75
  8865                           	
  8866  0BC4                     l5538:	
  8867  0BC4  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  8868  0BC5  2BC7               	goto	u2911
  8869  0BC6  2BC8               	goto	u2910
  8870  0BC7                     u2911:
  8871  0BC7  2BB9               	goto	l5536
  8872  0BC8                     u2910:
  8873                           	
  8874  0BC8                     l3300:	
  8875                           	line	79
  8876  0BC8  1873               	btfsc	(___ftpack@exp),(0)&7
  8877  0BC9  2BCB               	goto	u2921
  8878  0BCA  2BCC               	goto	u2920
  8879  0BCB                     u2921:
  8880  0BCB  2BD2               	goto	l3301
  8881  0BCC                     u2920:
  8882                           	line	80
  8883                           	
  8884  0BCC                     l5540:	
  8885  0BCC  30FF               	movlw	0FFh
  8886  0BCD  05F0               	andwf	(___ftpack@arg),f
  8887  0BCE  307F               	movlw	07Fh
  8888  0BCF  05F1               	andwf	(___ftpack@arg+1),f
  8889  0BD0  30FF               	movlw	0FFh
  8890  0BD1  05F2               	andwf	(___ftpack@arg+2),f
  8891                           	
  8892  0BD2                     l3301:	
  8893                           	line	81
  8894  0BD2  1003               	clrc
  8895  0BD3  0CF3               	rrf	(___ftpack@exp),f
  8896                           
  8897                           	line	82
  8898                           	
  8899  0BD4                     l5542:	
  8900  0BD4  0873               	movf	(___ftpack@exp),w
  8901  0BD5  00F5               	movwf	((??___ftpack+0)+0)
  8902  0BD6  01F6               	clrf	((??___ftpack+0)+0+1)
  8903  0BD7  01F7               	clrf	((??___ftpack+0)+0+2)
  8904  0BD8  3010               	movlw	010h
  8905  0BD9                     u2935:
  8906  0BD9  1003               	clrc
  8907  0BDA  0DF5               	rlf	(??___ftpack+0)+0,f
  8908  0BDB  0DF6               	rlf	(??___ftpack+0)+1,f
  8909  0BDC  0DF7               	rlf	(??___ftpack+0)+2,f
  8910  0BDD                     u2930:
  8911  0BDD  3EFF               	addlw	-1
  8912  0BDE  1D03               	skipz
  8913  0BDF  2BD9               	goto	u2935
  8914  0BE0  0875               	movf	0+(??___ftpack+0)+0,w
  8915  0BE1  04F0               	iorwf	(___ftpack@arg),f
  8916  0BE2  0876               	movf	1+(??___ftpack+0)+0,w
  8917  0BE3  04F1               	iorwf	(___ftpack@arg+1),f
  8918  0BE4  0877               	movf	2+(??___ftpack+0)+0,w
  8919  0BE5  04F2               	iorwf	(___ftpack@arg+2),f
  8920                           	line	83
  8921                           	
  8922  0BE6                     l5544:	
  8923  0BE6  0874               	movf	(___ftpack@sign),w
  8924  0BE7  1D03               	skipz
  8925  0BE8  2BEA               	goto	u2940
  8926  0BE9  2BEB               	goto	l3302
  8927  0BEA                     u2940:
  8928                           	line	84
  8929                           	
  8930  0BEA                     l5546:	
  8931  0BEA  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  8932                           	
  8933  0BEB                     l3302:	
  8934                           	line	85
  8935                           	line	86
  8936                           	
  8937  0BEB                     l3291:	
  8938  0BEB  0008               	return
  8939                           	opt stack 0
  8940                           GLOBAL	__end_of___ftpack
  8941  0BEC                     	__end_of___ftpack:
  8942 ;; =============== function ___ftpack ends ============
  8943                           
  8944                           	signat	___ftpack,12411
  8945                           	global	___bmul
  8946                           psect	text820,local,class=CODE,delta=2
  8947                           global __ptext820
  8948  0869                     __ptext820:
  8949                           
  8950 ;; *************** function ___bmul *****************
  8951 ;; Defined at:
  8952 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  multiplier      1    wreg     unsigned char 
  8955 ;;  multiplicand    1    0[COMMON] unsigned char 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  multiplier      1    3[COMMON] unsigned char 
  8958 ;;  product         1    2[COMMON] unsigned char 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      unsigned char 
  8961 ;; Registers used:
  8962 ;;		wreg, status,2, status,0
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8968 ;;      Params:         1       0       0       0       0
  8969 ;;      Locals:         2       0       0       0       0
  8970 ;;      Temps:          1       0       0       0       0
  8971 ;;      Totals:         4       0       0       0       0
  8972 ;;Total ram usage:        4 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; This function calls:
  8975 ;;		Nothing
  8976 ;; This function is called by:
  8977 ;;		_eval_poly
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           psect	text820
  8981                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  8982                           	line	3
  8983                           	global	__size_of___bmul
  8984  0018                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  8985                           	
  8986  0869                     ___bmul:	
  8987                           	opt	stack 3
  8988                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8989                           ;___bmul@multiplier stored from wreg
  8990  0869  00F3               	movwf	(___bmul@multiplier)
  8991                           	line	4
  8992                           	
  8993  086A                     l5504:	
  8994  086A  01F2               	clrf	(___bmul@product)
  8995                           	line	6
  8996                           	
  8997  086B                     l2874:	
  8998                           	line	7
  8999  086B  1C73               	btfss	(___bmul@multiplier),(0)&7
  9000  086C  286E               	goto	u2821
  9001  086D  286F               	goto	u2820
  9002  086E                     u2821:
  9003  086E  2874               	goto	l5508
  9004  086F                     u2820:
  9005                           	line	8
  9006                           	
  9007  086F                     l5506:	
  9008  086F  0870               	movf	(___bmul@multiplicand),w
  9009  0870  00F1               	movwf	(??___bmul+0)+0
  9010  0871  0871               	movf	(??___bmul+0)+0,w
  9011  0872  07F2               	addwf	(___bmul@product),f
  9012  0873  2874               	goto	l5508
  9013                           	
  9014  0874                     l2875:	
  9015                           	line	9
  9016                           	
  9017  0874                     l5508:	
  9018  0874  1003               	clrc
  9019  0875  0DF0               	rlf	(___bmul@multiplicand),f
  9020                           
  9021                           	line	10
  9022                           	
  9023  0876                     l5510:	
  9024  0876  1003               	clrc
  9025  0877  0CF3               	rrf	(___bmul@multiplier),f
  9026                           
  9027                           	line	11
  9028                           	
  9029  0878                     l5512:	
  9030  0878  08F3               	movf	(___bmul@multiplier),f
  9031  0879  1D03               	skipz
  9032  087A  287C               	goto	u2831
  9033  087B  287D               	goto	u2830
  9034  087C                     u2831:
  9035  087C  286B               	goto	l2874
  9036  087D                     u2830:
  9037  087D  287E               	goto	l5514
  9038                           	
  9039  087E                     l2876:	
  9040                           	line	12
  9041                           	
  9042  087E                     l5514:	
  9043  087E  0872               	movf	(___bmul@product),w
  9044  087F  2880               	goto	l2877
  9045                           	
  9046  0880                     l5516:	
  9047                           	line	13
  9048                           	
  9049  0880                     l2877:	
  9050  0880  0008               	return
  9051                           	opt stack 0
  9052                           GLOBAL	__end_of___bmul
  9053  0881                     	__end_of___bmul:
  9054 ;; =============== function ___bmul ends ============
  9055                           
  9056                           	signat	___bmul,8313
  9057                           	global	_getch
  9058                           psect	text821,local,class=CODE,delta=2
  9059                           global __ptext821
  9060  16C8                     __ptext821:
  9061                           
  9062 ;; *************** function _getch *****************
  9063 ;; Defined at:
  9064 ;;		line 108 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\
       Serial-Requirements\Codes\USART_main.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;		None
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      unsigned char 
  9071 ;; Registers used:
  9072 ;;		wreg
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9078 ;;      Params:         0       0       0       0       0
  9079 ;;      Locals:         0       0       0       0       0
  9080 ;;      Temps:          0       0       0       0       0
  9081 ;;      Totals:         0       0       0       0       0
  9082 ;;Total ram usage:        0 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_main
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           psect	text821
  9091                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
  9092                           	line	108
  9093                           	global	__size_of_getch
  9094  000E                     	__size_of_getch	equ	__end_of_getch-_getch
  9095                           	
  9096  16C8                     _getch:	
  9097                           	opt	stack 7
  9098                           ; Regs used in _getch: [wreg]
  9099                           	line	110
  9100                           	
  9101  16C8                     l5492:	
  9102                           ;USART_main.c: 110: if(RCIF)
  9103  16C8  1283               	bcf	status, 5	;RP0=0, select bank0
  9104  16C9  1303               	bcf	status, 6	;RP1=0, select bank0
  9105  16CA  1E8C               	btfss	(101/8),(101)&7
  9106  16CB  2ECD               	goto	u2811
  9107  16CC  2ECE               	goto	u2810
  9108  16CD                     u2811:
  9109  16CD  2ED2               	goto	l5500
  9110  16CE                     u2810:
  9111                           	line	111
  9112                           	
  9113  16CE                     l5494:	
  9114                           ;USART_main.c: 111: return RCREG;
  9115  16CE  081A               	movf	(26),w	;volatile
  9116  16CF  2ED5               	goto	l2164
  9117                           	
  9118  16D0                     l5496:	
  9119  16D0  2ED5               	goto	l2164
  9120                           	
  9121  16D1                     l5498:	
  9122  16D1  2ED5               	goto	l2164
  9123                           	line	112
  9124                           	
  9125  16D2                     l2163:	
  9126                           	line	113
  9127                           	
  9128  16D2                     l5500:	
  9129                           ;USART_main.c: 112: else
  9130                           ;USART_main.c: 113: return (0);
  9131  16D2  3000               	movlw	(0)
  9132  16D3  2ED5               	goto	l2164
  9133                           	
  9134  16D4                     l5502:	
  9135  16D4  2ED5               	goto	l2164
  9136                           	
  9137  16D5                     l2165:	
  9138                           	line	114
  9139                           	
  9140  16D5                     l2164:	
  9141  16D5  0008               	return
  9142                           	opt stack 0
  9143                           GLOBAL	__end_of_getch
  9144  16D6                     	__end_of_getch:
  9145 ;; =============== function _getch ends ============
  9146                           
  9147                           	signat	_getch,89
  9148                           	global	_putchOnSerial
  9149                           psect	text822,local,class=CODE,delta=2
  9150                           global __ptext822
  9151  16A4                     __ptext822:
  9152                           
  9153 ;; *************** function _putchOnSerial *****************
  9154 ;; Defined at:
  9155 ;;		line 102 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\
       Serial-Requirements\Codes\USART_main.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;  byte            1    wreg     unsigned char 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  byte            1    0[COMMON] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;		None               void
  9162 ;; Registers used:
  9163 ;;		wreg
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9169 ;;      Params:         0       0       0       0       0
  9170 ;;      Locals:         1       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0
  9172 ;;      Totals:         1       0       0       0       0
  9173 ;;Total ram usage:        1 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_main
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           psect	text822
  9182                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
  9183                           	line	102
  9184                           	global	__size_of_putchOnSerial
  9185  000C                     	__size_of_putchOnSerial	equ	__end_of_putchOnSerial-_putchOnSerial
  9186                           	
  9187  16A4                     _putchOnSerial:	
  9188                           	opt	stack 7
  9189                           ; Regs used in _putchOnSerial: [wreg]
  9190                           ;putchOnSerial@byte stored from wreg
  9191  16A4  00F0               	movwf	(putchOnSerial@byte)
  9192                           	line	104
  9193                           	
  9194  16A5                     l5488:	
  9195                           ;USART_main.c: 104: while(!TXIF)
  9196  16A5  2EA6               	goto	l2157
  9197                           	
  9198  16A6                     l2158:	
  9199                           	line	105
  9200                           ;USART_main.c: 105: continue;
  9201                           	
  9202  16A6                     l2157:	
  9203                           	line	104
  9204  16A6  1283               	bcf	status, 5	;RP0=0, select bank0
  9205  16A7  1303               	bcf	status, 6	;RP1=0, select bank0
  9206  16A8  1E0C               	btfss	(100/8),(100)&7
  9207  16A9  2EAB               	goto	u2801
  9208  16AA  2EAC               	goto	u2800
  9209  16AB                     u2801:
  9210  16AB  2EA6               	goto	l2157
  9211  16AC                     u2800:
  9212  16AC  2EAD               	goto	l5490
  9213                           	
  9214  16AD                     l2159:	
  9215                           	line	106
  9216                           	
  9217  16AD                     l5490:	
  9218                           ;USART_main.c: 106: TXREG = byte;
  9219  16AD  0870               	movf	(putchOnSerial@byte),w
  9220  16AE  0099               	movwf	(25)	;volatile
  9221                           	line	107
  9222                           	
  9223  16AF                     l2160:	
  9224  16AF  0008               	return
  9225                           	opt stack 0
  9226                           GLOBAL	__end_of_putchOnSerial
  9227  16B0                     	__end_of_putchOnSerial:
  9228 ;; =============== function _putchOnSerial ends ============
  9229                           
  9230                           	signat	_putchOnSerial,4216
  9231                           	global	_init_a2d
  9232                           psect	text823,local,class=CODE,delta=2
  9233                           global __ptext823
  9234  1698                     __ptext823:
  9235                           
  9236 ;; *************** function _init_a2d *****************
  9237 ;; Defined at:
  9238 ;;		line 116 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\
       Serial-Requirements\Codes\USART_main.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;		None               void
  9245 ;; Registers used:
  9246 ;;		wreg
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9252 ;;      Params:         0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0
  9255 ;;      Totals:         0       0       0       0       0
  9256 ;;Total ram usage:        0 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_main
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           psect	text823
  9265                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\USART_main.c"
  9266                           	line	116
  9267                           	global	__size_of_init_a2d
  9268  000C                     	__size_of_init_a2d	equ	__end_of_init_a2d-_init_a2d
  9269                           	
  9270  1698                     _init_a2d:	
  9271                           	opt	stack 7
  9272                           ; Regs used in _init_a2d: [wreg]
  9273                           	line	117
  9274                           	
  9275  1698                     l5484:	
  9276                           ;USART_main.c: 117: ADCON0 = 0x41;
  9277  1698  3041               	movlw	(041h)
  9278  1699  1283               	bcf	status, 5	;RP0=0, select bank0
  9279  169A  1303               	bcf	status, 6	;RP1=0, select bank0
  9280  169B  009F               	movwf	(31)	;volatile
  9281                           	line	118
  9282                           ;USART_main.c: 118: ADCON1 = 0x0E;
  9283  169C  300E               	movlw	(0Eh)
  9284  169D  1683               	bsf	status, 5	;RP0=1, select bank1
  9285  169E  1303               	bcf	status, 6	;RP1=0, select bank1
  9286  169F  009F               	movwf	(159)^080h	;volatile
  9287                           	line	119
  9288                           	
  9289  16A0                     l5486:	
  9290                           ;USART_main.c: 119: ADON=1;
  9291  16A0  1283               	bcf	status, 5	;RP0=0, select bank0
  9292  16A1  1303               	bcf	status, 6	;RP1=0, select bank0
  9293  16A2  141F               	bsf	(248/8),(248)&7
  9294                           	line	120
  9295                           	
  9296  16A3                     l2168:	
  9297  16A3  0008               	return
  9298                           	opt stack 0
  9299                           GLOBAL	__end_of_init_a2d
  9300  16A4                     	__end_of_init_a2d:
  9301 ;; =============== function _init_a2d ends ============
  9302                           
  9303                           	signat	_init_a2d,88
  9304                           	global	_reverse
  9305                           psect	text824,local,class=CODE,delta=2
  9306                           global __ptext824
  9307  0936                     __ptext824:
  9308                           
  9309 ;; *************** function _reverse *****************
  9310 ;; Defined at:
  9311 ;;		line 9 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\Se
       rial-Requirements\Codes\string.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  str             1    wreg     PTR unsigned char 
  9314 ;;		 -> str(10), 
  9315 ;;  len             2    0[COMMON] int 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  str             1   11[COMMON] PTR unsigned char 
  9318 ;;		 -> str(10), 
  9319 ;;  j               2    9[COMMON] int 
  9320 ;;  i               2    7[COMMON] int 
  9321 ;;  temp            2    5[COMMON] int 
  9322 ;; Return value:  Size  Location     Type
  9323 ;;		None               void
  9324 ;; Registers used:
  9325 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9331 ;;      Params:         2       0       0       0       0
  9332 ;;      Locals:         7       0       0       0       0
  9333 ;;      Temps:          3       0       0       0       0
  9334 ;;      Totals:        12       0       0       0       0
  9335 ;;Total ram usage:       12 bytes
  9336 ;; Hardware stack levels used:    1
  9337 ;; This function calls:
  9338 ;;		Nothing
  9339 ;; This function is called by:
  9340 ;;		_intToStr
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           psect	text824
  9344                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\string.c"
  9345                           	line	9
  9346                           	global	__size_of_reverse
  9347  004D                     	__size_of_reverse	equ	__end_of_reverse-_reverse
  9348                           	
  9349  0936                     _reverse:	
  9350                           	opt	stack 5
  9351                           ; Regs used in _reverse: [wreg-fsr0h+status,2+status,0]
  9352                           ;reverse@str stored from wreg
  9353  0936  00FB               	movwf	(reverse@str)
  9354                           	line	10
  9355                           	
  9356  0937                     l5472:	
  9357                           ;string.c: 10: int i=0, j=len-1, temp;
  9358  0937  01F7               	clrf	(reverse@i)
  9359  0938  01F8               	clrf	(reverse@i+1)
  9360                           	
  9361  0939                     l5474:	
  9362  0939  0870               	movf	(reverse@len),w
  9363  093A  3EFF               	addlw	low(-1)
  9364  093B  00F9               	movwf	(reverse@j)
  9365  093C  0871               	movf	(reverse@len+1),w
  9366  093D  1803               	skipnc
  9367  093E  3E01               	addlw	1
  9368  093F  3EFF               	addlw	high(-1)
  9369  0940  00FA               	movwf	1+(reverse@j)
  9370                           	line	11
  9371                           ;string.c: 11: while (i<j)
  9372  0941  2973               	goto	l5482
  9373                           	
  9374  0942                     l1415:	
  9375                           	line	13
  9376                           	
  9377  0942                     l5476:	
  9378                           ;string.c: 12: {
  9379                           ;string.c: 13: temp = str[i];
  9380  0942  0877               	movf	(reverse@i),w
  9381  0943  077B               	addwf	(reverse@str),w
  9382  0944  00F2               	movwf	(??_reverse+0)+0
  9383  0945  0872               	movf	0+(??_reverse+0)+0,w
  9384  0946  0084               	movwf	fsr0
  9385  0947  1383               	bcf	status, 7	;select IRP bank0
  9386  0948  0800               	movf	indf,w
  9387  0949  00F3               	movwf	(??_reverse+1)+0
  9388  094A  01F4               	clrf	(??_reverse+1)+0+1
  9389  094B  0873               	movf	0+(??_reverse+1)+0,w
  9390  094C  00F5               	movwf	(reverse@temp)
  9391  094D  0874               	movf	1+(??_reverse+1)+0,w
  9392  094E  00F6               	movwf	(reverse@temp+1)
  9393                           	line	14
  9394                           ;string.c: 14: str[i] = str[j];
  9395  094F  0879               	movf	(reverse@j),w
  9396  0950  077B               	addwf	(reverse@str),w
  9397  0951  00F2               	movwf	(??_reverse+0)+0
  9398  0952  0872               	movf	0+(??_reverse+0)+0,w
  9399  0953  0084               	movwf	fsr0
  9400  0954  0800               	movf	indf,w
  9401  0955  00F3               	movwf	(??_reverse+1)+0
  9402  0956  0877               	movf	(reverse@i),w
  9403  0957  077B               	addwf	(reverse@str),w
  9404  0958  00F4               	movwf	(??_reverse+2)+0
  9405  0959  0874               	movf	0+(??_reverse+2)+0,w
  9406  095A  0084               	movwf	fsr0
  9407  095B  0873               	movf	(??_reverse+1)+0,w
  9408  095C  0080               	movwf	indf
  9409                           	line	15
  9410                           ;string.c: 15: str[j] = temp;
  9411  095D  0875               	movf	(reverse@temp),w
  9412  095E  00F2               	movwf	(??_reverse+0)+0
  9413  095F  0879               	movf	(reverse@j),w
  9414  0960  077B               	addwf	(reverse@str),w
  9415  0961  00F3               	movwf	(??_reverse+1)+0
  9416  0962  0873               	movf	0+(??_reverse+1)+0,w
  9417  0963  0084               	movwf	fsr0
  9418  0964  0872               	movf	(??_reverse+0)+0,w
  9419  0965  0080               	movwf	indf
  9420                           	line	16
  9421                           	
  9422  0966                     l5478:	
  9423                           ;string.c: 16: i++; j--;
  9424  0966  3001               	movlw	low(01h)
  9425  0967  07F7               	addwf	(reverse@i),f
  9426  0968  1803               	skipnc
  9427  0969  0AF8               	incf	(reverse@i+1),f
  9428  096A  3000               	movlw	high(01h)
  9429  096B  07F8               	addwf	(reverse@i+1),f
  9430                           	
  9431  096C                     l5480:	
  9432  096C  30FF               	movlw	low(-1)
  9433  096D  07F9               	addwf	(reverse@j),f
  9434  096E  1803               	skipnc
  9435  096F  0AFA               	incf	(reverse@j+1),f
  9436  0970  30FF               	movlw	high(-1)
  9437  0971  07FA               	addwf	(reverse@j+1),f
  9438  0972  2973               	goto	l5482
  9439                           	line	17
  9440                           	
  9441  0973                     l1414:	
  9442                           	line	11
  9443                           	
  9444  0973                     l5482:	
  9445  0973  0878               	movf	(reverse@i+1),w
  9446  0974  3A80               	xorlw	80h
  9447  0975  00F2               	movwf	(??_reverse+0)+0
  9448  0976  087A               	movf	(reverse@j+1),w
  9449  0977  3A80               	xorlw	80h
  9450  0978  0272               	subwf	(??_reverse+0)+0,w
  9451  0979  1D03               	skipz
  9452  097A  297D               	goto	u2795
  9453  097B  0879               	movf	(reverse@j),w
  9454  097C  0277               	subwf	(reverse@i),w
  9455  097D                     u2795:
  9456                           
  9457  097D  1C03               	skipc
  9458  097E  2980               	goto	u2791
  9459  097F  2981               	goto	u2790
  9460  0980                     u2791:
  9461  0980  2942               	goto	l5476
  9462  0981                     u2790:
  9463  0981  2982               	goto	l1417
  9464                           	
  9465  0982                     l1416:	
  9466                           	line	18
  9467                           	
  9468  0982                     l1417:	
  9469  0982  0008               	return
  9470                           	opt stack 0
  9471                           GLOBAL	__end_of_reverse
  9472  0983                     	__end_of_reverse:
  9473 ;; =============== function _reverse ends ============
  9474                           
  9475                           	signat	_reverse,8312
  9476                           	global	_lcd_write
  9477                           psect	text825,local,class=CODE,delta=2
  9478                           global __ptext825
  9479  1786                     __ptext825:
  9480                           
  9481 ;; *************** function _lcd_write *****************
  9482 ;; Defined at:
  9483 ;;		line 23 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\lcd.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  c               1    wreg     unsigned char 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  c               1    2[COMMON] unsigned char 
  9488 ;;  _dcnt           1    1[COMMON] unsigned char 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;		None               void
  9491 ;; Registers used:
  9492 ;;		wreg, status,2, status,0
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9498 ;;      Params:         0       0       0       0       0
  9499 ;;      Locals:         2       0       0       0       0
  9500 ;;      Temps:          1       0       0       0       0
  9501 ;;      Totals:         3       0       0       0       0
  9502 ;;Total ram usage:        3 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; This function calls:
  9505 ;;		Nothing
  9506 ;; This function is called by:
  9507 ;;		_lcd_clear
  9508 ;;		_lcd_puts
  9509 ;;		_lcd_goto
  9510 ;;		_lcd_init
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           psect	text825
  9514                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\lcd.c"
  9515                           	line	23
  9516                           	global	__size_of_lcd_write
  9517  0025                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  9518                           	
  9519  1786                     _lcd_write:	
  9520                           	opt	stack 6
  9521                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  9522                           ;lcd_write@c stored from wreg
  9523  1786  00F2               	movwf	(lcd_write@c)
  9524                           	line	24
  9525                           	
  9526  1787                     l5458:	
  9527                           ;lcd.c: 24: PORTD = (PORTD & 0x0F) | (c);
  9528  1787  1283               	bcf	status, 5	;RP0=0, select bank0
  9529  1788  1303               	bcf	status, 6	;RP1=0, select bank0
  9530  1789  0808               	movf	(8),w
  9531  178A  390F               	andlw	0Fh
  9532  178B  0472               	iorwf	(lcd_write@c),w
  9533  178C  0088               	movwf	(8)	;volatile
  9534                           	line	25
  9535                           	
  9536  178D                     l5460:	
  9537                           ;lcd.c: 25: ((RE1 = 1),(RE1=0));
  9538  178D  1489               	bsf	(73/8),(73)&7
  9539                           	
  9540  178E                     l5462:	
  9541  178E  1089               	bcf	(73/8),(73)&7
  9542                           	line	26
  9543                           ;lcd.c: 26: PORTD = (PORTD & 0x0F) | (c << 4);
  9544  178F  0872               	movf	(lcd_write@c),w
  9545  1790  00F0               	movwf	(??_lcd_write+0)+0
  9546  1791  3004               	movlw	04h
  9547  1792                     u2775:
  9548  1792  1003               	clrc
  9549  1793  0DF0               	rlf	(??_lcd_write+0)+0,f
  9550  1794  3EFF               	addlw	-1
  9551  1795  1D03               	skipz
  9552  1796  2F92               	goto	u2775
  9553  1797  0808               	movf	(8),w
  9554  1798  390F               	andlw	0Fh
  9555  1799  0470               	iorwf	0+(??_lcd_write+0)+0,w
  9556  179A  0088               	movwf	(8)	;volatile
  9557                           	line	27
  9558                           	
  9559  179B                     l5464:	
  9560                           ;lcd.c: 27: ((RE1 = 1),(RE1=0));
  9561  179B  1489               	bsf	(73/8),(73)&7
  9562                           	
  9563  179C                     l5466:	
  9564  179C  1089               	bcf	(73/8),(73)&7
  9565                           	line	28
  9566                           	
  9567  179D                     l5468:	
  9568                           ;lcd.c: 28: { unsigned char _dcnt; _dcnt = (40)/((12*1000L)/(4*1000L))|1; while(--_dcnt 
                                 != 0) continue; };
  9569  179D  300D               	movlw	(0Dh)
  9570  179E  00F0               	movwf	(??_lcd_write+0)+0
  9571  179F  0870               	movf	(??_lcd_write+0)+0,w
  9572  17A0  00F1               	movwf	(lcd_write@_dcnt)
  9573  17A1  2FA3               	goto	l5470
  9574                           	
  9575  17A2                     l698:	
  9576  17A2  2FA3               	goto	l5470
  9577                           	
  9578  17A3                     l697:	
  9579                           	
  9580  17A3                     l5470:	
  9581  17A3  3001               	movlw	low(01h)
  9582  17A4  02F1               	subwf	(lcd_write@_dcnt),f
  9583  17A5  1D03               	btfss	status,2
  9584  17A6  2FA8               	goto	u2781
  9585  17A7  2FA9               	goto	u2780
  9586  17A8                     u2781:
  9587  17A8  2FA3               	goto	l5470
  9588  17A9                     u2780:
  9589  17A9  2FAA               	goto	l700
  9590                           	
  9591  17AA                     l699:	
  9592                           	line	29
  9593                           	
  9594  17AA                     l700:	
  9595  17AA  0008               	return
  9596                           	opt stack 0
  9597                           GLOBAL	__end_of_lcd_write
  9598  17AB                     	__end_of_lcd_write:
  9599 ;; =============== function _lcd_write ends ============
  9600                           
  9601                           	signat	_lcd_write,4216
  9602                           	global	_DelayMs
  9603                           psect	text826,local,class=CODE,delta=2
  9604                           global __ptext826
  9605  1744                     __ptext826:
  9606                           
  9607 ;; *************** function _DelayMs *****************
  9608 ;; Defined at:
  9609 ;;		line 11 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\exp3\S
       erial-Requirements\Codes\delay.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  cnt             1    wreg     unsigned char 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  cnt             1    1[COMMON] unsigned char 
  9614 ;;  _dcnt           1    3[COMMON] unsigned char 
  9615 ;;  i               1    2[COMMON] unsigned char 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;		None               void
  9618 ;; Registers used:
  9619 ;;		wreg, status,2, status,0
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9625 ;;      Params:         0       0       0       0       0
  9626 ;;      Locals:         3       0       0       0       0
  9627 ;;      Temps:          1       0       0       0       0
  9628 ;;      Totals:         4       0       0       0       0
  9629 ;;Total ram usage:        4 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; This function calls:
  9632 ;;		Nothing
  9633 ;; This function is called by:
  9634 ;;		_lcd_clear
  9635 ;;		_lcd_init
  9636 ;;		_main
  9637 ;;		_read_a2d
  9638 ;;		_DelaySec
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           psect	text826
  9642                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\exp3\Serial-Requirements\Codes\delay.c"
  9643                           	line	11
  9644                           	global	__size_of_DelayMs
  9645  0021                     	__size_of_DelayMs	equ	__end_of_DelayMs-_DelayMs
  9646                           	
  9647  1744                     _DelayMs:	
  9648                           	opt	stack 6
  9649                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  9650                           ;DelayMs@cnt stored from wreg
  9651  1744  00F1               	movwf	(DelayMs@cnt)
  9652                           	line	20
  9653                           ;delay.c: 19: unsigned char i;
  9654                           ;delay.c: 20: do {
  9655                           	
  9656  1745                     l3:	
  9657                           	line	21
  9658                           	
  9659  1745                     l5450:	
  9660                           ;delay.c: 21: i = 4;
  9661  1745  3004               	movlw	(04h)
  9662  1746  00F0               	movwf	(??_DelayMs+0)+0
  9663  1747  0870               	movf	(??_DelayMs+0)+0,w
  9664  1748  00F2               	movwf	(DelayMs@i)
  9665                           	line	22
  9666                           ;delay.c: 22: do {
  9667                           	
  9668  1749                     l4:	
  9669                           	line	23
  9670                           ;delay.c: 23: { unsigned char _dcnt; _dcnt = (250)/((12*1000L)/(4*1000L))|1; while(--_dc
                                 nt != 0) continue; };
  9671  1749  3053               	movlw	(053h)
  9672  174A  00F0               	movwf	(??_DelayMs+0)+0
  9673  174B  0870               	movf	(??_DelayMs+0)+0,w
  9674  174C  00F3               	movwf	(DelayMs@_dcnt)
  9675  174D  2F4F               	goto	l5452
  9676                           	
  9677  174E                     l6:	
  9678  174E  2F4F               	goto	l5452
  9679                           	
  9680  174F                     l5:	
  9681                           	
  9682  174F                     l5452:	
  9683  174F  3001               	movlw	low(01h)
  9684  1750  02F3               	subwf	(DelayMs@_dcnt),f
  9685  1751  1D03               	btfss	status,2
  9686  1752  2F54               	goto	u2741
  9687  1753  2F55               	goto	u2740
  9688  1754                     u2741:
  9689  1754  2F4F               	goto	l5452
  9690  1755                     u2740:
  9691  1755  2F56               	goto	l5454
  9692                           	
  9693  1756                     l7:	
  9694                           	line	24
  9695                           	
  9696  1756                     l5454:	
  9697                           ;delay.c: 24: } while(--i);
  9698  1756  3001               	movlw	low(01h)
  9699  1757  02F2               	subwf	(DelayMs@i),f
  9700  1758  1D03               	btfss	status,2
  9701  1759  2F5B               	goto	u2751
  9702  175A  2F5C               	goto	u2750
  9703  175B                     u2751:
  9704  175B  2F49               	goto	l4
  9705  175C                     u2750:
  9706  175C  2F5D               	goto	l5456
  9707                           	
  9708  175D                     l8:	
  9709                           	line	25
  9710                           	
  9711  175D                     l5456:	
  9712                           ;delay.c: 25: } while(--cnt);
  9713  175D  3001               	movlw	low(01h)
  9714  175E  02F1               	subwf	(DelayMs@cnt),f
  9715  175F  1D03               	btfss	status,2
  9716  1760  2F62               	goto	u2761
  9717  1761  2F63               	goto	u2760
  9718  1762                     u2761:
  9719  1762  2F45               	goto	l3
  9720  1763                     u2760:
  9721  1763  2F64               	goto	l10
  9722                           	
  9723  1764                     l9:	
  9724                           	line	27
  9725                           	
  9726  1764                     l10:	
  9727  1764  0008               	return
  9728                           	opt stack 0
  9729                           GLOBAL	__end_of_DelayMs
  9730  1765                     	__end_of_DelayMs:
  9731 ;; =============== function _DelayMs ends ============
  9732                           
  9733                           	signat	_DelayMs,4216
  9734                           psect	text827,local,class=CODE,delta=2
  9735                           global __ptext827
  9736  0000                     __ptext827:
  9737                           	global	btemp
  9738  007E                     	btemp set 07Eh
  9739                           
  9740                           	DABS	1,126,2	;btemp
  9741                           	global	wtemp0
  9742  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Apr 02 17:04:29 2022

          ___altoft@exp 0026                       l3 1745                       l4 1749                       l5 174F  
                     l6 174E                       l7 1756                       l8 175D                       l9 1764  
                     _x 00B8                       pc 0002          ___bmul@product 0072           ___altoft@sign 0027  
                    l10 1764                      _RD 0C60                      _WR 0C61            ___awdiv@sign 0076  
                    fsr 0004            ___ftadd@exp1 003F            ___ftadd@exp2 003E            ___ftadd@sign 003D  
                   l700 17AA                     l703 16E5                     l721 09EF                     l706 17EE  
                   l722 09EE                     l707 17D9                     l723 09F5                     l708 17FF  
                   l724 0A0B                     l709 17FF                     l725 0A0A                     l718 16C7  
                   l726 0A12                     l727 0A2A                     l697 17A3                     l698 17A2  
                   l699 17AA                     _GIE 005F                     _RB1 0031                     _RE0 0048  
                   _RE1 0049                     _exp 0694                     _log 0F27                     _pow 01A1  
                   fsr0 0004                     _str 00BD                     indf 0000            ___awmod@sign 0076  
           lcd_goto@pos 0073           _putchOnSerial 16A4            ___ftdiv@cntr 0024            ___ftdiv@sign 0029  
                  l3000 0D8D                    l3020 0B0B                    l1420 0CAA                    l3021 0B19  
                  l1421 0C70                    l3005 1704                    l1414 0973                    l3030 0B70  
                  l3022 0B5F                    l1422 0CB1                    l3110 099E                    l1430 0405  
                  l2150 0687                    l1415 0942                    l3023 0B31                    l1423 0CC5  
                  l3111 09B3                    l2151 0686                    l2143 0598                    l1416 0982  
                  l2160 16AF                    l3024 0B25                    l1424 0CB2                    l3016 17BB  
                  l3112 09CF                    l3120 08B2                    l2152 0690                    l2144 0640  
                  l1417 0982                    l3025 0B36                    l1425 0CD4                    l3017 17D4  
                  l2153 0691                    l2145 062E                    l3026 0B37                    l1426 0CF2  
                  l2154 0691                    l2146 063B                    l2163 16D2                    l3027 0B50  
                  l3043 16BA                    l2171 08D7                    l2147 068F                    l2164 16D5  
                  l3300 0BC8                    l3028 0B5E                    l3044 16BB                    l2180 1743  
                  l3108 099D                    l2172 08D7                    l2148 0688                    l2157 16A6  
                  l2165 16D5                    l3301 0BD2                    l3029 0B69                    l3109 09AC  
                  l3117 0894                    l2173 08DC                    l1429 0405                    l2149 066D  
                  l2158 16A6                    l3302 0BEB                    l3118 0886                    l2174 08EB  
                  l3230 072E                    l3222 06A5                    l2159 16AD                    l3047 0ABB  
                  l3119 089B                    l3231 07FF                    l3223 07FF                    l2168 16A3  
                  l3048 0AE5                    l3232 07E4                    l3224 06D4                    l3049 0AFC  
                  l2177 1734                    l3241 004B                    l3305 0C5C                    l3090 0A7F  
                  l2178 1727                    l3242 0041                    l3306 0C0F                    l3234 07C8  
                  l3226 06CA                    l3091 0A59                    l2179 1743                    l3243 00B2  
                  l3307 0C63                    l3092 0A4D                    l3244 0055                    l3308 0C6A  
                  l3236 07CE                    l3228 06D2                    l3093 0A5E                    l3245 00A9  
                  l3229 06FB                    l3094 0A5F                    l3270 0E6E                    l3095 0A70  
                  l3271 0F26                    l3096 0A7E                    l3088 0A39                    l6000 17D4  
                  l3280 0F06                    l3272 0E9F                    l3256 0F4E                    l3097 0A89  
                  l3089 0A43                    l3273 0F25                    l3257 0FFF                    l3290 0B7D  
                  l3098 0A90                    l3266 0903                    l6010 0999                    l6002 0983  
                  l3274 0F07                    l3282 0EFB                    l3258 0F67                    l3291 0BEB  
                  l3267 0935                    l3275 0EF3                    l3292 0B93                    l6012 099E  
                  l6004 0986                    l6020 0881                    l3284 0F04                    l6100 001C  
                  l3293 0B86                    l3285 0F24                    l3277 0ED4                    l3294 0B9A  
                  l6014 09AC                    l6006 098A                    l6022 0886                    l6030 0E5D  
                  l6110 004A                    l6102 0022                    l3295 0BB1                    l3279 0EDD  
                  l3296 0B9B                    l3288 0B85                    l6016 09B3                    l6008 098E  
                  l6024 0894                    l6040 0E8A                    l6032 0E66                    l6120 00A8  
                  l6104 0037                    l6112 004B                    l6200 07C8                    l3297 0BB8  
                  l3298 0BC4                    l2930 0451                    l6018 09CF                    l6026 089B  
                  l6050 0EAC                    l6042 0E8E                    l6034 0E6D                    l6122 00A9  
                  l6114 0054                    l6106 0040                    l6130 0C5C                    l6202 07DC  
                  l6210 01A1                    l3299 0BB9                    l2931 045B                    l5500 16D2  
                  l2940 04A4                    l2932 0460                    l2924 043D                    l6028 08B2  
                  l6060 0EDD                    l6052 0EB2                    l6044 0E9D                    l6036 0E6E  
                  l6124 00B2                    l6116 0055                    l6108 0041                    l6132 0C63  
                  l6140 0F4D                    l6204 07E3                    l6220 01D2                    l6212 01A4  
                  l6300 05A1                    l2933 04A5                    l2941 04DC                    l5502 16D4  
                  l5510 0876                    l2950 04F1                    l2942 04DC                    l2934 0475  
                  l2926 0435                    l6070 0F05                    l6062 0EF1                    l6054 0ECA  
                  l6046 0E9E                    l6038 0E7F                    l6118 008C                    l6134 0C6A  
                  l6126 0BEC                    l6150 0FA4                    l6142 0F4E                    l6206 07E4  
                  l6230 022A                    l6222 01D9                    l6214 01AD                    l6310 063B  
                  l6302 05DE                    l2951 0506                    l2943 04AC                    l2927 054B  
                  l2863 01D2                    l5512 0878                    l5504 086A                    l5520 0B75  
                  l5600 0AFD                    l2952 052F                    l2936 048E                    l2928 0452  
                  l6064 0EF2                    l6056 0ECB                    l6072 0F07                    l6048 0E9F  
                  l6080 08B6                    l6128 0C0F                    l6152 0FAA                    l6144 0F57  
                  l6136 0F27                    l6208 07FE                    l6160 069D                    l6240 027A  
                  l6232 0239                    l6224 01E0                    l6216 01C2                    l2864 01C8  
                  l6320 065C                    l6304 05F5                    l6312 0640                    l2945 04C5  
                  l2937 048F                    l2865 02CB                    l5450 1745                    l5514 087E  
                  l5506 086F                    l2874 086B                    l5530 0B9B                    l5522 0B7D  
                  l5610 0B19                    l5602 0B02                    l5442 0AF9                    l2946 04C6  
                  l2938 049D                    l2970 0DCB                    l6074 0F19                    l6066 0EF4  
                  l6058 0ED4                    l6090 08EB                    l6082 08C0                    l6154 0FC5  
                  l6146 0F66                    l6138 0F3E                    l6170 06CA                    l6162 06A4  
                  l6242 02AE                    l6234 023A                    l2866 01E1                    l6226 01E1  
                  l6218 01D1                    l6250 0328                    l6330 0676                    l6322 065D  
                  l6314 064A                    l6306 0615                    l2875 0874                    l2947 04D4  
                  l2939 0490                    l2971 0E11                    l2963 1723                    l2867 025B  
                  l5452 174F                    l5460 178D                    l5516 0880                    l2876 087E  
                  l5508 0874                    l5540 0BCC                    l5532 0B9F                    l5524 0B84  
                  l5620 0B31                    l5612 0B1B                    l5604 0B0B                    l5444 0AFB  
                  l5700 0A90                    l2948 04C7                    l2972 0E33                    l2980 00E7  
                  l6068 0EFB                    l6076 0F25                    l6084 08C6                    l6092 1705  
                  l6156 0FFF                    l6148 0F67                    l6180 06FB                    l6172 06D3  
                  l6164 06A5                    l6244 02B4                    l6236 0245                    l2868 023A  
                  l6228 01F6                    l6260 03D4                    l6252 0353                    l6332 067C  
                  l6324 0663                    l6316 0650                    l6308 062E                    l2877 0880  
                  l2949 04DB                    l2973 0E42                    l2981 0127                    l2869 02CB  
                  l5454 1756                    l5470 17A3                    l5462 178E                    l5542 0BD4  
                  l5534 0BA9                    l5526 0B86                    l5518 0B71                    l2990 0D96  
                  l5550 0D04                    l5630 0B57                    l5622 0B37                    l5614 0B21  
                  l5606 0B0F                    l2982 013C                    l6078 0F26                    l6086 08D5  
                  l6094 1709                    l6190 0767                    l6182 0716                    l6166 06BA  
                  l6174 06D4                    l6158 0694                    l6246 02CA                    l6238 025B  
                  l6254 0359                    l6326 066D                    l6318 0656                    l6334 0688  
                  l6270 0556                    l6262 054C                    l2991 0D59                    l2983 0153  
                  l5456 175D                    l5464 179B                    l5480 096C                    l5472 0937  
                  l5544 0BE6                    l5536 0BB9                    l5528 0B93                    l2992 0D45  
                  l5560 0D27                    l5552 0D0D                    l5624 0B48                    l5616 0B25  
                  l5632 0B5F                    l5608 0B14                    l5640 16B0                    l5720 08EC  
                  l5800 0C8C                    l2968 0DB2                    l2984 0158                    l6088 08DC  
                  l6096 1723                    l6192 078D                    l6184 071A                    l6176 06EB  
                  l6168 06C1                    l6256 0369                    l6248 02CC                    l6328 0675  
                  l6280 0573                    l6272 0557                    l6264 0551                    l2993 0D46  
                  l2969 0E5C                    l2985 016D                    l5466 179C                    l5458 1787  
                  l5482 0973                    l5474 0939                    l5490 16AD                    l5546 0BEA  
                  l5538 0BC4                    l2994 0D58                    l5570 0D44                    l5562 0D2E  
                  l5554 0D0E                    l5634 0B63                    l5626 0B4E                    l5618 0B2C  
                  l5642 16B7                    l5650 0A95                    l5730 0916                    l5722 08F3  
                  l5810 0CC5                    l5802 0C92                    l2986 0184                    l2978 00CE  
                  l6098 000B                    l6194 07BB                    l6186 072E                    l6178 06FA  
                  l6258 039B                    l6290 0586                    l6282 0579                    l6274 0560  
                  l6266 0553                    l2995 0D7D                    l2979 01A0                    l5468 179D  
                  l5476 0942                    l5484 1698                    l5492 16C8                    l5580 0D6A  
                  l2996 0D69                    l5572 0D46                    l5564 0D30                    l5556 0D20  
                  l5548 0CF3                    l5636 0B69                    l5628 0B50                    l5644 16BA  
                  l5660 0AE9                    l5652 0ABB                    l5740 0935                    l5732 0922  
                  l5724 08FB                    l5812 0CD4                    l5804 0CAA                    l5820 1724  
                  l5900 0DAA                    l6196 07C0                    l6188 0747                    l6292 058B  
                  l6284 057C                    l6276 0565                    l6268 0555                    ?_exp 005A  
                  l2997 0D76                    l2989 0D0E                    ?_log 0054                    l5478 0966  
                  l5486 16A0                    l5494 16CE                    l5590 0D96                    l2998 0D6A  
                  l5582 0D76                    l5566 0D34                    l5574 0D59                    l5558 0D21  
                  l5638 0B70                    l5646 16BB                    l5662 0AF7                    l5654 0ABF  
                  l5670 0A30                    l5734 092F                    l5726 0902                    l5750 16D9  
                  l5814 0CE2                    l5806 0CB2                    l5822 1727                    l5830 0420  
                  l5910 0DCB                    l5902 0DB1                    l6198 07C1                    l6294 0591  
                  l6286 057E                    l6278 056A                    l2999 0D7C                    l5488 16A5  
                  l5496 16D0                    l5576 0D5F                    l5584 0D7D                    l5568 0D3B  
                  l5664 0AF9                    l5656 0AE5                    l5648 0A91                    l5680 0A4D  
                  l5672 0A39                    l5736 0933                    l5728 0903                    l5752 17D5  
                  l5760 16BD                    l5816 0CEB                    l5808 0CBE                    l5824 172D  
                  l5840 043D                    l5832 0424                    l5920 0DFE                    l5912 0DD1  
                  l5904 0DB2                    l6296 0596                    l6288 0582                    l5498 16D1  
                  l5586 0D81                    l5578 0D68                    l5666 0AFC                    l5658 0AE7  
                  l5690 0A70                    l5682 0A54                    l5674 0A3D                    l5738 0934  
                  l5754 17D9                    l5762 16C0                    l5770 09DD                    l5818 0CF2  
                  l5826 1734                    l5850 045A                    l5842 0441                    l5834 042A  
                  l5930 0E31                    l5922 0E05                    l5914 0DD6                    l5906 0DC3  
                  l6298 0598                    l5588 0D8D                    l5692 0A77                    l5684 0A59  
                  l5676 0A43                    l5668 0A2B                    l5748 16D6                    l5756 17E7  
                  l5780 09EF                    l5772 09DE                    l5764 09D0                    l5860 047F  
                  l5852 045F                    l5844 0447                    l5836 0435                    l5828 0406  
                  l5932 0E33                    l5924 0E11                    l5916 0DE8                    l5908 0DCA  
                  l5940 00B3                    l5686 0A5F                    l5678 0A49                    l5694 0A7F  
                  l5758 17EE                    l5790 0A05                    l5782 09F9                    l5774 09DF  
                  l5766 09D3                    l5870 04AC                    l5862 0485                    l5854 0461  
                  l5846 0452                    l5838 043C                    l5934 0E3B                    l5926 0E19  
                  l5918 0DFA                    l5950 00E6                    l5942 00C6                    l5696 0A83  
                  l5688 0A69                    l5792 0A0B                    l5784 09FF                    l5776 09E5  
                  l5768 09D9                    l5880 04E0                    l5872 04B6                    l5864 0490  
                  l5856 0467                    l5848 0456                    l5936 0E42                    l5928 0E27  
                  l5960 011C                    l5952 00E7                    l5944 00CD                    l5698 0A89  
                  l5794 0A12                    l5786 0A03                    l5778 09E8                    l5890 051B  
                  l5882 04F1                    l5874 04BC                    l5866 049D                    l5858 0475  
                  l5938 0E5C                    l5970 0144                    l5962 0122                    l5954 0114  
                  l5946 00CE                    l5788 0A04                    l5796 0C6B                    l5892 052B  
                  l5884 04F5                    l5876 04C7                    l5868 04A5                    l5980 016D  
                  l5972 014C                    l5964 0127                    l5956 0115                    l5948 00DF  
                  l5798 0C70                    l5894 052F                    l5886 0506                    l5878 04D4  
                  l5982 0175                    l5974 0153                    l5966 012B                    l5958 0116  
                  l5990 16E7                    l5896 054B                    l5888 0517                    l5984 017D  
                  l5976 0158                    l5968 013C                    l5992 1704                    l5898 0D97  
                  l5986 0184                    l5978 015C                    l5994 17AB                    l5988 01A0  
                  l5996 17B2                    _ADON 00F8                    l5998 17BB                    ?_pow 0064  
                  STR_1 0849                    STR_2 085E                    STR_3 0855                    u3000 0D57  
                  u3001 0D56                    u3010 0D5F                    u3011 0D5E                    u3100 0B35  
                  u3101 0B34                    u3030 0D7B                    u3031 0D7A                    u3040 0D81  
                  u3120 0B48                    u4000 0022                    u3025 0D6C                    u3121 0B47  
                  u3201 0AD7                    u4001 0021                    u3210 0AF7                    u3202 0AD8  
                  u4010 0037                    u3115 0B38                    u3211 0AF6                    u3203 0ADD  
                  u4011 0036                    u3140 0B5D                    u3060 0B02                    u3204 0ADE  
                  u3300 0A83                    u3220 0A30                    u4020 0054                    u4100 071A  
                  u3141 0B5C                    u3125 0B44                    u3061 0B01                    u3221 0A2F  
                  u4021 0053                    u3150 0B63                    u3070 0B0F                    u3230 0A3D  
                  u4030 008C                    u4110 07BF                    u3135 0B51                    u3071 0B0E  
                  u3215 0AF3                    u3231 0A3C                    u4031 008B                    u3080 0B21  
                  u3160 16B7                    u3240 0A49                    u3320 08F3                    u3400 0424  
                  u4040 0C62                    u4120 07DC                    u4200 05A1                    u3081 0B20  
                  u3161 16B6                    u3241 0A48                    u3321 08F2                    u4041 0C61  
                  u4121 07DB                    u4201 05A0                    u3170 0A95                    u3410 042A  
                  u4050 0F3E                    u4130 01AD                    u4210 0615                    u3171 0A94  
                  u3411 0429                    u4051 0F3D                    u4131 01AC                    u4211 0614  
                  u3260 0A5D                    u3340 17FE                    u3500 0485                    u3420 0434  
                  u4060 0F57                    u4140 01C2                    u4220 0656                    u3181 0AAD  
                  u3261 0A5C                    u3341 17FD                    u3501 0484                    u3421 0433  
                  u4061 0F56                    u4125 07D8                    u4141 01C1                    u3190 0ABF  
                  u3182 0AAE                    u3270 0A69                    u3350 09F5                    u3510 048D  
                  u3430 0441                    u4070 069D                    u4150 01D9                    u4230 065C  
                  u3095 0B26                    u3191 0ABE                    u3183 0AB3                    u3271 0A68  
                  u3255 0A4E                    u3335 0909                    u3351 09F4                    u3511 048C  
                  u4071 069C                    u4151 01D8                    u4231 065B                    u2800 16AC  
                  u3184 0AB4                    u3360 0A11                    u3600 04E0                    u3440 0447  
                  u4080 06BA                    u4160 01F6                    u4240 0675                    u2801 16AB  
                  u3361 0A10                    u3601 04DF                    u3441 0446                    u4081 06B9  
                  u4161 01F5                    u4241 0674                    u2810 16CE                    u3290 0A7D  
                  u3370 0CB0                    u3610 04F5                    u3530 04A3                    u3450 0451  
                  u4090 06EB                    u4170 022A                    u2811 16CD                    u3291 0A7C  
                  u3275 0A65                    u3371 0CAF                    u3611 04F4                    u3531 04A2  
                  u3451 0450                    u4091 06EA                    u4171 0229                    u2740 1755  
                  u2820 086F                    u3380 0CD3                    u3540 04AB                    u3460 045A  
                  u4180 02B4                    u2741 1754                    u2821 086E                    u3285 0A71  
                  u3381 0CD2                    u3621 0510                    u3541 04AA                    u3525 0491  
                  u3461 0459                    u2750 175C                    u2830 087D                    u2910 0BC8  
                  u3390 1742                    u3630 051B                    u3622 0517                    u3470 045F  
                  u3710 0E41                    u4190 0359                    u2751 175B                    u2831 087C  
                  u2911 0BC7                    u3391 1741                    u3631 051A                    u3471 045E  
                  u3711 0E40                    u4175 0226                    u4191 0358                    u2760 1763  
                  u2920 0BCC                    u2840 0B75                    u3560 04BC                    u3480 0474  
                  u3640 0DAA                    u3800 0152                    u3720 00C6                    u2761 1762  
                  u2921 0BCB                    u2905 0BBC                    u3385 0CCF                    u3561 04BB  
                  u3481 0473                    u3705 0E34                    u3641 0DA9                    u3801 0151  
                  u3721 00C5                    u2930 0BDD                    u2850 0B7C                    u3570 04C4  
                  u3650 0DC3                    u3810 015C                    u3730 00DF                    u2851 0B7B  
                  u3395 173E                    u3571 04C3                    u3555 04AD                    u3651 0DC2  
                  u3811 015B                    u3731 00DE                    u2780 17A9                    u2940 0BEA  
                  u3660 0DE1                    u3740 00F7                    u2781 17A8                    u3821 0165  
                  u2790 0981                    u2870 0B99                    u2950 0D04                    u3590 04DA  
                  u3670 0DF3                    u3822 016C                    u3750 0109                    u3910 089A  
                  u2775 1792                    u2791 0980                    u2935 0BD9                    u2871 0B98  
                  u2951 0D03                    u3591 04D9                    u3495 0476                    u3911 0899  
                  u2960 0D19                    u3760 012B                    u3920 0E66                    u2865 0B8B  
                  u3585 04C8                    u3665 0DDD                    u3761 012A                    u3745 00F3  
                  u3905 0887                    u3921 0E65                    u2890 0BB7                    u2970 0D34  
                  u3690 0E27                    u3850 0183                    u2795 097D                    u2891 0BB6  
                  u2971 0D33                    u3691 0E26                    u3675 0DEF                    u3851 0182  
                  u3835 016E                    u3771 0134                    u3755 0105                    u2980 0D3B  
                  u3772 013B                    u3860 17B2                    u3940 0E8E                    _RCIF 0065  
                  u2885 0BAA                    u2981 0D3A                    u2965 0D15                    u3685 0E12  
                  u3845 0176                    u3861 17B1                    u3941 0E8D                    u3870 098E  
                  u3950 0EAC                    u3695 0E23                    u3871 098D                    u3951 0EAB  
                  u3935 0E74                    u3960 0EC9                    u3785 013D                    u3961 0EC8  
                  u3890 09B2                    u2995 0D47                    u3795 0145                    u3891 09B1  
                  u3955 0EA8                    u3885 099F                    u3990 08DB                    u3975 0F0F  
                  u3991 08DA                    u3985 08CB                    _WREN 0C62                    _TXIF 0064  
                  _main 054C                    _ftoa 02CC            ___ftpack@arg 0070            ___ftpack@exp 0073  
                  _send 00C7                    btemp 007E                    exp@x 005A                    log@x 0054  
                  pow@x 0064                    pow@y 0067                    start 0000         __end_of_DelayMs 1765  
     ___bmul@multiplier 0073            ___ftmul@cntr 0031         read_a2d@channel 0027            ___ftmul@sign 0032  
          ___fttol@exp1 007D                   ??_exp 005D                   ??_log 0057            ___fttol@lval 0079  
                 ??_pow 006A                   ?_main 0070                   ?_ftoa 00A8         __end_of___awdiv 0B71  
                 _EEADR 010D         __end_of___ftadd 054C         __end_of___awmod 0A91                   _CARRY 0018  
       __end_of___ftdiv 0E5D         __end_of___ftneg 16BC         __end_of___ftmul 01A1         ___awdiv@divisor 0070  
       __end_of___ftsub 1724         __end_of___fttol 0D97         ___awdiv@counter 0075                   _RCREG 001A  
                 _RCSTA 0018                   _SPBRG 0099                   _PORTD 0008                   _TRISA 0085  
                 _TRISB 0086                   _TRISD 0088                   _TRISE 0089                   _TXREG 0019  
                 _TXSTA 0098          ?_putchOnSerial 0070            ___lltoft@exp 007D                   _nRBPU 040F  
         ___awtoft@sign 0022                   _getch 16C8                   _floor 000B                   _ldexp 0E5D  
                 _frexp 08EC                   _errno 00BB           lcd_init@_dcnt 0075           ___ftpack@sign 0074  
                 ftoa@i 00B3                   ftoa@n 00A8                   pclath 000A         __end_of_reverse 0983  
                 pow@yi 00A4                   status 0003                   wtemp0 007E        __end_of_DelaySec 1744  
           ldexp@newexp 0043            __end_of_main 0694            __end_of_ftoa 0406                  ??_main 006D  
                ??_ftoa 006B           ___fttol@sign1 0078                  ?_getch 0070                  _ADCON0 001F  
                _ADCON1 009F                  ?_floor 0040                  ?_ldexp 0040                  ?_frexp 0070  
      __end_of___altoft 09D0                  _ADRESH 001E                  _EEDATA 010C                  _EECON1 018C  
                _EECON2 018D        ___awdiv@dividend 0072        __end_of___awtoft 17D5        __end_of___ftpack 0BEC  
      __end_of___lbtoft 1705        __end_of___lltoft 08B3               ??_DelayMs 0070                  _TRISC6 043E  
                _TRISC7 043F             intToStr@str 0022        __end_of_lcd_init 0A2B        __end_of_lcd_goto 16C8  
                ___bmul 0869        __end_of_lcd_puts 1800                  ___ftge 0A91               ??___awdiv 0074  
             ??___ftadd 0039               ??___awmod 0074               ??___ftdiv 0020               ??___ftneg 007B  
             ??___ftmul 0029               ??___ftsub 007E               ??___fttol 0074        __end_of_init_a2d 16A4  
      __end_of_intToStr 0CF3        __end_of_read_a2d 08EC        ___awdiv@quotient 0077         ___awmod@divisor 0070  
       ___awmod@counter 0075                  floor@i 0044                  floor@x 0040                  exp@exp 0061  
 ___ftmul@f3_as_product 002E                  log@exp 0058         ??_putchOnSerial 0070               ??_reverse 0072  
            ___altoft@c 0020              ___ftadd@f1 0033              ___ftadd@f2 0036              ___ftge@ff1 0070  
            ___ftge@ff2 0073            eval_poly@res 0051              ___ftdiv@f1 007B              ___ftdiv@f2 0078  
            ___ftdiv@f3 0025              ___ftneg@f1 0078              ___awtoft@c 007B              ___lbtoft@c 007B  
   ___bmul@multiplicand 0070              ___ftmul@f1 0023              ___ftmul@f2 0026              ___ftsub@f1 0043  
            ___ftsub@f2 0040              ___fttol@f1 0070          __pcstackCOMMON 0070            __pidataBANK1 0009  
            ___lltoft@c 0078           __end_of_getch 16D6           __end_of_floor 00B3           __end_of_ldexp 0F27  
         __end_of_frexp 0936               ?_DelaySec 0074      __size_of_lcd_clear 0010                 ??_getch 0070  
               ??_floor 0043      __size_of_lcd_write 0025                 ??_ldexp 0045                 ??_frexp 0074  
            __pbssBANK1 00B8      __size_of_eval_poly 007F              __pmaintext 054C                 ?___bmul 0070  
               ?___ftge 0070               ?___altoft 0020               ?___awtoft 007B               ?___ftpack 0070  
             ?___lbtoft 0078               ?___lltoft 0078              ??_DelaySec 0076              _ldexp$3573 0047  
             ?_lcd_init 0070               ?_lcd_goto 0070               ?_lcd_puts 0073                 _DelayMs 1744  
             ?_init_a2d 0070               ?_intToStr 0020               ?_read_a2d 0024       __end_of_lcd_clear 16E6  
     putchOnSerial@byte 0070         __size_of___bmul 0018         __size_of___ftge 006C                 ___awdiv 0AFD  
               ___ftadd 0406                 ___awmod 0A2B                 ___ftdiv 0D97       __end_of_lcd_write 17AB  
               ___ftneg 16B0                 ___ftmul 00B3                 ___ftsub 1705                 ___fttol 0CF3  
            ??___altoft 0024              ??___awtoft 0020              ??___ftpack 0075              ??___lbtoft 0020  
     __end_of_eval_poly 0C6B              ??___lltoft 007C      lcd_init@_dcnt_1244 0076            __size_of_exp 016C  
          __size_of_log 00D9            __size_of_pow 012B        ___awmod@dividend 0072                 _reverse 0936  
               main@rec 006E              ??_lcd_init 0074              ??_lcd_goto 0073              ??_lcd_puts 0075  
  end_of_initialization 1782               DelaySec@i 0077                 ftoa@res 00AB                 exp@sign 0063  
            ??_init_a2d 0070              ??_intToStr 0025              ??_read_a2d 007C             reverse@temp 0075  
               pow@sign 00A3          lcd_write@_dcnt 0071             ___ftdiv@exp 0028              lcd_write@c 0072  
           ___ftmul@exp 002D          __end_of___bmul 0881          __end_of___ftge 0AFD            DelayMs@_dcnt 0073  
            floor@expon 0047     start_initialization 1765   __end_of_putchOnSerial 16B0              eval_poly@d 004D  
            eval_poly@n 004E              eval_poly@x 004A              ldexp@value 0040             __end_of_exp 0800  
           __end_of_log 1000             __end_of_pow 02CC       __size_of_DelaySec 0020              frexp@value 0070  
              ??___bmul 0071                ??___ftge 0076             __pdataBANK1 00C7       __size_of___altoft 004D  
     __size_of___awtoft 002A       __size_of___ftpack 007B       __size_of___lbtoft 001F       __size_of___lltoft 0032  
         __pcstackBANK0 0020           __pcstackBANK1 00A0                ?_DelayMs 0070       __size_of_lcd_init 005B  
     __size_of_lcd_goto 000C       __size_of_lcd_puts 002B       __size_of_init_a2d 000C       __size_of_intToStr 0088  
     __size_of_read_a2d 0039                ?___awdiv 0070                ?___ftadd 0033                ?___awmod 0070  
             _ftoa$3812 00AE               __ptext800 0881               __ptext801 0983               __ptext810 16BC  
             __ptext802 17AB               __ptext811 17D5               __ptext803 16E6               __ptext820 0869  
             __ptext812 16D6               __ptext804 00B3               __ptext821 16C8               __ptext813 08EC  
             __ptext805 0D97               __ptext822 16A4               __ptext814 0A2B               __ptext806 0406  
             __ptext823 1698               __ptext815 0A91               __ptext807 1724               __ptext824 0936  
             __ptext816 16B0               __ptext808 0C6B               __ptext825 1786               __ptext817 0AFD  
             __ptext809 09D0               __ptext826 1744               __ptext818 0CF3               __ptext827 0000  
             __ptext819 0B71               __ptext791 02CC               __ptext792 01A1               __ptext793 0694  
             __ptext794 0F27               __ptext795 0BEC               __ptext796 000B               __ptext797 1705  
              ?___ftdiv 0078               __ptext798 08B3               __ptext799 0E5D                ?___ftneg 0078  
              ?___ftmul 0023                ?___ftsub 0040                ?___fttol 0070               _lcd_clear 16D6  
             __pstrings 0800               _lcd_write 1786               _eval_poly 0BEC                ?_reverse 0070  
        __size_of_getch 000E          __size_of_floor 00A8          __size_of_ldexp 00CA          __size_of_frexp 004A  
              DelayMs@i 0072              reverse@len 0070              reverse@str 007B                _GO_nDONE 00FA  
            ?_lcd_clear 0070             __stringbase 080F              ?_lcd_write 0070              ?_eval_poly 004A  
              _DelaySec 1724               lcd_puts@s 0073               ftoa@fpart 00B5               ftoa@ipart 00B1  
           DelaySec@sec 0074        __size_of_DelayMs 0021               frexp@eptr 0073               intToStr@d 0023  
             intToStr@i 0027               intToStr@x 0020        __size_of___awdiv 0074        __size_of___ftadd 0146  
      __size_of___awmod 0066        __size_of___ftdiv 00C6        __size_of___ftneg 000C                ___altoft 0983  
      __size_of___ftmul 00EE        __size_of___ftsub 001F        __size_of___fttol 00A4                ___awtoft 17AB  
              ___ftpack 0B71                ___lbtoft 16E6                ___lltoft 0881                _exp$3527 005E  
      __size_of_reverse 004D                _lcd_init 09D0                _lcd_goto 16BC                _lcd_puts 17D5  
              _pow$3813 00A0                _init_a2d 1698                _intToStr 0C6B                _read_a2d 08B3  
         __size_of_main 0148           __size_of_ftoa 013A             ??_lcd_clear 0074             ??_lcd_write 0070  
              exp@coeff 0810                log@coeff 082E              DelayMs@cnt 0071             ??_eval_poly 0050  
             stringcode 080A                reverse@i 0077                reverse@j 0079  __size_of_putchOnSerial 000C  
        ftoa@afterpoint 00AC                stringdir 080A                stringtab 0800  
