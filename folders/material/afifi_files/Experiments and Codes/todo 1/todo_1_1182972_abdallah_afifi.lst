

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 04 10:29:28 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 6 "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments 
                                 and Codes\todo 1\key.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 6 "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments 
                                 and Codes\todo 1\key.c"
    45  2007  FF7A               	dw 0xFFFF & 0xFFFB & 0xFF7F & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_DelayMs
    47                           	FNCALL	_main,_lcd_init
    48                           	FNCALL	_main,_lcd_clear
    49                           	FNCALL	_main,_get_int
    50                           	FNCALL	_main,_lcd_putch
    51                           	FNCALL	_main,_get_int_len
    52                           	FNCALL	_main,_lcd_goto
    53                           	FNCALL	_main,_lcd_puts
    54                           	FNCALL	_main,___awdiv
    55                           	FNCALL	_main,___awmod
    56                           	FNCALL	_lcd_puts,_lcd_write
    57                           	FNCALL	_lcd_goto,_lcd_write
    58                           	FNCALL	_get_int_len,___awdiv
    59                           	FNCALL	_get_int,___awdiv
    60                           	FNCALL	_lcd_clear,_lcd_write
    61                           	FNCALL	_lcd_clear,_DelayMs
    62                           	FNCALL	_lcd_init,_DelayMs
    63                           	FNCALL	_lcd_init,_lcd_write
    64                           	FNROOT	_main
    65                           	global	_id
    66                           psect	idataBANK0,class=CODE,space=0,delta=2
    67                           global __pidataBANK0
    68  03C9                     __pidataBANK0:
    69                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\key.c"
    70                           	line	16
    71                           
    72                           ;initializer for _id
    73  03C9  34FC               	retlw	0FCh
    74  03CA  340C               	retlw	0Ch
    75                           
    76                           	global	_col
    77                           	global	_pressed_key
    78                           	global	_row
    79                           	global	_start_displaying
    80                           	global	_x1
    81                           	global	_x2
    82                           	global	_Chkey
    83                           	global	_op
    84                           	global	_PORTB
    85  0006                     _PORTB	set	6
    86                           	global	_PORTC
    87  0007                     _PORTC	set	7
    88                           	global	_PORTD
    89  0008                     _PORTD	set	8
    90                           	global	_CARRY
    91  0018                     _CARRY	set	24
    92                           	global	_GIE
    93  005F                     _GIE	set	95
    94                           	global	_RC1
    95  0039                     _RC1	set	57
    96                           	global	_RC5
    97  003D                     _RC5	set	61
    98                           	global	_RC6
    99  003E                     _RC6	set	62
   100                           	global	_RC7
   101  003F                     _RC7	set	63
   102                           	global	_RE0
   103  0048                     _RE0	set	72
   104                           	global	_RE1
   105  0049                     _RE1	set	73
   106                           	global	_RE2
   107  004A                     _RE2	set	74
   108                           	global	_ADCON1
   109  009F                     _ADCON1	set	159
   110                           	global	_TRISB
   111  0086                     _TRISB	set	134
   112                           	global	_TRISC
   113  0087                     _TRISC	set	135
   114                           	global	_TRISD
   115  0088                     _TRISD	set	136
   116                           	global	_TRISE
   117  0089                     _TRISE	set	137
   118                           	global	_nRBPU
   119  040F                     _nRBPU	set	1039
   120                           	global	_EEADR
   121  010D                     _EEADR	set	269
   122                           	global	_EEDATA
   123  010C                     _EEDATA	set	268
   124                           	global	_EECON1
   125  018C                     _EECON1	set	396
   126                           	global	_EECON2
   127  018D                     _EECON2	set	397
   128                           	global	_RD
   129  0C60                     _RD	set	3168
   130                           	global	_WR
   131  0C61                     _WR	set	3169
   132                           	global	_WREN
   133  0C62                     _WREN	set	3170
   134                           psect	strings,class=STRING,delta=2
   135                           global __pstrings
   136  0003                     __pstrings:
   137                           ;	global	stringdir,stringtab,__stringbase
   138  0003                     stringtab:
   139                           ;	String table - string pointers are 1 byte each
   140  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   141  0003  3000               movlw high(stringdir)
   142  0004  008A               movwf pclath
   143  0005  0804               movf fsr,w
   144  0006  0A84               incf fsr
   145  0007  0782               	addwf pc
   146  0008                     __stringbase:
   147  0008  3400               	retlw	0
   148                           psect	strings
   149                           	
   150  0009                     STR_1:	
   151  0009  3449               	retlw	73	;'I'
   152  000A  346E               	retlw	110	;'n'
   153  000B  3476               	retlw	118	;'v'
   154  000C  3461               	retlw	97	;'a'
   155  000D  346C               	retlw	108	;'l'
   156  000E  3469               	retlw	105	;'i'
   157  000F  3464               	retlw	100	;'d'
   158  0010  3420               	retlw	32	;' '
   159  0011  3449               	retlw	73	;'I'
   160  0012  3464               	retlw	100	;'d'
   161  0013  3400               	retlw	0
   162                           psect	strings
   163                           	file	"todo_1_1182972_abdallah_afifi.as"
   164                           	line	#
   165                           psect cinit,class=CODE,delta=2
   166                           global start_initialization
   167  03E7                     start_initialization:
   168                           
   169                           psect	bssBANK0,class=BANK0,space=1
   170                           global __pbssBANK0
   171  0020                     __pbssBANK0:
   172  0020                     _col:
   173  0020                            ds      2
   174                           
   175  0022                     _pressed_key:
   176  0022                            ds      2
   177                           
   178  0024                     _row:
   179  0024                            ds      2
   180                           
   181  0026                     _start_displaying:
   182  0026                            ds      2
   183                           
   184  0028                     _x1:
   185  0028                            ds      2
   186                           
   187  002A                     _x2:
   188  002A                            ds      2
   189                           
   190  002C                     _Chkey:
   191  002C                            ds      1
   192                           
   193  002D                     _op:
   194  002D                            ds      1
   195                           
   196                           psect	dataBANK0,class=BANK0,space=1
   197                           global __pdataBANK0
   198  003C                     __pdataBANK0:
   199                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\key.c"
   200  003C                     _id:
   201  003C                            ds      2
   202                           
   203                           ; Clear objects allocated to BANK0
   204                           psect cinit,class=CODE,delta=2
   205  03E7  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   206  03E8  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   207  03E9  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   208  03EA  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   209  03EB  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   210  03EC  01A5               	clrf	((__pbssBANK0)+5)&07Fh
   211  03ED  01A6               	clrf	((__pbssBANK0)+6)&07Fh
   212  03EE  01A7               	clrf	((__pbssBANK0)+7)&07Fh
   213  03EF  01A8               	clrf	((__pbssBANK0)+8)&07Fh
   214  03F0  01A9               	clrf	((__pbssBANK0)+9)&07Fh
   215  03F1  01AA               	clrf	((__pbssBANK0)+10)&07Fh
   216  03F2  01AB               	clrf	((__pbssBANK0)+11)&07Fh
   217  03F3  01AC               	clrf	((__pbssBANK0)+12)&07Fh
   218  03F4  01AD               	clrf	((__pbssBANK0)+13)&07Fh
   219                           ; Initialize objects allocated to BANK0
   220                           	global __pidataBANK0
   221                           psect cinit,class=CODE,delta=2
   222  03F5  120A  118A  23C9   	fcall	__pidataBANK0+0		;fetch initializer
              120A  118A         
   223  03FA  00BC               	movwf	__pdataBANK0+0&07fh		
   224  03FB  120A  118A  23CA   	fcall	__pidataBANK0+1		;fetch initializer
              120A  118A         
   225  0400  00BD               	movwf	__pdataBANK0+1&07fh		
   226                           psect cinit,class=CODE,delta=2
   227                           global end_of_initialization
   228                           
   229                           ;End of C runtime variable initialization code
   230                           
   231  0401                     end_of_initialization:
   232  0401  0183               clrf status
   233  0402  120A  118A  2E55   ljmp _main	;jump to C main() function
   234                           psect	cstackCOMMON,class=COMMON,space=1
   235                           global __pcstackCOMMON
   236  0070                     __pcstackCOMMON:
   237                           	global	?_lcd_init
   238  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   239                           	global	?_lcd_clear
   240  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   241                           	global	?_lcd_putch
   242  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   243                           	global	??_lcd_putch
   244  0070                     ??_lcd_putch:	; 0 bytes @ 0x0
   245                           	global	?_lcd_goto
   246  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   247                           	global	?_lcd_puts
   248  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   249                           	global	?_DelayMs
   250  0070                     ?_DelayMs:	; 0 bytes @ 0x0
   251                           	global	??_DelayMs
   252  0070                     ??_DelayMs:	; 0 bytes @ 0x0
   253                           	global	?_main
   254  0070                     ?_main:	; 0 bytes @ 0x0
   255                           	global	?_lcd_write
   256  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   257                           	global	??_lcd_write
   258  0070                     ??_lcd_write:	; 0 bytes @ 0x0
   259                           	global	?___awdiv
   260  0070                     ?___awdiv:	; 2 bytes @ 0x0
   261                           	global	?___awmod
   262  0070                     ?___awmod:	; 2 bytes @ 0x0
   263                           	global	___awdiv@divisor
   264  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   265                           	global	___awmod@divisor
   266  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   267  0070                     	ds	1
   268                           	global	DelayMs@cnt
   269  0071                     DelayMs@cnt:	; 1 bytes @ 0x1
   270                           	global	lcd_write@_dcnt
   271  0071                     lcd_write@_dcnt:	; 1 bytes @ 0x1
   272  0071                     	ds	1
   273                           	global	DelayMs@i
   274  0072                     DelayMs@i:	; 1 bytes @ 0x2
   275                           	global	lcd_write@c
   276  0072                     lcd_write@c:	; 1 bytes @ 0x2
   277                           	global	___awdiv@dividend
   278  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   279                           	global	___awmod@dividend
   280  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   281  0072                     	ds	1
   282                           	global	??_lcd_goto
   283  0073                     ??_lcd_goto:	; 0 bytes @ 0x3
   284                           	global	??_lcd_puts
   285  0073                     ??_lcd_puts:	; 0 bytes @ 0x3
   286                           	global	DelayMs@_dcnt
   287  0073                     DelayMs@_dcnt:	; 1 bytes @ 0x3
   288                           	global	lcd_putch@_dcnt
   289  0073                     lcd_putch@_dcnt:	; 1 bytes @ 0x3
   290                           	global	lcd_goto@pos
   291  0073                     lcd_goto@pos:	; 1 bytes @ 0x3
   292  0073                     	ds	1
   293                           	global	??_lcd_init
   294  0074                     ??_lcd_init:	; 0 bytes @ 0x4
   295                           	global	??_lcd_clear
   296  0074                     ??_lcd_clear:	; 0 bytes @ 0x4
   297                           	global	??___awdiv
   298  0074                     ??___awdiv:	; 0 bytes @ 0x4
   299                           	global	??___awmod
   300  0074                     ??___awmod:	; 0 bytes @ 0x4
   301                           	global	lcd_puts@s
   302  0074                     lcd_puts@s:	; 1 bytes @ 0x4
   303                           	global	lcd_putch@c
   304  0074                     lcd_putch@c:	; 1 bytes @ 0x4
   305  0074                     	ds	1
   306                           	global	lcd_init@_dcnt
   307  0075                     lcd_init@_dcnt:	; 1 bytes @ 0x5
   308                           	global	___awdiv@counter
   309  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   310                           	global	___awmod@counter
   311  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   312  0075                     	ds	1
   313                           	global	lcd_init@_dcnt_2132
   314  0076                     lcd_init@_dcnt_2132:	; 1 bytes @ 0x6
   315                           	global	___awdiv@sign
   316  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   317                           	global	___awmod@sign
   318  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   319  0076                     	ds	1
   320                           	global	___awdiv@quotient
   321  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   322  0077                     	ds	2
   323                           	global	?_get_int
   324  0079                     ?_get_int:	; 2 bytes @ 0x9
   325                           	global	?_get_int_len
   326  0079                     ?_get_int_len:	; 2 bytes @ 0x9
   327                           	global	get_int_len@id
   328  0079                     get_int_len@id:	; 2 bytes @ 0x9
   329                           	global	get_int@id
   330  0079                     get_int@id:	; 2 bytes @ 0x9
   331  0079                     	ds	2
   332                           	global	??_get_int_len
   333  007B                     ??_get_int_len:	; 0 bytes @ 0xB
   334                           	global	get_int@pos
   335  007B                     get_int@pos:	; 2 bytes @ 0xB
   336  007B                     	ds	2
   337                           	global	??_get_int
   338  007D                     ??_get_int:	; 0 bytes @ 0xD
   339  007D                     	ds	1
   340                           psect	cstackBANK0,class=BANK0,space=1
   341                           global __pcstackBANK0
   342  002E                     __pcstackBANK0:
   343                           	global	get_int_len@len
   344  002E                     get_int_len@len:	; 2 bytes @ 0x0
   345                           	global	get_int@i
   346  002E                     get_int@i:	; 2 bytes @ 0x0
   347  002E                     	ds	2
   348                           	global	get_int_len@temp
   349  0030                     get_int_len@temp:	; 2 bytes @ 0x2
   350                           	global	get_int@val
   351  0030                     get_int@val:	; 2 bytes @ 0x2
   352  0030                     	ds	2
   353                           	global	??_main
   354  0032                     ??_main:	; 0 bytes @ 0x4
   355  0032                     	ds	4
   356                           	global	main@i
   357  0036                     main@i:	; 2 bytes @ 0x8
   358  0036                     	ds	2
   359                           	global	main@i_1278
   360  0038                     main@i_1278:	; 2 bytes @ 0xA
   361  0038                     	ds	2
   362                           	global	main@sum
   363  003A                     main@sum:	; 2 bytes @ 0xC
   364  003A                     	ds	2
   365 ;;Data sizes: Strings 11, constant 0, data 2, bss 14, persistent 0 stack 0
   366 ;;Auto spaces:   Size  Autos    Used
   367 ;; COMMON          14     14      14
   368 ;; BANK0           80     14      30
   369 ;; BANK1           80      0       0
   370 ;; BANK3           96      0       0
   371 ;; BANK2           96      0       0
   372                           
   373 ;;
   374 ;; Pointer list with targets:
   375                           
   376 ;; ?___awmod	int  size(1) Largest target is 0
   377 ;;
   378 ;; ?___awdiv	int  size(1) Largest target is 0
   379 ;;
   380 ;; ?_get_int_len	int  size(1) Largest target is 0
   381 ;;
   382 ;; ?_get_int	int  size(1) Largest target is 0
   383 ;;
   384 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 11
   385 ;;		 -> STR_1(CODE[11]), 
   386 ;;
   387                           
   388                           
   389 ;;
   390 ;; Critical Paths under _main in COMMON
   391 ;;
   392 ;;   _main->_get_int
   393 ;;   _lcd_puts->_lcd_write
   394 ;;   _lcd_goto->_lcd_write
   395 ;;   _get_int_len->___awdiv
   396 ;;   _get_int->___awdiv
   397 ;;   _lcd_clear->_DelayMs
   398 ;;   _lcd_init->_DelayMs
   399 ;;
   400 ;; Critical Paths under _main in BANK0
   401 ;;
   402 ;;   _main->_get_int
   403 ;;   _main->_get_int_len
   404 ;;
   405 ;; Critical Paths under _main in BANK1
   406 ;;
   407 ;;   None.
   408 ;;
   409 ;; Critical Paths under _main in BANK3
   410 ;;
   411 ;;   None.
   412 ;;
   413 ;; Critical Paths under _main in BANK2
   414 ;;
   415 ;;   None.
   416                           
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   419 ;;
   420                           
   421 ;;
   422 ;;Call Graph Tables:
   423 ;;
   424 ;; ---------------------------------------------------------------------------------
   425 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   426 ;; ---------------------------------------------------------------------------------
   427 ;; (0) _main                                                10    10      0    2302
   428 ;;                                              4 BANK0     10    10      0
   429 ;;                            _DelayMs
   430 ;;                           _lcd_init
   431 ;;                          _lcd_clear
   432 ;;                            _get_int
   433 ;;                          _lcd_putch
   434 ;;                        _get_int_len
   435 ;;                           _lcd_goto
   436 ;;                           _lcd_puts
   437 ;;                            ___awdiv
   438 ;;                            ___awmod
   439 ;; ---------------------------------------------------------------------------------
   440 ;; (1) _lcd_puts                                             2     2      0     112
   441 ;;                                              3 COMMON     2     2      0
   442 ;;                          _lcd_write
   443 ;; ---------------------------------------------------------------------------------
   444 ;; (1) _lcd_goto                                             1     1      0      89
   445 ;;                                              3 COMMON     1     1      0
   446 ;;                          _lcd_write
   447 ;; ---------------------------------------------------------------------------------
   448 ;; (1) _get_int_len                                          6     4      2     392
   449 ;;                                              9 COMMON     2     0      2
   450 ;;                                              0 BANK0      4     4      0
   451 ;;                            ___awdiv
   452 ;; ---------------------------------------------------------------------------------
   453 ;; (1) _get_int                                              9     5      4     414
   454 ;;                                              9 COMMON     5     1      4
   455 ;;                                              0 BANK0      4     4      0
   456 ;;                            ___awdiv
   457 ;; ---------------------------------------------------------------------------------
   458 ;; (1) _lcd_clear                                            0     0      0     135
   459 ;;                          _lcd_write
   460 ;;                            _DelayMs
   461 ;; ---------------------------------------------------------------------------------
   462 ;; (1) _lcd_init                                             3     3      0     181
   463 ;;                                              4 COMMON     3     3      0
   464 ;;                            _DelayMs
   465 ;;                          _lcd_write
   466 ;; ---------------------------------------------------------------------------------
   467 ;; (1) ___awmod                                              7     3      4     296
   468 ;;                                              0 COMMON     7     3      4
   469 ;; ---------------------------------------------------------------------------------
   470 ;; (1) ___awdiv                                              9     5      4     300
   471 ;;                                              0 COMMON     9     5      4
   472 ;; ---------------------------------------------------------------------------------
   473 ;; (2) _lcd_write                                            3     3      0      67
   474 ;;                                              0 COMMON     3     3      0
   475 ;; ---------------------------------------------------------------------------------
   476 ;; (1) _lcd_putch                                            5     5      0      89
   477 ;;                                              0 COMMON     5     5      0
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (2) _DelayMs                                              4     4      0      68
   480 ;;                                              0 COMMON     4     4      0
   481 ;; ---------------------------------------------------------------------------------
   482 ;; Estimated maximum stack depth 2
   483 ;; ---------------------------------------------------------------------------------
   484                           
   485 ;; Call Graph Graphs:
   486                           
   487 ;; _main (ROOT)
   488 ;;   _DelayMs
   489 ;;   _lcd_init
   490 ;;     _DelayMs
   491 ;;     _lcd_write
   492 ;;   _lcd_clear
   493 ;;     _lcd_write
   494 ;;     _DelayMs
   495 ;;   _get_int
   496 ;;     ___awdiv
   497 ;;   _lcd_putch
   498 ;;   _get_int_len
   499 ;;     ___awdiv
   500 ;;   _lcd_goto
   501 ;;     _lcd_write
   502 ;;   _lcd_puts
   503 ;;     _lcd_write
   504 ;;   ___awdiv
   505 ;;   ___awmod
   506 ;;
   507                           
   508 ;; Address spaces:
   509                           
   510 ;;Name               Size   Autos  Total    Cost      Usage
   511 ;;BANK3               60      0       0       9        0.0%
   512 ;;BITBANK3            60      0       0       8        0.0%
   513 ;;SFR3                 0      0       0       4        0.0%
   514 ;;BITSFR3              0      0       0       4        0.0%
   515 ;;BANK2               60      0       0      11        0.0%
   516 ;;BITBANK2            60      0       0      10        0.0%
   517 ;;SFR2                 0      0       0       5        0.0%
   518 ;;BITSFR2              0      0       0       5        0.0%
   519 ;;SFR1                 0      0       0       2        0.0%
   520 ;;BITSFR1              0      0       0       2        0.0%
   521 ;;BANK1               50      0       0       7        0.0%
   522 ;;BITBANK1            50      0       0       6        0.0%
   523 ;;CODE                 0      0       0       0        0.0%
   524 ;;DATA                 0      0      2E      12        0.0%
   525 ;;ABS                  0      0      2C       3        0.0%
   526 ;;NULL                 0      0       0       0        0.0%
   527 ;;STACK                0      0       2       2        0.0%
   528 ;;BANK0               50      E      1E       5       37.5%
   529 ;;BITBANK0            50      0       0       4        0.0%
   530 ;;SFR0                 0      0       0       1        0.0%
   531 ;;BITSFR0              0      0       0       1        0.0%
   532 ;;COMMON               E      E       E       1      100.0%
   533 ;;BITCOMMON            E      0       0       0        0.0%
   534 ;;EEDATA             100      0       0       0        0.0%
   535                           
   536                           	global	_main
   537                           psect	maintext,global,class=CODE,delta=2
   538                           global __pmaintext
   539  0655                     __pmaintext:
   540                           
   541 ;; *************** function _main *****************
   542 ;; Defined at:
   543 ;;		line 21 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \key.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  i               2   10[BANK0 ] int 
   548 ;;  sum             2   12[BANK0 ] int 
   549 ;;  i               2    8[BANK0 ] int 
   550 ;; Return value:  Size  Location     Type
   551 ;;		None               void
   552 ;; Registers used:
   553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : 17F/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       6       0       0       0
   561 ;;      Temps:          0       4       0       0       0
   562 ;;      Totals:         0      10       0       0       0
   563 ;;Total ram usage:       10 bytes
   564 ;; Hardware stack levels required when called:    2
   565 ;; This function calls:
   566 ;;		_DelayMs
   567 ;;		_lcd_init
   568 ;;		_lcd_clear
   569 ;;		_get_int
   570 ;;		_lcd_putch
   571 ;;		_get_int_len
   572 ;;		_lcd_goto
   573 ;;		_lcd_puts
   574 ;;		___awdiv
   575 ;;		___awmod
   576 ;; This function is called by:
   577 ;;		Startup code after reset
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           psect	maintext
   581                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\key.c"
   582                           	line	21
   583                           	global	__size_of_main
   584  01AB                     	__size_of_main	equ	__end_of_main-_main
   585                           	
   586  0655                     _main:	
   587                           	opt	stack 6
   588                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   589                           	line	23
   590                           	
   591  0655                     l4045:	
   592                           ;key.c: 23: nRBPU = 0;
   593  0655  1683               	bsf	status, 5	;RP0=1, select bank1
   594  0656  1303               	bcf	status, 6	;RP1=0, select bank1
   595  0657  1381               	bcf	(1039/8)^080h,(1039)&7
   596                           	line	24
   597                           	
   598  0658                     l4047:	
   599                           ;key.c: 24: TRISE = 0;
   600  0658  0189               	clrf	(137)^080h	;volatile
   601                           	line	25
   602                           ;key.c: 25: TRISC = 0;
   603  0659  0187               	clrf	(135)^080h	;volatile
   604                           	line	26
   605                           ;key.c: 26: TRISD = 0;
   606  065A  0188               	clrf	(136)^080h	;volatile
   607                           	line	27
   608                           	
   609  065B                     l4049:	
   610                           ;key.c: 27: ADCON1 = 7;
   611  065B  3007               	movlw	(07h)
   612  065C  009F               	movwf	(159)^080h	;volatile
   613                           	line	28
   614                           	
   615  065D                     l4051:	
   616                           ;key.c: 28: RE2 = 0;
   617  065D  1283               	bcf	status, 5	;RP0=0, select bank0
   618  065E  1303               	bcf	status, 6	;RP1=0, select bank0
   619  065F  1109               	bcf	(74/8),(74)&7
   620                           	line	29
   621                           	
   622  0660                     l4053:	
   623                           ;key.c: 29: DelayMs(100);
   624  0660  3064               	movlw	(064h)
   625  0661  120A  118A  2405   	fcall	_DelayMs
              120A  118A         
   626                           	line	30
   627                           	
   628  0666                     l4055:	
   629                           ;key.c: 30: lcd_init();
   630  0666  120A  118A  2520   	fcall	_lcd_init
              120A  118A         
   631                           	line	31
   632                           	
   633  066B                     l4057:	
   634                           ;key.c: 31: lcd_clear();
   635  066B  120A  118A  23D7   	fcall	_lcd_clear
              120A  118A         
   636                           	line	32
   637                           	
   638  0670                     l4059:	
   639                           ;key.c: 32: op = '.';
   640  0670  302E               	movlw	(02Eh)
   641  0671  1283               	bcf	status, 5	;RP0=0, select bank0
   642  0672  1303               	bcf	status, 6	;RP1=0, select bank0
   643  0673  00B2               	movwf	(??_main+0)+0
   644  0674  0832               	movf	(??_main+0)+0,w
   645  0675  00AD               	movwf	(_op)
   646                           	line	40
   647                           	
   648  0676                     l4061:	
   649                           ;key.c: 40: for(int i = 0; i < 3; i++)
   650  0676  01B6               	clrf	(main@i)
   651  0677  01B7               	clrf	(main@i+1)
   652                           	
   653  0678                     l4063:	
   654  0678  0837               	movf	(main@i+1),w
   655  0679  3A80               	xorlw	80h
   656  067A  00FF               	movwf	btemp+1
   657  067B  3080               	movlw	(high(03h))^80h
   658  067C  027F               	subwf	btemp+1,w
   659  067D  1D03               	skipz
   660  067E  2E81               	goto	u3055
   661  067F  3003               	movlw	low(03h)
   662  0680  0236               	subwf	(main@i),w
   663  0681                     u3055:
   664                           
   665  0681  1C03               	skipc
   666  0682  2E84               	goto	u3051
   667  0683  2E85               	goto	u3050
   668  0684                     u3051:
   669  0684  2E87               	goto	l4067
   670  0685                     u3050:
   671  0685  2EC0               	goto	l4073
   672                           	
   673  0686                     l4065:	
   674  0686  2EC0               	goto	l4073
   675                           	line	41
   676                           	
   677  0687                     l729:	
   678                           	line	43
   679                           	
   680  0687                     l4067:	
   681                           ;key.c: 41: {
   682                           ;key.c: 43: lcd_putch(get_int(id,7-i) + 48);
   683  0687  1283               	bcf	status, 5	;RP0=0, select bank0
   684  0688  1303               	bcf	status, 6	;RP1=0, select bank0
   685  0689  083D               	movf	(_id+1),w
   686  068A  01FA               	clrf	(?_get_int+1)
   687  068B  07FA               	addwf	(?_get_int+1)
   688  068C  083C               	movf	(_id),w
   689  068D  01F9               	clrf	(?_get_int)
   690  068E  07F9               	addwf	(?_get_int)
   691                           
   692  068F  0936               	comf	(main@i),w
   693  0690  00B2               	movwf	(??_main+0)+0
   694  0691  0937               	comf	(main@i+1),w
   695  0692  00B3               	movwf	((??_main+0)+0+1)
   696  0693  0AB2               	incf	(??_main+0)+0,f
   697  0694  1903               	skipnz
   698  0695  0AB3               	incf	((??_main+0)+0+1),f
   699  0696  0832               	movf	0+(??_main+0)+0,w
   700  0697  3E07               	addlw	low(07h)
   701  0698  00FB               	movwf	0+(?_get_int)+02h
   702  0699  0833               	movf	1+(??_main+0)+0,w
   703  069A  1803               	skipnc
   704  069B  3E01               	addlw	1
   705  069C  3E00               	addlw	high(07h)
   706  069D  00FC               	movwf	1+0+(?_get_int)+02h
   707  069E  120A  118A  24DA   	fcall	_get_int
              120A  118A         
   708  06A3  0879               	movf	(0+(?_get_int)),w
   709  06A4  3E30               	addlw	030h
   710  06A5  120A  118A  246F   	fcall	_lcd_putch
              120A  118A         
   711                           	line	40
   712                           	
   713  06AA                     l4069:	
   714  06AA  3001               	movlw	low(01h)
   715  06AB  1283               	bcf	status, 5	;RP0=0, select bank0
   716  06AC  1303               	bcf	status, 6	;RP1=0, select bank0
   717  06AD  07B6               	addwf	(main@i),f
   718  06AE  1803               	skipnc
   719  06AF  0AB7               	incf	(main@i+1),f
   720  06B0  3000               	movlw	high(01h)
   721  06B1  07B7               	addwf	(main@i+1),f
   722                           	
   723  06B2                     l4071:	
   724  06B2  0837               	movf	(main@i+1),w
   725  06B3  3A80               	xorlw	80h
   726  06B4  00FF               	movwf	btemp+1
   727  06B5  3080               	movlw	(high(03h))^80h
   728  06B6  027F               	subwf	btemp+1,w
   729  06B7  1D03               	skipz
   730  06B8  2EBB               	goto	u3065
   731  06B9  3003               	movlw	low(03h)
   732  06BA  0236               	subwf	(main@i),w
   733  06BB                     u3065:
   734                           
   735  06BB  1C03               	skipc
   736  06BC  2EBE               	goto	u3061
   737  06BD  2EBF               	goto	u3060
   738  06BE                     u3061:
   739  06BE  2E87               	goto	l4067
   740  06BF                     u3060:
   741  06BF  2EC0               	goto	l4073
   742                           	
   743  06C0                     l730:	
   744                           	line	46
   745                           	
   746  06C0                     l4073:	
   747                           ;key.c: 44: }
   748                           ;key.c: 46: if(get_int_len(id) != 7)
   749  06C0  1283               	bcf	status, 5	;RP0=0, select bank0
   750  06C1  1303               	bcf	status, 6	;RP1=0, select bank0
   751  06C2  083D               	movf	(_id+1),w
   752  06C3  01FA               	clrf	(?_get_int_len+1)
   753  06C4  07FA               	addwf	(?_get_int_len+1)
   754  06C5  083C               	movf	(_id),w
   755  06C6  01F9               	clrf	(?_get_int_len)
   756  06C7  07F9               	addwf	(?_get_int_len)
   757                           
   758  06C8  120A  118A  24A2   	fcall	_get_int_len
              120A  118A         
   759  06CD  3007               	movlw	07h
   760  06CE  0679               	xorwf	(0+(?_get_int_len)),w
   761  06CF  047A               	iorwf	(1+(?_get_int_len)),w
   762  06D0  1903               	skipnz
   763  06D1  2ED3               	goto	u3071
   764  06D2  2ED4               	goto	u3070
   765  06D3                     u3071:
   766  06D3  2EE1               	goto	l4079
   767  06D4                     u3070:
   768                           	line	48
   769                           	
   770  06D4                     l4075:	
   771                           ;key.c: 47: {
   772                           ;key.c: 48: lcd_goto(64 + 3);
   773  06D4  3043               	movlw	(043h)
   774  06D5  120A  118A  23CB   	fcall	_lcd_goto
              120A  118A         
   775                           	line	49
   776                           	
   777  06DA                     l4077:	
   778                           ;key.c: 49: lcd_puts("Invalid Id");
   779  06DA  3001               	movlw	((STR_1-__stringbase))&0ffh
   780  06DB  120A  118A  2426   	fcall	_lcd_puts
              120A  118A         
   781                           	line	50
   782                           ;key.c: 50: }
   783  06E0  2F7E               	goto	l732
   784                           	line	51
   785                           	
   786  06E1                     l731:	
   787                           	line	54
   788                           	
   789  06E1                     l4079:	
   790                           ;key.c: 51: else
   791                           ;key.c: 52: {
   792                           ;key.c: 54: lcd_goto(64);
   793  06E1  3040               	movlw	(040h)
   794  06E2  120A  118A  23CB   	fcall	_lcd_goto
              120A  118A         
   795                           	line	55
   796                           	
   797  06E7                     l4081:	
   798                           ;key.c: 55: int sum = 0;
   799  06E7  1283               	bcf	status, 5	;RP0=0, select bank0
   800  06E8  1303               	bcf	status, 6	;RP1=0, select bank0
   801  06E9  01BA               	clrf	(main@sum)
   802  06EA  01BB               	clrf	(main@sum+1)
   803                           	line	56
   804                           	
   805  06EB                     l4083:	
   806                           ;key.c: 56: for(int i = 0; i < 3; i++)
   807  06EB  01B8               	clrf	(main@i_1278)
   808  06EC  01B9               	clrf	(main@i_1278+1)
   809                           	
   810  06ED                     l4085:	
   811  06ED  0839               	movf	(main@i_1278+1),w
   812  06EE  3A80               	xorlw	80h
   813  06EF  00FF               	movwf	btemp+1
   814  06F0  3080               	movlw	(high(03h))^80h
   815  06F1  027F               	subwf	btemp+1,w
   816  06F2  1D03               	skipz
   817  06F3  2EF6               	goto	u3085
   818  06F4  3003               	movlw	low(03h)
   819  06F5  0238               	subwf	(main@i_1278),w
   820  06F6                     u3085:
   821                           
   822  06F6  1C03               	skipc
   823  06F7  2EF9               	goto	u3081
   824  06F8  2EFA               	goto	u3080
   825  06F9                     u3081:
   826  06F9  2EFC               	goto	l4089
   827  06FA                     u3080:
   828  06FA  2F34               	goto	l4095
   829                           	
   830  06FB                     l4087:	
   831  06FB  2F34               	goto	l4095
   832                           	line	57
   833                           	
   834  06FC                     l733:	
   835                           	line	59
   836                           	
   837  06FC                     l4089:	
   838                           ;key.c: 57: {
   839                           ;key.c: 59: sum += get_int(id,7-i);
   840  06FC  1283               	bcf	status, 5	;RP0=0, select bank0
   841  06FD  1303               	bcf	status, 6	;RP1=0, select bank0
   842  06FE  083D               	movf	(_id+1),w
   843  06FF  01FA               	clrf	(?_get_int+1)
   844  0700  07FA               	addwf	(?_get_int+1)
   845  0701  083C               	movf	(_id),w
   846  0702  01F9               	clrf	(?_get_int)
   847  0703  07F9               	addwf	(?_get_int)
   848                           
   849  0704  0938               	comf	(main@i_1278),w
   850  0705  00B2               	movwf	(??_main+0)+0
   851  0706  0939               	comf	(main@i_1278+1),w
   852  0707  00B3               	movwf	((??_main+0)+0+1)
   853  0708  0AB2               	incf	(??_main+0)+0,f
   854  0709  1903               	skipnz
   855  070A  0AB3               	incf	((??_main+0)+0+1),f
   856  070B  0832               	movf	0+(??_main+0)+0,w
   857  070C  3E07               	addlw	low(07h)
   858  070D  00FB               	movwf	0+(?_get_int)+02h
   859  070E  0833               	movf	1+(??_main+0)+0,w
   860  070F  1803               	skipnc
   861  0710  3E01               	addlw	1
   862  0711  3E00               	addlw	high(07h)
   863  0712  00FC               	movwf	1+0+(?_get_int)+02h
   864  0713  120A  118A  24DA   	fcall	_get_int
              120A  118A         
   865  0718  0879               	movf	(0+(?_get_int)),w
   866  0719  1283               	bcf	status, 5	;RP0=0, select bank0
   867  071A  1303               	bcf	status, 6	;RP1=0, select bank0
   868  071B  07BA               	addwf	(main@sum),f
   869  071C  1803               	skipnc
   870  071D  0ABB               	incf	(main@sum+1),f
   871  071E  087A               	movf	(1+(?_get_int)),w
   872  071F  07BB               	addwf	(main@sum+1),f
   873                           	line	56
   874                           	
   875  0720                     l4091:	
   876  0720  3001               	movlw	low(01h)
   877  0721  07B8               	addwf	(main@i_1278),f
   878  0722  1803               	skipnc
   879  0723  0AB9               	incf	(main@i_1278+1),f
   880  0724  3000               	movlw	high(01h)
   881  0725  07B9               	addwf	(main@i_1278+1),f
   882                           	
   883  0726                     l4093:	
   884  0726  0839               	movf	(main@i_1278+1),w
   885  0727  3A80               	xorlw	80h
   886  0728  00FF               	movwf	btemp+1
   887  0729  3080               	movlw	(high(03h))^80h
   888  072A  027F               	subwf	btemp+1,w
   889  072B  1D03               	skipz
   890  072C  2F2F               	goto	u3095
   891  072D  3003               	movlw	low(03h)
   892  072E  0238               	subwf	(main@i_1278),w
   893  072F                     u3095:
   894                           
   895  072F  1C03               	skipc
   896  0730  2F32               	goto	u3091
   897  0731  2F33               	goto	u3090
   898  0732                     u3091:
   899  0732  2EFC               	goto	l4089
   900  0733                     u3090:
   901  0733  2F34               	goto	l4095
   902                           	
   903  0734                     l734:	
   904                           	line	61
   905                           	
   906  0734                     l4095:	
   907                           ;key.c: 60: }
   908                           ;key.c: 61: if(sum > 9)
   909  0734  1283               	bcf	status, 5	;RP0=0, select bank0
   910  0735  1303               	bcf	status, 6	;RP1=0, select bank0
   911  0736  083B               	movf	(main@sum+1),w
   912  0737  3A80               	xorlw	80h
   913  0738  00FF               	movwf	btemp+1
   914  0739  3080               	movlw	(high(0Ah))^80h
   915  073A  027F               	subwf	btemp+1,w
   916  073B  1D03               	skipz
   917  073C  2F3F               	goto	u3105
   918  073D  300A               	movlw	low(0Ah)
   919  073E  023A               	subwf	(main@sum),w
   920  073F                     u3105:
   921                           
   922  073F  1C03               	skipc
   923  0740  2F42               	goto	u3101
   924  0741  2F43               	goto	u3100
   925  0742                     u3101:
   926  0742  2F74               	goto	l4099
   927  0743                     u3100:
   928                           	line	63
   929                           	
   930  0743                     l4097:	
   931                           ;key.c: 62: {
   932                           ;key.c: 63: lcd_putch((sum / 10) + 48);
   933  0743  300A               	movlw	low(0Ah)
   934  0744  00F0               	movwf	(?___awdiv)
   935  0745  3000               	movlw	high(0Ah)
   936  0746  00F1               	movwf	((?___awdiv))+1
   937  0747  1283               	bcf	status, 5	;RP0=0, select bank0
   938  0748  1303               	bcf	status, 6	;RP1=0, select bank0
   939  0749  083B               	movf	(main@sum+1),w
   940  074A  01F3               	clrf	1+(?___awdiv)+02h
   941  074B  07F3               	addwf	1+(?___awdiv)+02h
   942  074C  083A               	movf	(main@sum),w
   943  074D  01F2               	clrf	0+(?___awdiv)+02h
   944  074E  07F2               	addwf	0+(?___awdiv)+02h
   945                           
   946  074F  120A  118A  25E1   	fcall	___awdiv
              120A  118A         
   947  0754  0870               	movf	(0+(?___awdiv)),w
   948  0755  3E30               	addlw	030h
   949  0756  120A  118A  246F   	fcall	_lcd_putch
              120A  118A         
   950                           	line	64
   951                           ;key.c: 64: lcd_putch((sum % 10) + 48);
   952  075B  300A               	movlw	low(0Ah)
   953  075C  00F0               	movwf	(?___awmod)
   954  075D  3000               	movlw	high(0Ah)
   955  075E  00F1               	movwf	((?___awmod))+1
   956  075F  1283               	bcf	status, 5	;RP0=0, select bank0
   957  0760  1303               	bcf	status, 6	;RP1=0, select bank0
   958  0761  083B               	movf	(main@sum+1),w
   959  0762  01F3               	clrf	1+(?___awmod)+02h
   960  0763  07F3               	addwf	1+(?___awmod)+02h
   961  0764  083A               	movf	(main@sum),w
   962  0765  01F2               	clrf	0+(?___awmod)+02h
   963  0766  07F2               	addwf	0+(?___awmod)+02h
   964                           
   965  0767  120A  118A  257B   	fcall	___awmod
              120A  118A         
   966  076C  0870               	movf	(0+(?___awmod)),w
   967  076D  3E30               	addlw	030h
   968  076E  120A  118A  246F   	fcall	_lcd_putch
              120A  118A         
   969                           	line	65
   970                           ;key.c: 65: }
   971  0773  2F7E               	goto	l732
   972                           	line	66
   973                           	
   974  0774                     l735:	
   975                           	line	68
   976                           	
   977  0774                     l4099:	
   978                           ;key.c: 66: else
   979                           ;key.c: 67: {
   980                           ;key.c: 68: lcd_putch(sum + 48);
   981  0774  1283               	bcf	status, 5	;RP0=0, select bank0
   982  0775  1303               	bcf	status, 6	;RP1=0, select bank0
   983  0776  083A               	movf	(main@sum),w
   984  0777  3E30               	addlw	030h
   985  0778  120A  118A  246F   	fcall	_lcd_putch
              120A  118A         
   986  077D  2F7E               	goto	l732
   987                           	line	69
   988                           	
   989  077E                     l736:	
   990                           	line	70
   991                           	
   992  077E                     l732:	
   993                           	line	72
   994                           ;key.c: 69: }
   995                           ;key.c: 70: }
   996                           ;key.c: 72: if((get_int(id, 7 - 3) + get_int(id, 7 - 4)) % 2)
   997  077E  1283               	bcf	status, 5	;RP0=0, select bank0
   998  077F  1303               	bcf	status, 6	;RP1=0, select bank0
   999  0780  083D               	movf	(_id+1),w
  1000  0781  01FA               	clrf	(?_get_int+1)
  1001  0782  07FA               	addwf	(?_get_int+1)
  1002  0783  083C               	movf	(_id),w
  1003  0784  01F9               	clrf	(?_get_int)
  1004  0785  07F9               	addwf	(?_get_int)
  1005                           
  1006  0786  3004               	movlw	low(04h)
  1007  0787  00FB               	movwf	0+(?_get_int)+02h
  1008  0788  3000               	movlw	high(04h)
  1009  0789  00FC               	movwf	(0+(?_get_int)+02h)+1
  1010  078A  120A  118A  24DA   	fcall	_get_int
              120A  118A         
  1011  078F  0879               	movf	(0+?_get_int),w
  1012  0790  1283               	bcf	status, 5	;RP0=0, select bank0
  1013  0791  1303               	bcf	status, 6	;RP1=0, select bank0
  1014  0792  00B2               	movwf	(??_main+0)+0
  1015  0793  087A               	movf	(1+?_get_int),w
  1016  0794  00B3               	movwf	((??_main+0)+0+1)
  1017  0795  083D               	movf	(_id+1),w
  1018  0796  01FA               	clrf	(?_get_int+1)
  1019  0797  07FA               	addwf	(?_get_int+1)
  1020  0798  083C               	movf	(_id),w
  1021  0799  01F9               	clrf	(?_get_int)
  1022  079A  07F9               	addwf	(?_get_int)
  1023                           
  1024  079B  3003               	movlw	low(03h)
  1025  079C  00FB               	movwf	0+(?_get_int)+02h
  1026  079D  3000               	movlw	high(03h)
  1027  079E  00FC               	movwf	(0+(?_get_int)+02h)+1
  1028  079F  120A  118A  24DA   	fcall	_get_int
              120A  118A         
  1029  07A4  0879               	movf	(0+(?_get_int)),w
  1030  07A5  1283               	bcf	status, 5	;RP0=0, select bank0
  1031  07A6  1303               	bcf	status, 6	;RP1=0, select bank0
  1032  07A7  0732               	addwf	0+(??_main+0)+0,w
  1033  07A8  00B4               	movwf	(??_main+2)+0
  1034  07A9  087A               	movf	(1+(?_get_int)),w
  1035  07AA  1803               	skipnc
  1036  07AB  0A7A               	incf	(1+(?_get_int)),w
  1037  07AC  0733               	addwf	1+(??_main+0)+0,w
  1038  07AD  00B5               	movwf	1+(??_main+2)+0
  1039  07AE  1C34               	btfss	0+(??_main+2)+0,(0)&7
  1040  07AF  2FB1               	goto	u3111
  1041  07B0  2FB2               	goto	u3110
  1042  07B1                     u3111:
  1043  07B1  2FB6               	goto	l737
  1044  07B2                     u3110:
  1045                           	line	74
  1046                           	
  1047  07B2                     l4101:	
  1048                           ;key.c: 73: {
  1049                           ;key.c: 74: RC5=1;
  1050  07B2  1687               	bsf	(61/8),(61)&7
  1051                           	line	75
  1052                           ;key.c: 75: RC7 = 0;
  1053  07B3  1387               	bcf	(63/8),(63)&7
  1054                           	line	76
  1055                           ;key.c: 76: RC6 = 1;
  1056  07B4  1707               	bsf	(62/8),(62)&7
  1057                           	line	77
  1058                           ;key.c: 77: }
  1059  07B5  2FBA               	goto	l4103
  1060                           	line	78
  1061                           	
  1062  07B6                     l737:	
  1063                           	line	80
  1064                           ;key.c: 78: else
  1065                           ;key.c: 79: {
  1066                           ;key.c: 80: RC5=1;
  1067  07B6  1687               	bsf	(61/8),(61)&7
  1068                           	line	81
  1069                           ;key.c: 81: RC7 = 0;
  1070  07B7  1387               	bcf	(63/8),(63)&7
  1071                           	line	82
  1072                           ;key.c: 82: RC6 = 1;
  1073  07B8  1707               	bsf	(62/8),(62)&7
  1074  07B9  2FBA               	goto	l4103
  1075                           	line	83
  1076                           	
  1077  07BA                     l738:	
  1078                           	line	84
  1079                           	
  1080  07BA                     l4103:	
  1081                           ;key.c: 83: }
  1082                           ;key.c: 84: if((get_int(id, 7 - 6) + get_int(id, 7 - 7)) > 10)
  1083  07BA  083D               	movf	(_id+1),w
  1084  07BB  01FA               	clrf	(?_get_int+1)
  1085  07BC  07FA               	addwf	(?_get_int+1)
  1086  07BD  083C               	movf	(_id),w
  1087  07BE  01F9               	clrf	(?_get_int)
  1088  07BF  07F9               	addwf	(?_get_int)
  1089                           
  1090  07C0  3001               	movlw	low(01h)
  1091  07C1  00FB               	movwf	0+(?_get_int)+02h
  1092  07C2  3000               	movlw	high(01h)
  1093  07C3  00FC               	movwf	(0+(?_get_int)+02h)+1
  1094  07C4  120A  118A  24DA   	fcall	_get_int
              120A  118A         
  1095  07C9  0879               	movf	(0+?_get_int),w
  1096  07CA  1283               	bcf	status, 5	;RP0=0, select bank0
  1097  07CB  1303               	bcf	status, 6	;RP1=0, select bank0
  1098  07CC  00B2               	movwf	(??_main+0)+0
  1099  07CD  087A               	movf	(1+?_get_int),w
  1100  07CE  00B3               	movwf	((??_main+0)+0+1)
  1101  07CF  083D               	movf	(_id+1),w
  1102  07D0  01FA               	clrf	(?_get_int+1)
  1103  07D1  07FA               	addwf	(?_get_int+1)
  1104  07D2  083C               	movf	(_id),w
  1105  07D3  01F9               	clrf	(?_get_int)
  1106  07D4  07F9               	addwf	(?_get_int)
  1107                           
  1108  07D5  3000               	movlw	low(0)
  1109  07D6  00FB               	movwf	0+(?_get_int)+02h
  1110  07D7  3000               	movlw	high(0)
  1111  07D8  00FC               	movwf	(0+(?_get_int)+02h)+1
  1112  07D9  120A  118A  24DA   	fcall	_get_int
              120A  118A         
  1113  07DE  0879               	movf	(0+(?_get_int)),w
  1114  07DF  1283               	bcf	status, 5	;RP0=0, select bank0
  1115  07E0  1303               	bcf	status, 6	;RP1=0, select bank0
  1116  07E1  0732               	addwf	0+(??_main+0)+0,w
  1117  07E2  00B4               	movwf	(??_main+2)+0
  1118  07E3  087A               	movf	(1+(?_get_int)),w
  1119  07E4  1803               	skipnc
  1120  07E5  0A7A               	incf	(1+(?_get_int)),w
  1121  07E6  0733               	addwf	1+(??_main+0)+0,w
  1122  07E7  00B5               	movwf	1+(??_main+2)+0
  1123  07E8  0835               	movf	1+(??_main+2)+0,w
  1124  07E9  3A80               	xorlw	80h
  1125  07EA  00FF               	movwf	btemp+1
  1126  07EB  3080               	movlw	(high(0Bh))^80h
  1127  07EC  027F               	subwf	btemp+1,w
  1128  07ED  1D03               	skipz
  1129  07EE  2FF1               	goto	u3125
  1130  07EF  300B               	movlw	low(0Bh)
  1131  07F0  0234               	subwf	0+(??_main+2)+0,w
  1132  07F1                     u3125:
  1133                           
  1134  07F1  1C03               	skipc
  1135  07F2  2FF4               	goto	u3121
  1136  07F3  2FF5               	goto	u3120
  1137  07F4                     u3121:
  1138  07F4  2FF9               	goto	l739
  1139  07F5                     u3120:
  1140                           	line	86
  1141                           	
  1142  07F5                     l4105:	
  1143                           ;key.c: 85: {
  1144                           ;key.c: 86: RC1 = 1;
  1145  07F5  1283               	bcf	status, 5	;RP0=0, select bank0
  1146  07F6  1303               	bcf	status, 6	;RP1=0, select bank0
  1147  07F7  1487               	bsf	(57/8),(57)&7
  1148                           	line	87
  1149                           ;key.c: 87: }
  1150  07F8  2FFD               	goto	l741
  1151                           	line	88
  1152                           	
  1153  07F9                     l739:	
  1154                           	line	90
  1155                           ;key.c: 88: else
  1156                           ;key.c: 89: {
  1157                           ;key.c: 90: RC1 = 0;
  1158  07F9  1283               	bcf	status, 5	;RP0=0, select bank0
  1159  07FA  1303               	bcf	status, 6	;RP1=0, select bank0
  1160  07FB  1087               	bcf	(57/8),(57)&7
  1161  07FC  2FFD               	goto	l741
  1162                           	line	91
  1163                           	
  1164  07FD                     l740:	
  1165                           	line	93
  1166                           	
  1167  07FD                     l741:	
  1168                           	global	start
  1169  07FD  120A  118A  2800   	ljmp	start
  1170                           	opt stack 0
  1171                           GLOBAL	__end_of_main
  1172  0800                     	__end_of_main:
  1173 ;; =============== function _main ends ============
  1174                           
  1175                           	signat	_main,88
  1176                           	global	_lcd_puts
  1177                           psect	text303,local,class=CODE,delta=2
  1178                           global __ptext303
  1179  0426                     __ptext303:
  1180                           
  1181 ;; *************** function _lcd_puts *****************
  1182 ;; Defined at:
  1183 ;;		line 37 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \lcd.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  s               1    wreg     PTR const unsigned char 
  1186 ;;		 -> STR_1(11), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  s               1    4[COMMON] PTR const unsigned char 
  1189 ;;		 -> STR_1(11), 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;		None               void
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0
  1201 ;;      Temps:          1       0       0       0       0
  1202 ;;      Totals:         2       0       0       0       0
  1203 ;;Total ram usage:        2 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    1
  1206 ;; This function calls:
  1207 ;;		_lcd_write
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           psect	text303
  1213                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\lcd.c"
  1214                           	line	37
  1215                           	global	__size_of_lcd_puts
  1216  0024                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  1217                           	
  1218  0426                     _lcd_puts:	
  1219                           	opt	stack 6
  1220                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1221                           ;lcd_puts@s stored from wreg
  1222  0426  00F4               	movwf	(lcd_puts@s)
  1223                           	line	38
  1224                           	
  1225  0427                     l4037:	
  1226                           ;lcd.c: 38: RE0 = 1;
  1227  0427  1283               	bcf	status, 5	;RP0=0, select bank0
  1228  0428  1303               	bcf	status, 6	;RP1=0, select bank0
  1229  0429  1409               	bsf	(72/8),(72)&7
  1230                           	line	39
  1231                           ;lcd.c: 39: while(*s)
  1232  042A  2C3C               	goto	l4043
  1233                           	
  1234  042B                     l1480:	
  1235                           	line	40
  1236                           	
  1237  042B                     l4039:	
  1238                           ;lcd.c: 40: lcd_write(*s++);
  1239  042B  0874               	movf	(lcd_puts@s),w
  1240  042C  0084               	movwf	fsr0
  1241  042D  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1242  0432  120A  118A  244A   	fcall	_lcd_write
              120A  118A         
  1243                           	
  1244  0437                     l4041:	
  1245  0437  3001               	movlw	(01h)
  1246  0438  00F3               	movwf	(??_lcd_puts+0)+0
  1247  0439  0873               	movf	(??_lcd_puts+0)+0,w
  1248  043A  07F4               	addwf	(lcd_puts@s),f
  1249  043B  2C3C               	goto	l4043
  1250                           	
  1251  043C                     l1479:	
  1252                           	line	39
  1253                           	
  1254  043C                     l4043:	
  1255  043C  0874               	movf	(lcd_puts@s),w
  1256  043D  0084               	movwf	fsr0
  1257  043E  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1258  0443  3800               	iorlw	0
  1259  0444  1D03               	skipz
  1260  0445  2C47               	goto	u3041
  1261  0446  2C48               	goto	u3040
  1262  0447                     u3041:
  1263  0447  2C2B               	goto	l4039
  1264  0448                     u3040:
  1265  0448  2C49               	goto	l1482
  1266                           	
  1267  0449                     l1481:	
  1268                           	line	41
  1269                           	
  1270  0449                     l1482:	
  1271  0449  0008               	return
  1272                           	opt stack 0
  1273                           GLOBAL	__end_of_lcd_puts
  1274  044A                     	__end_of_lcd_puts:
  1275 ;; =============== function _lcd_puts ends ============
  1276                           
  1277                           	signat	_lcd_puts,4216
  1278                           	global	_lcd_goto
  1279                           psect	text304,local,class=CODE,delta=2
  1280                           global __ptext304
  1281  03CB                     __ptext304:
  1282                           
  1283 ;; *************** function _lcd_goto *****************
  1284 ;; Defined at:
  1285 ;;		line 53 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \lcd.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  pos             1    wreg     unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  pos             1    3[COMMON] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       0       0       0       0
  1300 ;;      Locals:         1       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0
  1302 ;;      Totals:         1       0       0       0       0
  1303 ;;Total ram usage:        1 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		_lcd_write
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           psect	text304
  1313                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\lcd.c"
  1314                           	line	53
  1315                           	global	__size_of_lcd_goto
  1316  000C                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  1317                           	
  1318  03CB                     _lcd_goto:	
  1319                           	opt	stack 6
  1320                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1321                           ;lcd_goto@pos stored from wreg
  1322  03CB  00F3               	movwf	(lcd_goto@pos)
  1323                           	line	54
  1324                           	
  1325  03CC                     l4033:	
  1326                           ;lcd.c: 54: RE0 = 0;
  1327  03CC  1283               	bcf	status, 5	;RP0=0, select bank0
  1328  03CD  1303               	bcf	status, 6	;RP1=0, select bank0
  1329  03CE  1009               	bcf	(72/8),(72)&7
  1330                           	line	55
  1331                           	
  1332  03CF                     l4035:	
  1333                           ;lcd.c: 55: lcd_write(0x80+pos);
  1334  03CF  0873               	movf	(lcd_goto@pos),w
  1335  03D0  3E80               	addlw	080h
  1336  03D1  120A  118A  244A   	fcall	_lcd_write
              120A  118A         
  1337                           	line	56
  1338                           	
  1339  03D6                     l1491:	
  1340  03D6  0008               	return
  1341                           	opt stack 0
  1342                           GLOBAL	__end_of_lcd_goto
  1343  03D7                     	__end_of_lcd_goto:
  1344 ;; =============== function _lcd_goto ends ============
  1345                           
  1346                           	signat	_lcd_goto,4216
  1347                           	global	_get_int_len
  1348                           psect	text305,local,class=CODE,delta=2
  1349                           global __ptext305
  1350  04A2                     __ptext305:
  1351                           
  1352 ;; *************** function _get_int_len *****************
  1353 ;; Defined at:
  1354 ;;		line 96 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \key.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  id              2    9[COMMON] int 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  temp            2    2[BANK0 ] int 
  1359 ;;  len             2    0[BANK0 ] int 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  2    9[COMMON] int 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         2       0       0       0       0
  1370 ;;      Locals:         0       4       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         2       4       0       0       0
  1373 ;;Total ram usage:        6 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    1
  1376 ;; This function calls:
  1377 ;;		___awdiv
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           psect	text305
  1383                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\key.c"
  1384                           	line	96
  1385                           	global	__size_of_get_int_len
  1386  0038                     	__size_of_get_int_len	equ	__end_of_get_int_len-_get_int_len
  1387                           	
  1388  04A2                     _get_int_len:	
  1389                           	opt	stack 6
  1390                           ; Regs used in _get_int_len: [wreg+status,2+status,0+pclath+cstack]
  1391                           	line	97
  1392                           	
  1393  04A2                     l4019:	
  1394                           ;key.c: 97: int temp = id;
  1395  04A2  087A               	movf	(get_int_len@id+1),w
  1396  04A3  1283               	bcf	status, 5	;RP0=0, select bank0
  1397  04A4  1303               	bcf	status, 6	;RP1=0, select bank0
  1398  04A5  01B1               	clrf	(get_int_len@temp+1)
  1399  04A6  07B1               	addwf	(get_int_len@temp+1)
  1400  04A7  0879               	movf	(get_int_len@id),w
  1401  04A8  01B0               	clrf	(get_int_len@temp)
  1402  04A9  07B0               	addwf	(get_int_len@temp)
  1403                           
  1404                           	line	98
  1405                           	
  1406  04AA                     l4021:	
  1407                           ;key.c: 98: int len = 0;
  1408  04AA  01AE               	clrf	(get_int_len@len)
  1409  04AB  01AF               	clrf	(get_int_len@len+1)
  1410                           	line	99
  1411                           ;key.c: 99: while(temp != 0)
  1412  04AC  2CCB               	goto	l4027
  1413                           	
  1414  04AD                     l745:	
  1415                           	line	101
  1416                           	
  1417  04AD                     l4023:	
  1418                           ;key.c: 100: {
  1419                           ;key.c: 101: len++;
  1420  04AD  3001               	movlw	low(01h)
  1421  04AE  07AE               	addwf	(get_int_len@len),f
  1422  04AF  1803               	skipnc
  1423  04B0  0AAF               	incf	(get_int_len@len+1),f
  1424  04B1  3000               	movlw	high(01h)
  1425  04B2  07AF               	addwf	(get_int_len@len+1),f
  1426                           	line	102
  1427                           	
  1428  04B3                     l4025:	
  1429                           ;key.c: 102: temp/=10;
  1430  04B3  300A               	movlw	low(0Ah)
  1431  04B4  00F0               	movwf	(?___awdiv)
  1432  04B5  3000               	movlw	high(0Ah)
  1433  04B6  00F1               	movwf	((?___awdiv))+1
  1434  04B7  0831               	movf	(get_int_len@temp+1),w
  1435  04B8  01F3               	clrf	1+(?___awdiv)+02h
  1436  04B9  07F3               	addwf	1+(?___awdiv)+02h
  1437  04BA  0830               	movf	(get_int_len@temp),w
  1438  04BB  01F2               	clrf	0+(?___awdiv)+02h
  1439  04BC  07F2               	addwf	0+(?___awdiv)+02h
  1440                           
  1441  04BD  120A  118A  25E1   	fcall	___awdiv
              120A  118A         
  1442  04C2  0871               	movf	(1+(?___awdiv)),w
  1443  04C3  1283               	bcf	status, 5	;RP0=0, select bank0
  1444  04C4  1303               	bcf	status, 6	;RP1=0, select bank0
  1445  04C5  01B1               	clrf	(get_int_len@temp+1)
  1446  04C6  07B1               	addwf	(get_int_len@temp+1)
  1447  04C7  0870               	movf	(0+(?___awdiv)),w
  1448  04C8  01B0               	clrf	(get_int_len@temp)
  1449  04C9  07B0               	addwf	(get_int_len@temp)
  1450                           
  1451  04CA  2CCB               	goto	l4027
  1452                           	line	103
  1453                           	
  1454  04CB                     l744:	
  1455                           	line	99
  1456                           	
  1457  04CB                     l4027:	
  1458  04CB  0831               	movf	((get_int_len@temp+1)),w
  1459  04CC  0430               	iorwf	((get_int_len@temp)),w
  1460  04CD  1D03               	skipz
  1461  04CE  2CD0               	goto	u3031
  1462  04CF  2CD1               	goto	u3030
  1463  04D0                     u3031:
  1464  04D0  2CAD               	goto	l4023
  1465  04D1                     u3030:
  1466  04D1  2CD2               	goto	l4029
  1467                           	
  1468  04D2                     l746:	
  1469                           	line	104
  1470                           	
  1471  04D2                     l4029:	
  1472                           ;key.c: 103: }
  1473                           ;key.c: 104: return len;
  1474  04D2  082F               	movf	(get_int_len@len+1),w
  1475  04D3  01FA               	clrf	(?_get_int_len+1)
  1476  04D4  07FA               	addwf	(?_get_int_len+1)
  1477  04D5  082E               	movf	(get_int_len@len),w
  1478  04D6  01F9               	clrf	(?_get_int_len)
  1479  04D7  07F9               	addwf	(?_get_int_len)
  1480                           
  1481  04D8  2CD9               	goto	l747
  1482                           	
  1483  04D9                     l4031:	
  1484                           	line	105
  1485                           	
  1486  04D9                     l747:	
  1487  04D9  0008               	return
  1488                           	opt stack 0
  1489                           GLOBAL	__end_of_get_int_len
  1490  04DA                     	__end_of_get_int_len:
  1491 ;; =============== function _get_int_len ends ============
  1492                           
  1493                           	signat	_get_int_len,4218
  1494                           	global	_get_int
  1495                           psect	text306,local,class=CODE,delta=2
  1496                           global __ptext306
  1497  04DA                     __ptext306:
  1498                           
  1499 ;; *************** function _get_int *****************
  1500 ;; Defined at:
  1501 ;;		line 108 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 
       1\key.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  id              2    9[COMMON] int 
  1504 ;;  pos             2   11[COMMON] int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  i               2    0[BANK0 ] int 
  1507 ;;  val             2    2[BANK0 ] int 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  2    9[COMMON] int 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         4       0       0       0       0
  1518 ;;      Locals:         0       4       0       0       0
  1519 ;;      Temps:          1       0       0       0       0
  1520 ;;      Totals:         5       4       0       0       0
  1521 ;;Total ram usage:        9 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    1
  1524 ;; This function calls:
  1525 ;;		___awdiv
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           psect	text306
  1531                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\key.c"
  1532                           	line	108
  1533                           	global	__size_of_get_int
  1534  0046                     	__size_of_get_int	equ	__end_of_get_int-_get_int
  1535                           	
  1536  04DA                     _get_int:	
  1537                           	opt	stack 6
  1538                           ; Regs used in _get_int: [wreg+status,2+status,0+pclath+cstack]
  1539                           	line	109
  1540                           	
  1541  04DA                     l4005:	
  1542                           ;key.c: 109: int val = id;
  1543  04DA  087A               	movf	(get_int@id+1),w
  1544  04DB  1283               	bcf	status, 5	;RP0=0, select bank0
  1545  04DC  1303               	bcf	status, 6	;RP1=0, select bank0
  1546  04DD  01B1               	clrf	(get_int@val+1)
  1547  04DE  07B1               	addwf	(get_int@val+1)
  1548  04DF  0879               	movf	(get_int@id),w
  1549  04E0  01B0               	clrf	(get_int@val)
  1550  04E1  07B0               	addwf	(get_int@val)
  1551                           
  1552                           	line	110
  1553                           	
  1554  04E2                     l4007:	
  1555                           ;key.c: 110: for(int i = 1; i < pos; i++)
  1556  04E2  3001               	movlw	low(01h)
  1557  04E3  00AE               	movwf	(get_int@i)
  1558  04E4  3000               	movlw	high(01h)
  1559  04E5  00AF               	movwf	((get_int@i))+1
  1560  04E6  2D07               	goto	l4013
  1561                           	line	111
  1562                           	
  1563  04E7                     l751:	
  1564                           	line	112
  1565                           	
  1566  04E7                     l4009:	
  1567                           ;key.c: 111: {
  1568                           ;key.c: 112: val/=10;
  1569  04E7  300A               	movlw	low(0Ah)
  1570  04E8  00F0               	movwf	(?___awdiv)
  1571  04E9  3000               	movlw	high(0Ah)
  1572  04EA  00F1               	movwf	((?___awdiv))+1
  1573  04EB  1283               	bcf	status, 5	;RP0=0, select bank0
  1574  04EC  1303               	bcf	status, 6	;RP1=0, select bank0
  1575  04ED  0831               	movf	(get_int@val+1),w
  1576  04EE  01F3               	clrf	1+(?___awdiv)+02h
  1577  04EF  07F3               	addwf	1+(?___awdiv)+02h
  1578  04F0  0830               	movf	(get_int@val),w
  1579  04F1  01F2               	clrf	0+(?___awdiv)+02h
  1580  04F2  07F2               	addwf	0+(?___awdiv)+02h
  1581                           
  1582  04F3  120A  118A  25E1   	fcall	___awdiv
              120A  118A         
  1583  04F8  0871               	movf	(1+(?___awdiv)),w
  1584  04F9  1283               	bcf	status, 5	;RP0=0, select bank0
  1585  04FA  1303               	bcf	status, 6	;RP1=0, select bank0
  1586  04FB  01B1               	clrf	(get_int@val+1)
  1587  04FC  07B1               	addwf	(get_int@val+1)
  1588  04FD  0870               	movf	(0+(?___awdiv)),w
  1589  04FE  01B0               	clrf	(get_int@val)
  1590  04FF  07B0               	addwf	(get_int@val)
  1591                           
  1592                           	line	110
  1593                           	
  1594  0500                     l4011:	
  1595  0500  3001               	movlw	low(01h)
  1596  0501  07AE               	addwf	(get_int@i),f
  1597  0502  1803               	skipnc
  1598  0503  0AAF               	incf	(get_int@i+1),f
  1599  0504  3000               	movlw	high(01h)
  1600  0505  07AF               	addwf	(get_int@i+1),f
  1601  0506  2D07               	goto	l4013
  1602                           	
  1603  0507                     l750:	
  1604                           	
  1605  0507                     l4013:	
  1606  0507  082F               	movf	(get_int@i+1),w
  1607  0508  3A80               	xorlw	80h
  1608  0509  00FD               	movwf	(??_get_int+0)+0
  1609  050A  087C               	movf	(get_int@pos+1),w
  1610  050B  3A80               	xorlw	80h
  1611  050C  027D               	subwf	(??_get_int+0)+0,w
  1612  050D  1D03               	skipz
  1613  050E  2D11               	goto	u3025
  1614  050F  087B               	movf	(get_int@pos),w
  1615  0510  022E               	subwf	(get_int@i),w
  1616  0511                     u3025:
  1617                           
  1618  0511  1C03               	skipc
  1619  0512  2D14               	goto	u3021
  1620  0513  2D15               	goto	u3020
  1621  0514                     u3021:
  1622  0514  2CE7               	goto	l4009
  1623  0515                     u3020:
  1624  0515  2D16               	goto	l4015
  1625                           	
  1626  0516                     l752:	
  1627                           	line	114
  1628                           	
  1629  0516                     l4015:	
  1630                           ;key.c: 113: }
  1631                           ;key.c: 114: return val;
  1632  0516  1283               	bcf	status, 5	;RP0=0, select bank0
  1633  0517  1303               	bcf	status, 6	;RP1=0, select bank0
  1634  0518  0831               	movf	(get_int@val+1),w
  1635  0519  01FA               	clrf	(?_get_int+1)
  1636  051A  07FA               	addwf	(?_get_int+1)
  1637  051B  0830               	movf	(get_int@val),w
  1638  051C  01F9               	clrf	(?_get_int)
  1639  051D  07F9               	addwf	(?_get_int)
  1640                           
  1641  051E  2D1F               	goto	l753
  1642                           	
  1643  051F                     l4017:	
  1644                           	line	115
  1645                           	
  1646  051F                     l753:	
  1647  051F  0008               	return
  1648                           	opt stack 0
  1649                           GLOBAL	__end_of_get_int
  1650  0520                     	__end_of_get_int:
  1651 ;; =============== function _get_int ends ============
  1652                           
  1653                           	signat	_get_int,8314
  1654                           	global	_lcd_clear
  1655                           psect	text307,local,class=CODE,delta=2
  1656                           global __ptext307
  1657  03D7                     __ptext307:
  1658                           
  1659 ;; *************** function _lcd_clear *****************
  1660 ;; Defined at:
  1661 ;;		line 31 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \lcd.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;		None               void
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0
  1678 ;;      Totals:         0       0       0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    1
  1682 ;; This function calls:
  1683 ;;		_lcd_write
  1684 ;;		_DelayMs
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;;		_putchar
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           psect	text307
  1691                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\lcd.c"
  1692                           	line	31
  1693                           	global	__size_of_lcd_clear
  1694  0010                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1695                           	
  1696  03D7                     _lcd_clear:	
  1697                           	opt	stack 6
  1698                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1699                           	line	32
  1700                           	
  1701  03D7                     l4001:	
  1702                           ;lcd.c: 32: RE0 = 0;
  1703  03D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1704  03D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1705  03D9  1009               	bcf	(72/8),(72)&7
  1706                           	line	33
  1707                           	
  1708  03DA                     l4003:	
  1709                           ;lcd.c: 33: lcd_write(0x1);
  1710  03DA  3001               	movlw	(01h)
  1711  03DB  120A  118A  244A   	fcall	_lcd_write
              120A  118A         
  1712                           	line	34
  1713                           ;lcd.c: 34: DelayMs(2);
  1714  03E0  3002               	movlw	(02h)
  1715  03E1  120A  118A  2405   	fcall	_DelayMs
              120A  118A         
  1716                           	line	35
  1717                           	
  1718  03E6                     l1476:	
  1719  03E6  0008               	return
  1720                           	opt stack 0
  1721                           GLOBAL	__end_of_lcd_clear
  1722  03E7                     	__end_of_lcd_clear:
  1723 ;; =============== function _lcd_clear ends ============
  1724                           
  1725                           	signat	_lcd_clear,88
  1726                           	global	_lcd_init
  1727                           psect	text308,local,class=CODE,delta=2
  1728                           global __ptext308
  1729  0520                     __ptext308:
  1730                           
  1731 ;; *************** function _lcd_init *****************
  1732 ;; Defined at:
  1733 ;;		line 58 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \lcd.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  _dcnt           1    6[COMMON] unsigned char 
  1738 ;;  _dcnt           1    5[COMMON] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;		None               void
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         0       0       0       0       0
  1749 ;;      Locals:         2       0       0       0       0
  1750 ;;      Temps:          1       0       0       0       0
  1751 ;;      Totals:         3       0       0       0       0
  1752 ;;Total ram usage:        3 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    1
  1755 ;; This function calls:
  1756 ;;		_DelayMs
  1757 ;;		_lcd_write
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           psect	text308
  1763                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\lcd.c"
  1764                           	line	58
  1765                           	global	__size_of_lcd_init
  1766  005B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1767                           	
  1768  0520                     _lcd_init:	
  1769                           	opt	stack 6
  1770                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1771                           	line	59
  1772                           	
  1773  0520                     l3969:	
  1774                           ;lcd.c: 59: RE0 = 0;
  1775  0520  1283               	bcf	status, 5	;RP0=0, select bank0
  1776  0521  1303               	bcf	status, 6	;RP1=0, select bank0
  1777  0522  1009               	bcf	(72/8),(72)&7
  1778                           	line	60
  1779                           	
  1780  0523                     l3971:	
  1781                           ;lcd.c: 60: DelayMs(15);
  1782  0523  300F               	movlw	(0Fh)
  1783  0524  120A  118A  2405   	fcall	_DelayMs
              120A  118A         
  1784                           	line	61
  1785                           	
  1786  0529                     l3973:	
  1787                           ;lcd.c: 61: PORTD = (0x3 << 4);
  1788  0529  3030               	movlw	(030h)
  1789  052A  1283               	bcf	status, 5	;RP0=0, select bank0
  1790  052B  1303               	bcf	status, 6	;RP1=0, select bank0
  1791  052C  0088               	movwf	(8)	;volatile
  1792                           	line	62
  1793                           	
  1794  052D                     l3975:	
  1795                           ;lcd.c: 62: ((RE1 = 1),(RE1=0));
  1796  052D  1489               	bsf	(73/8),(73)&7
  1797                           	
  1798  052E                     l3977:	
  1799  052E  1089               	bcf	(73/8),(73)&7
  1800                           	line	63
  1801                           	
  1802  052F                     l3979:	
  1803                           ;lcd.c: 63: DelayMs(5);
  1804  052F  3005               	movlw	(05h)
  1805  0530  120A  118A  2405   	fcall	_DelayMs
              120A  118A         
  1806                           	line	64
  1807                           	
  1808  0535                     l3981:	
  1809                           ;lcd.c: 64: ((RE1 = 1),(RE1=0));
  1810  0535  1283               	bcf	status, 5	;RP0=0, select bank0
  1811  0536  1303               	bcf	status, 6	;RP1=0, select bank0
  1812  0537  1489               	bsf	(73/8),(73)&7
  1813                           	
  1814  0538                     l3983:	
  1815  0538  1089               	bcf	(73/8),(73)&7
  1816                           	line	65
  1817                           ;lcd.c: 65: { unsigned char _dcnt; _dcnt = (100)/((12*1000L)/(4*1000L))|1; while(--_dcnt
                                  != 0) continue; };
  1818  0539  3021               	movlw	(021h)
  1819  053A  00F4               	movwf	(??_lcd_init+0)+0
  1820  053B  0874               	movf	(??_lcd_init+0)+0,w
  1821  053C  00F5               	movwf	(lcd_init@_dcnt)
  1822  053D  2D3F               	goto	l3985
  1823                           	
  1824  053E                     l1495:	
  1825  053E  2D3F               	goto	l3985
  1826                           	
  1827  053F                     l1494:	
  1828                           	
  1829  053F                     l3985:	
  1830  053F  3001               	movlw	low(01h)
  1831  0540  02F5               	subwf	(lcd_init@_dcnt),f
  1832  0541  1D03               	btfss	status,2
  1833  0542  2D44               	goto	u3001
  1834  0543  2D45               	goto	u3000
  1835  0544                     u3001:
  1836  0544  2D3F               	goto	l3985
  1837  0545                     u3000:
  1838                           	
  1839  0545                     l1496:	
  1840                           	line	66
  1841                           ;lcd.c: 66: ((RE1 = 1),(RE1=0));
  1842  0545  1283               	bcf	status, 5	;RP0=0, select bank0
  1843  0546  1303               	bcf	status, 6	;RP1=0, select bank0
  1844  0547  1489               	bsf	(73/8),(73)&7
  1845  0548  1089               	bcf	(73/8),(73)&7
  1846                           	line	67
  1847                           	
  1848  0549                     l3987:	
  1849                           ;lcd.c: 67: DelayMs(5);
  1850  0549  3005               	movlw	(05h)
  1851  054A  120A  118A  2405   	fcall	_DelayMs
              120A  118A         
  1852                           	line	68
  1853                           	
  1854  054F                     l3989:	
  1855                           ;lcd.c: 68: PORTD = (0x2 << 4);
  1856  054F  3020               	movlw	(020h)
  1857  0550  1283               	bcf	status, 5	;RP0=0, select bank0
  1858  0551  1303               	bcf	status, 6	;RP1=0, select bank0
  1859  0552  0088               	movwf	(8)	;volatile
  1860                           	line	69
  1861                           	
  1862  0553                     l3991:	
  1863                           ;lcd.c: 69: ((RE1 = 1),(RE1=0));
  1864  0553  1489               	bsf	(73/8),(73)&7
  1865                           	
  1866  0554                     l3993:	
  1867  0554  1089               	bcf	(73/8),(73)&7
  1868                           	line	70
  1869                           	
  1870  0555                     l3995:	
  1871                           ;lcd.c: 70: { unsigned char _dcnt; _dcnt = (40)/((12*1000L)/(4*1000L))|1; while(--_dcnt 
                                 != 0) continue; };
  1872  0555  300D               	movlw	(0Dh)
  1873  0556  00F4               	movwf	(??_lcd_init+0)+0
  1874  0557  0874               	movf	(??_lcd_init+0)+0,w
  1875  0558  00F6               	movwf	(lcd_init@_dcnt_2132)
  1876  0559  2D5B               	goto	l3997
  1877                           	
  1878  055A                     l1498:	
  1879  055A  2D5B               	goto	l3997
  1880                           	
  1881  055B                     l1497:	
  1882                           	
  1883  055B                     l3997:	
  1884  055B  3001               	movlw	low(01h)
  1885  055C  02F6               	subwf	(lcd_init@_dcnt_2132),f
  1886  055D  1D03               	btfss	status,2
  1887  055E  2D60               	goto	u3011
  1888  055F  2D61               	goto	u3010
  1889  0560                     u3011:
  1890  0560  2D5B               	goto	l3997
  1891  0561                     u3010:
  1892  0561  2D62               	goto	l3999
  1893                           	
  1894  0562                     l1499:	
  1895                           	line	71
  1896                           	
  1897  0562                     l3999:	
  1898                           ;lcd.c: 71: lcd_write(0x28);
  1899  0562  3028               	movlw	(028h)
  1900  0563  120A  118A  244A   	fcall	_lcd_write
              120A  118A         
  1901                           	line	72
  1902                           ;lcd.c: 72: lcd_write(0x08);
  1903  0568  3008               	movlw	(08h)
  1904  0569  120A  118A  244A   	fcall	_lcd_write
              120A  118A         
  1905                           	line	73
  1906                           ;lcd.c: 73: lcd_write(0x0F);
  1907  056E  300F               	movlw	(0Fh)
  1908  056F  120A  118A  244A   	fcall	_lcd_write
              120A  118A         
  1909                           	line	74
  1910                           ;lcd.c: 74: lcd_write(0x06);
  1911  0574  3006               	movlw	(06h)
  1912  0575  120A  118A  244A   	fcall	_lcd_write
              120A  118A         
  1913                           	line	75
  1914                           	
  1915  057A                     l1500:	
  1916  057A  0008               	return
  1917                           	opt stack 0
  1918                           GLOBAL	__end_of_lcd_init
  1919  057B                     	__end_of_lcd_init:
  1920 ;; =============== function _lcd_init ends ============
  1921                           
  1922                           	signat	_lcd_init,88
  1923                           	global	___awmod
  1924                           psect	text309,local,class=CODE,delta=2
  1925                           global __ptext309
  1926  057B                     __ptext309:
  1927                           
  1928 ;; *************** function ___awmod *****************
  1929 ;; Defined at:
  1930 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  divisor         2    0[COMMON] int 
  1933 ;;  dividend        2    2[COMMON] int 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  sign            1    6[COMMON] unsigned char 
  1936 ;;  counter         1    5[COMMON] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2    0[COMMON] int 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         4       0       0       0       0
  1947 ;;      Locals:         2       0       0       0       0
  1948 ;;      Temps:          1       0       0       0       0
  1949 ;;      Totals:         7       0       0       0       0
  1950 ;;Total ram usage:        7 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           psect	text309
  1959                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  1960                           	line	5
  1961                           	global	__size_of___awmod
  1962  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  1963                           	
  1964  057B                     ___awmod:	
  1965                           	opt	stack 7
  1966                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1967                           	line	8
  1968                           	
  1969  057B                     l3935:	
  1970  057B  01F6               	clrf	(___awmod@sign)
  1971                           	line	9
  1972  057C  1FF3               	btfss	(___awmod@dividend+1),7
  1973  057D  2D7F               	goto	u2911
  1974  057E  2D80               	goto	u2910
  1975  057F                     u2911:
  1976  057F  2D89               	goto	l3939
  1977  0580                     u2910:
  1978                           	line	10
  1979                           	
  1980  0580                     l3937:	
  1981  0580  09F2               	comf	(___awmod@dividend),f
  1982  0581  09F3               	comf	(___awmod@dividend+1),f
  1983  0582  0AF2               	incf	(___awmod@dividend),f
  1984  0583  1903               	skipnz
  1985  0584  0AF3               	incf	(___awmod@dividend+1),f
  1986                           	line	11
  1987  0585  01F6               	clrf	(___awmod@sign)
  1988  0586  1403               	bsf	status,0
  1989  0587  0DF6               	rlf	(___awmod@sign),f
  1990  0588  2D89               	goto	l3939
  1991                           	line	12
  1992                           	
  1993  0589                     l2391:	
  1994                           	line	13
  1995                           	
  1996  0589                     l3939:	
  1997  0589  1FF1               	btfss	(___awmod@divisor+1),7
  1998  058A  2D8C               	goto	u2921
  1999  058B  2D8D               	goto	u2920
  2000  058C                     u2921:
  2001  058C  2D93               	goto	l3943
  2002  058D                     u2920:
  2003                           	line	14
  2004                           	
  2005  058D                     l3941:	
  2006  058D  09F0               	comf	(___awmod@divisor),f
  2007  058E  09F1               	comf	(___awmod@divisor+1),f
  2008  058F  0AF0               	incf	(___awmod@divisor),f
  2009  0590  1903               	skipnz
  2010  0591  0AF1               	incf	(___awmod@divisor+1),f
  2011  0592  2D93               	goto	l3943
  2012                           	
  2013  0593                     l2392:	
  2014                           	line	15
  2015                           	
  2016  0593                     l3943:	
  2017  0593  0871               	movf	(___awmod@divisor+1),w
  2018  0594  0470               	iorwf	(___awmod@divisor),w
  2019  0595  1903               	skipnz
  2020  0596  2D98               	goto	u2931
  2021  0597  2D99               	goto	u2930
  2022  0598                     u2931:
  2023  0598  2DCF               	goto	l3961
  2024  0599                     u2930:
  2025                           	line	16
  2026                           	
  2027  0599                     l3945:	
  2028  0599  01F5               	clrf	(___awmod@counter)
  2029  059A  1403               	bsf	status,0
  2030  059B  0DF5               	rlf	(___awmod@counter),f
  2031                           	line	17
  2032  059C  2DA9               	goto	l3951
  2033                           	
  2034  059D                     l2395:	
  2035                           	line	18
  2036                           	
  2037  059D                     l3947:	
  2038  059D  3001               	movlw	01h
  2039                           	
  2040  059E                     u2945:
  2041  059E  1003               	clrc
  2042  059F  0DF0               	rlf	(___awmod@divisor),f
  2043  05A0  0DF1               	rlf	(___awmod@divisor+1),f
  2044  05A1  3EFF               	addlw	-1
  2045  05A2  1D03               	skipz
  2046  05A3  2D9E               	goto	u2945
  2047                           	line	19
  2048                           	
  2049  05A4                     l3949:	
  2050  05A4  3001               	movlw	(01h)
  2051  05A5  00F4               	movwf	(??___awmod+0)+0
  2052  05A6  0874               	movf	(??___awmod+0)+0,w
  2053  05A7  07F5               	addwf	(___awmod@counter),f
  2054  05A8  2DA9               	goto	l3951
  2055                           	line	20
  2056                           	
  2057  05A9                     l2394:	
  2058                           	line	17
  2059                           	
  2060  05A9                     l3951:	
  2061  05A9  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  2062  05AA  2DAC               	goto	u2951
  2063  05AB  2DAD               	goto	u2950
  2064  05AC                     u2951:
  2065  05AC  2D9D               	goto	l3947
  2066  05AD                     u2950:
  2067  05AD  2DAF               	goto	l3953
  2068                           	
  2069  05AE                     l2396:	
  2070  05AE  2DAF               	goto	l3953
  2071                           	line	21
  2072                           	
  2073  05AF                     l2397:	
  2074                           	line	22
  2075                           	
  2076  05AF                     l3953:	
  2077  05AF  0871               	movf	(___awmod@divisor+1),w
  2078  05B0  0273               	subwf	(___awmod@dividend+1),w
  2079  05B1  1D03               	skipz
  2080  05B2  2DB5               	goto	u2965
  2081  05B3  0870               	movf	(___awmod@divisor),w
  2082  05B4  0272               	subwf	(___awmod@dividend),w
  2083  05B5                     u2965:
  2084  05B5  1C03               	skipc
  2085  05B6  2DB8               	goto	u2961
  2086  05B7  2DB9               	goto	u2960
  2087  05B8                     u2961:
  2088  05B8  2DC0               	goto	l3957
  2089  05B9                     u2960:
  2090                           	line	23
  2091                           	
  2092  05B9                     l3955:	
  2093  05B9  0870               	movf	(___awmod@divisor),w
  2094  05BA  02F2               	subwf	(___awmod@dividend),f
  2095  05BB  0871               	movf	(___awmod@divisor+1),w
  2096  05BC  1C03               	skipc
  2097  05BD  03F3               	decf	(___awmod@dividend+1),f
  2098  05BE  02F3               	subwf	(___awmod@dividend+1),f
  2099  05BF  2DC0               	goto	l3957
  2100                           	
  2101  05C0                     l2398:	
  2102                           	line	24
  2103                           	
  2104  05C0                     l3957:	
  2105  05C0  3001               	movlw	01h
  2106                           	
  2107  05C1                     u2975:
  2108  05C1  1003               	clrc
  2109  05C2  0CF1               	rrf	(___awmod@divisor+1),f
  2110  05C3  0CF0               	rrf	(___awmod@divisor),f
  2111  05C4  3EFF               	addlw	-1
  2112  05C5  1D03               	skipz
  2113  05C6  2DC1               	goto	u2975
  2114                           	line	25
  2115                           	
  2116  05C7                     l3959:	
  2117  05C7  3001               	movlw	low(01h)
  2118  05C8  02F5               	subwf	(___awmod@counter),f
  2119  05C9  1D03               	btfss	status,2
  2120  05CA  2DCC               	goto	u2981
  2121  05CB  2DCD               	goto	u2980
  2122  05CC                     u2981:
  2123  05CC  2DAF               	goto	l3953
  2124  05CD                     u2980:
  2125  05CD  2DCF               	goto	l3961
  2126                           	
  2127  05CE                     l2399:	
  2128  05CE  2DCF               	goto	l3961
  2129                           	line	26
  2130                           	
  2131  05CF                     l2393:	
  2132                           	line	27
  2133                           	
  2134  05CF                     l3961:	
  2135  05CF  0876               	movf	(___awmod@sign),w
  2136  05D0  1D03               	skipz
  2137  05D1  2DD3               	goto	u2990
  2138  05D2  2DD9               	goto	l3965
  2139  05D3                     u2990:
  2140                           	line	28
  2141                           	
  2142  05D3                     l3963:	
  2143  05D3  09F2               	comf	(___awmod@dividend),f
  2144  05D4  09F3               	comf	(___awmod@dividend+1),f
  2145  05D5  0AF2               	incf	(___awmod@dividend),f
  2146  05D6  1903               	skipnz
  2147  05D7  0AF3               	incf	(___awmod@dividend+1),f
  2148  05D8  2DD9               	goto	l3965
  2149                           	
  2150  05D9                     l2400:	
  2151                           	line	29
  2152                           	
  2153  05D9                     l3965:	
  2154  05D9  0873               	movf	(___awmod@dividend+1),w
  2155  05DA  01F1               	clrf	(?___awmod+1)
  2156  05DB  07F1               	addwf	(?___awmod+1)
  2157  05DC  0872               	movf	(___awmod@dividend),w
  2158  05DD  01F0               	clrf	(?___awmod)
  2159  05DE  07F0               	addwf	(?___awmod)
  2160                           
  2161  05DF  2DE0               	goto	l2401
  2162                           	
  2163  05E0                     l3967:	
  2164                           	line	30
  2165                           	
  2166  05E0                     l2401:	
  2167  05E0  0008               	return
  2168                           	opt stack 0
  2169                           GLOBAL	__end_of___awmod
  2170  05E1                     	__end_of___awmod:
  2171 ;; =============== function ___awmod ends ============
  2172                           
  2173                           	signat	___awmod,8314
  2174                           	global	___awdiv
  2175                           psect	text310,local,class=CODE,delta=2
  2176                           global __ptext310
  2177  05E1                     __ptext310:
  2178                           
  2179 ;; *************** function ___awdiv *****************
  2180 ;; Defined at:
  2181 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  divisor         2    0[COMMON] int 
  2184 ;;  dividend        2    2[COMMON] int 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  quotient        2    7[COMMON] int 
  2187 ;;  sign            1    6[COMMON] unsigned char 
  2188 ;;  counter         1    5[COMMON] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2    0[COMMON] int 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         4       0       0       0       0
  2199 ;;      Locals:         4       0       0       0       0
  2200 ;;      Temps:          1       0       0       0       0
  2201 ;;      Totals:         9       0       0       0       0
  2202 ;;Total ram usage:        9 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;;		_get_int_len
  2209 ;;		_get_int
  2210 ;;		_getkey
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           psect	text310
  2214                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  2215                           	line	5
  2216                           	global	__size_of___awdiv
  2217  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2218                           	
  2219  05E1                     ___awdiv:	
  2220                           	opt	stack 7
  2221                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2222                           	line	9
  2223                           	
  2224  05E1                     l3895:	
  2225  05E1  01F6               	clrf	(___awdiv@sign)
  2226                           	line	10
  2227  05E2  1FF1               	btfss	(___awdiv@divisor+1),7
  2228  05E3  2DE5               	goto	u2811
  2229  05E4  2DE6               	goto	u2810
  2230  05E5                     u2811:
  2231  05E5  2DEF               	goto	l3899
  2232  05E6                     u2810:
  2233                           	line	11
  2234                           	
  2235  05E6                     l3897:	
  2236  05E6  09F0               	comf	(___awdiv@divisor),f
  2237  05E7  09F1               	comf	(___awdiv@divisor+1),f
  2238  05E8  0AF0               	incf	(___awdiv@divisor),f
  2239  05E9  1903               	skipnz
  2240  05EA  0AF1               	incf	(___awdiv@divisor+1),f
  2241                           	line	12
  2242  05EB  01F6               	clrf	(___awdiv@sign)
  2243  05EC  1403               	bsf	status,0
  2244  05ED  0DF6               	rlf	(___awdiv@sign),f
  2245  05EE  2DEF               	goto	l3899
  2246                           	line	13
  2247                           	
  2248  05EF                     l2323:	
  2249                           	line	14
  2250                           	
  2251  05EF                     l3899:	
  2252  05EF  1FF3               	btfss	(___awdiv@dividend+1),7
  2253  05F0  2DF2               	goto	u2821
  2254  05F1  2DF3               	goto	u2820
  2255  05F2                     u2821:
  2256  05F2  2DFD               	goto	l3905
  2257  05F3                     u2820:
  2258                           	line	15
  2259                           	
  2260  05F3                     l3901:	
  2261  05F3  09F2               	comf	(___awdiv@dividend),f
  2262  05F4  09F3               	comf	(___awdiv@dividend+1),f
  2263  05F5  0AF2               	incf	(___awdiv@dividend),f
  2264  05F6  1903               	skipnz
  2265  05F7  0AF3               	incf	(___awdiv@dividend+1),f
  2266                           	line	16
  2267                           	
  2268  05F8                     l3903:	
  2269  05F8  3001               	movlw	(01h)
  2270  05F9  00F4               	movwf	(??___awdiv+0)+0
  2271  05FA  0874               	movf	(??___awdiv+0)+0,w
  2272  05FB  06F6               	xorwf	(___awdiv@sign),f
  2273  05FC  2DFD               	goto	l3905
  2274                           	line	17
  2275                           	
  2276  05FD                     l2324:	
  2277                           	line	18
  2278                           	
  2279  05FD                     l3905:	
  2280  05FD  01F7               	clrf	(___awdiv@quotient)
  2281  05FE  01F8               	clrf	(___awdiv@quotient+1)
  2282                           	line	19
  2283                           	
  2284  05FF                     l3907:	
  2285  05FF  0871               	movf	(___awdiv@divisor+1),w
  2286  0600  0470               	iorwf	(___awdiv@divisor),w
  2287  0601  1903               	skipnz
  2288  0602  2E04               	goto	u2831
  2289  0603  2E05               	goto	u2830
  2290  0604                     u2831:
  2291  0604  2E43               	goto	l3927
  2292  0605                     u2830:
  2293                           	line	20
  2294                           	
  2295  0605                     l3909:	
  2296  0605  01F5               	clrf	(___awdiv@counter)
  2297  0606  1403               	bsf	status,0
  2298  0607  0DF5               	rlf	(___awdiv@counter),f
  2299                           	line	21
  2300  0608  2E15               	goto	l3915
  2301                           	
  2302  0609                     l2327:	
  2303                           	line	22
  2304                           	
  2305  0609                     l3911:	
  2306  0609  3001               	movlw	01h
  2307                           	
  2308  060A                     u2845:
  2309  060A  1003               	clrc
  2310  060B  0DF0               	rlf	(___awdiv@divisor),f
  2311  060C  0DF1               	rlf	(___awdiv@divisor+1),f
  2312  060D  3EFF               	addlw	-1
  2313  060E  1D03               	skipz
  2314  060F  2E0A               	goto	u2845
  2315                           	line	23
  2316                           	
  2317  0610                     l3913:	
  2318  0610  3001               	movlw	(01h)
  2319  0611  00F4               	movwf	(??___awdiv+0)+0
  2320  0612  0874               	movf	(??___awdiv+0)+0,w
  2321  0613  07F5               	addwf	(___awdiv@counter),f
  2322  0614  2E15               	goto	l3915
  2323                           	line	24
  2324                           	
  2325  0615                     l2326:	
  2326                           	line	21
  2327                           	
  2328  0615                     l3915:	
  2329  0615  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  2330  0616  2E18               	goto	u2851
  2331  0617  2E19               	goto	u2850
  2332  0618                     u2851:
  2333  0618  2E09               	goto	l3911
  2334  0619                     u2850:
  2335  0619  2E1B               	goto	l3917
  2336                           	
  2337  061A                     l2328:	
  2338  061A  2E1B               	goto	l3917
  2339                           	line	25
  2340                           	
  2341  061B                     l2329:	
  2342                           	line	26
  2343                           	
  2344  061B                     l3917:	
  2345  061B  3001               	movlw	01h
  2346                           	
  2347  061C                     u2865:
  2348  061C  1003               	clrc
  2349  061D  0DF7               	rlf	(___awdiv@quotient),f
  2350  061E  0DF8               	rlf	(___awdiv@quotient+1),f
  2351  061F  3EFF               	addlw	-1
  2352  0620  1D03               	skipz
  2353  0621  2E1C               	goto	u2865
  2354                           	line	27
  2355  0622  0871               	movf	(___awdiv@divisor+1),w
  2356  0623  0273               	subwf	(___awdiv@dividend+1),w
  2357  0624  1D03               	skipz
  2358  0625  2E28               	goto	u2875
  2359  0626  0870               	movf	(___awdiv@divisor),w
  2360  0627  0272               	subwf	(___awdiv@dividend),w
  2361  0628                     u2875:
  2362  0628  1C03               	skipc
  2363  0629  2E2B               	goto	u2871
  2364  062A  2E2C               	goto	u2870
  2365  062B                     u2871:
  2366  062B  2E34               	goto	l3923
  2367  062C                     u2870:
  2368                           	line	28
  2369                           	
  2370  062C                     l3919:	
  2371  062C  0870               	movf	(___awdiv@divisor),w
  2372  062D  02F2               	subwf	(___awdiv@dividend),f
  2373  062E  0871               	movf	(___awdiv@divisor+1),w
  2374  062F  1C03               	skipc
  2375  0630  03F3               	decf	(___awdiv@dividend+1),f
  2376  0631  02F3               	subwf	(___awdiv@dividend+1),f
  2377                           	line	29
  2378                           	
  2379  0632                     l3921:	
  2380  0632  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2381  0633  2E34               	goto	l3923
  2382                           	line	30
  2383                           	
  2384  0634                     l2330:	
  2385                           	line	31
  2386                           	
  2387  0634                     l3923:	
  2388  0634  3001               	movlw	01h
  2389                           	
  2390  0635                     u2885:
  2391  0635  1003               	clrc
  2392  0636  0CF1               	rrf	(___awdiv@divisor+1),f
  2393  0637  0CF0               	rrf	(___awdiv@divisor),f
  2394  0638  3EFF               	addlw	-1
  2395  0639  1D03               	skipz
  2396  063A  2E35               	goto	u2885
  2397                           	line	32
  2398                           	
  2399  063B                     l3925:	
  2400  063B  3001               	movlw	low(01h)
  2401  063C  02F5               	subwf	(___awdiv@counter),f
  2402  063D  1D03               	btfss	status,2
  2403  063E  2E40               	goto	u2891
  2404  063F  2E41               	goto	u2890
  2405  0640                     u2891:
  2406  0640  2E1B               	goto	l3917
  2407  0641                     u2890:
  2408  0641  2E43               	goto	l3927
  2409                           	
  2410  0642                     l2331:	
  2411  0642  2E43               	goto	l3927
  2412                           	line	33
  2413                           	
  2414  0643                     l2325:	
  2415                           	line	34
  2416                           	
  2417  0643                     l3927:	
  2418  0643  0876               	movf	(___awdiv@sign),w
  2419  0644  1D03               	skipz
  2420  0645  2E47               	goto	u2900
  2421  0646  2E4D               	goto	l3931
  2422  0647                     u2900:
  2423                           	line	35
  2424                           	
  2425  0647                     l3929:	
  2426  0647  09F7               	comf	(___awdiv@quotient),f
  2427  0648  09F8               	comf	(___awdiv@quotient+1),f
  2428  0649  0AF7               	incf	(___awdiv@quotient),f
  2429  064A  1903               	skipnz
  2430  064B  0AF8               	incf	(___awdiv@quotient+1),f
  2431  064C  2E4D               	goto	l3931
  2432                           	
  2433  064D                     l2332:	
  2434                           	line	36
  2435                           	
  2436  064D                     l3931:	
  2437  064D  0878               	movf	(___awdiv@quotient+1),w
  2438  064E  01F1               	clrf	(?___awdiv+1)
  2439  064F  07F1               	addwf	(?___awdiv+1)
  2440  0650  0877               	movf	(___awdiv@quotient),w
  2441  0651  01F0               	clrf	(?___awdiv)
  2442  0652  07F0               	addwf	(?___awdiv)
  2443                           
  2444  0653  2E54               	goto	l2333
  2445                           	
  2446  0654                     l3933:	
  2447                           	line	37
  2448                           	
  2449  0654                     l2333:	
  2450  0654  0008               	return
  2451                           	opt stack 0
  2452                           GLOBAL	__end_of___awdiv
  2453  0655                     	__end_of___awdiv:
  2454 ;; =============== function ___awdiv ends ============
  2455                           
  2456                           	signat	___awdiv,8314
  2457                           	global	_lcd_write
  2458                           psect	text311,local,class=CODE,delta=2
  2459                           global __ptext311
  2460  044A                     __ptext311:
  2461                           
  2462 ;; *************** function _lcd_write *****************
  2463 ;; Defined at:
  2464 ;;		line 23 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \lcd.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  c               1    wreg     unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  c               1    2[COMMON] unsigned char 
  2469 ;;  _dcnt           1    1[COMMON] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;		None               void
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2479 ;;      Params:         0       0       0       0       0
  2480 ;;      Locals:         2       0       0       0       0
  2481 ;;      Temps:          1       0       0       0       0
  2482 ;;      Totals:         3       0       0       0       0
  2483 ;;Total ram usage:        3 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_lcd_clear
  2489 ;;		_lcd_puts
  2490 ;;		_lcd_goto
  2491 ;;		_lcd_init
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           psect	text311
  2495                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\lcd.c"
  2496                           	line	23
  2497                           	global	__size_of_lcd_write
  2498  0025                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  2499                           	
  2500  044A                     _lcd_write:	
  2501                           	opt	stack 6
  2502                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  2503                           ;lcd_write@c stored from wreg
  2504  044A  00F2               	movwf	(lcd_write@c)
  2505                           	line	24
  2506                           	
  2507  044B                     l3881:	
  2508                           ;lcd.c: 24: PORTD = (PORTD & 0x0F) | (c);
  2509  044B  1283               	bcf	status, 5	;RP0=0, select bank0
  2510  044C  1303               	bcf	status, 6	;RP1=0, select bank0
  2511  044D  0808               	movf	(8),w
  2512  044E  390F               	andlw	0Fh
  2513  044F  0472               	iorwf	(lcd_write@c),w
  2514  0450  0088               	movwf	(8)	;volatile
  2515                           	line	25
  2516                           	
  2517  0451                     l3883:	
  2518                           ;lcd.c: 25: ((RE1 = 1),(RE1=0));
  2519  0451  1489               	bsf	(73/8),(73)&7
  2520                           	
  2521  0452                     l3885:	
  2522  0452  1089               	bcf	(73/8),(73)&7
  2523                           	line	26
  2524                           ;lcd.c: 26: PORTD = (PORTD & 0x0F) | (c << 4);
  2525  0453  0872               	movf	(lcd_write@c),w
  2526  0454  00F0               	movwf	(??_lcd_write+0)+0
  2527  0455  3004               	movlw	04h
  2528  0456                     u2795:
  2529  0456  1003               	clrc
  2530  0457  0DF0               	rlf	(??_lcd_write+0)+0,f
  2531  0458  3EFF               	addlw	-1
  2532  0459  1D03               	skipz
  2533  045A  2C56               	goto	u2795
  2534  045B  0808               	movf	(8),w
  2535  045C  390F               	andlw	0Fh
  2536  045D  0470               	iorwf	0+(??_lcd_write+0)+0,w
  2537  045E  0088               	movwf	(8)	;volatile
  2538                           	line	27
  2539                           	
  2540  045F                     l3887:	
  2541                           ;lcd.c: 27: ((RE1 = 1),(RE1=0));
  2542  045F  1489               	bsf	(73/8),(73)&7
  2543                           	
  2544  0460                     l3889:	
  2545  0460  1089               	bcf	(73/8),(73)&7
  2546                           	line	28
  2547                           	
  2548  0461                     l3891:	
  2549                           ;lcd.c: 28: { unsigned char _dcnt; _dcnt = (40)/((12*1000L)/(4*1000L))|1; while(--_dcnt 
                                 != 0) continue; };
  2550  0461  300D               	movlw	(0Dh)
  2551  0462  00F0               	movwf	(??_lcd_write+0)+0
  2552  0463  0870               	movf	(??_lcd_write+0)+0,w
  2553  0464  00F1               	movwf	(lcd_write@_dcnt)
  2554  0465  2C67               	goto	l3893
  2555                           	
  2556  0466                     l1471:	
  2557  0466  2C67               	goto	l3893
  2558                           	
  2559  0467                     l1470:	
  2560                           	
  2561  0467                     l3893:	
  2562  0467  3001               	movlw	low(01h)
  2563  0468  02F1               	subwf	(lcd_write@_dcnt),f
  2564  0469  1D03               	btfss	status,2
  2565  046A  2C6C               	goto	u2801
  2566  046B  2C6D               	goto	u2800
  2567  046C                     u2801:
  2568  046C  2C67               	goto	l3893
  2569  046D                     u2800:
  2570  046D  2C6E               	goto	l1473
  2571                           	
  2572  046E                     l1472:	
  2573                           	line	29
  2574                           	
  2575  046E                     l1473:	
  2576  046E  0008               	return
  2577                           	opt stack 0
  2578                           GLOBAL	__end_of_lcd_write
  2579  046F                     	__end_of_lcd_write:
  2580 ;; =============== function _lcd_write ends ============
  2581                           
  2582                           	signat	_lcd_write,4216
  2583                           	global	_lcd_putch
  2584                           psect	text312,local,class=CODE,delta=2
  2585                           global __ptext312
  2586  046F                     __ptext312:
  2587                           
  2588 ;; *************** function _lcd_putch *****************
  2589 ;; Defined at:
  2590 ;;		line 43 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \lcd.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  c               1    wreg     unsigned char 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  c               1    4[COMMON] unsigned char 
  2595 ;;  _dcnt           1    3[COMMON] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;		None               void
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2605 ;;      Params:         0       0       0       0       0
  2606 ;;      Locals:         2       0       0       0       0
  2607 ;;      Temps:          3       0       0       0       0
  2608 ;;      Totals:         5       0       0       0       0
  2609 ;;Total ram usage:        5 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;;		_putchar
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           psect	text312
  2619                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\lcd.c"
  2620                           	line	43
  2621                           	global	__size_of_lcd_putch
  2622  0033                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  2623                           	
  2624  046F                     _lcd_putch:	
  2625                           	opt	stack 7
  2626                           ; Regs used in _lcd_putch: [wreg+status,2+status,0]
  2627                           ;lcd_putch@c stored from wreg
  2628  046F  00F4               	movwf	(lcd_putch@c)
  2629                           	line	44
  2630                           	
  2631  0470                     l3785:	
  2632                           ;lcd.c: 44: RE0 = 1;
  2633  0470  1283               	bcf	status, 5	;RP0=0, select bank0
  2634  0471  1303               	bcf	status, 6	;RP1=0, select bank0
  2635  0472  1409               	bsf	(72/8),(72)&7
  2636                           	line	45
  2637                           	
  2638  0473                     l3787:	
  2639                           ;lcd.c: 45: PORTC = !(0x31 ^ c) << 1;
  2640  0473  3031               	movlw	low(031h)
  2641  0474  0674               	xorwf	(lcd_putch@c),w
  2642  0475  00F0               	movwf	(??_lcd_putch+0)+0
  2643  0476  3000               	movlw	high(031h)
  2644  0477  00F1               	movwf	1+(??_lcd_putch+0)+0
  2645  0478  0871               	movf	1+(??_lcd_putch+0)+0,w
  2646  0479  0470               	iorwf	0+(??_lcd_putch+0)+0,w
  2647  047A  3000               	movlw	0
  2648  047B  1903               	skipnz
  2649  047C  3001               	movlw	1
  2650  047D  00F2               	movwf	(??_lcd_putch+2)+0
  2651  047E  0772               	addwf	(??_lcd_putch+2)+0,w
  2652  047F  0087               	movwf	(7)	;volatile
  2653                           	line	46
  2654                           ;lcd.c: 46: PORTD = (PORTD & 0x0F) | (c);
  2655  0480  0808               	movf	(8),w
  2656  0481  390F               	andlw	0Fh
  2657  0482  0474               	iorwf	(lcd_putch@c),w
  2658  0483  0088               	movwf	(8)	;volatile
  2659                           	line	47
  2660                           	
  2661  0484                     l3789:	
  2662                           ;lcd.c: 47: ((RE1 = 1),(RE1=0));
  2663  0484  1489               	bsf	(73/8),(73)&7
  2664                           	
  2665  0485                     l3791:	
  2666  0485  1089               	bcf	(73/8),(73)&7
  2667                           	line	48
  2668                           ;lcd.c: 48: PORTD = (PORTD & 0x0F) | (c << 4);
  2669  0486  0874               	movf	(lcd_putch@c),w
  2670  0487  00F0               	movwf	(??_lcd_putch+0)+0
  2671  0488  3004               	movlw	04h
  2672  0489                     u2615:
  2673  0489  1003               	clrc
  2674  048A  0DF0               	rlf	(??_lcd_putch+0)+0,f
  2675  048B  3EFF               	addlw	-1
  2676  048C  1D03               	skipz
  2677  048D  2C89               	goto	u2615
  2678  048E  0808               	movf	(8),w
  2679  048F  390F               	andlw	0Fh
  2680  0490  0470               	iorwf	0+(??_lcd_putch+0)+0,w
  2681  0491  0088               	movwf	(8)	;volatile
  2682                           	line	49
  2683                           	
  2684  0492                     l3793:	
  2685                           ;lcd.c: 49: ((RE1 = 1),(RE1=0));
  2686  0492  1489               	bsf	(73/8),(73)&7
  2687                           	
  2688  0493                     l3795:	
  2689  0493  1089               	bcf	(73/8),(73)&7
  2690                           	line	50
  2691                           	
  2692  0494                     l3797:	
  2693                           ;lcd.c: 50: { unsigned char _dcnt; _dcnt = (40)/((12*1000L)/(4*1000L))|1; while(--_dcnt 
                                 != 0) continue; };
  2694  0494  300D               	movlw	(0Dh)
  2695  0495  00F0               	movwf	(??_lcd_putch+0)+0
  2696  0496  0870               	movf	(??_lcd_putch+0)+0,w
  2697  0497  00F3               	movwf	(lcd_putch@_dcnt)
  2698  0498  2C9A               	goto	l3799
  2699                           	
  2700  0499                     l1486:	
  2701  0499  2C9A               	goto	l3799
  2702                           	
  2703  049A                     l1485:	
  2704                           	
  2705  049A                     l3799:	
  2706  049A  3001               	movlw	low(01h)
  2707  049B  02F3               	subwf	(lcd_putch@_dcnt),f
  2708  049C  1D03               	btfss	status,2
  2709  049D  2C9F               	goto	u2621
  2710  049E  2CA0               	goto	u2620
  2711  049F                     u2621:
  2712  049F  2C9A               	goto	l3799
  2713  04A0                     u2620:
  2714  04A0  2CA1               	goto	l1488
  2715                           	
  2716  04A1                     l1487:	
  2717                           	line	51
  2718                           	
  2719  04A1                     l1488:	
  2720  04A1  0008               	return
  2721                           	opt stack 0
  2722                           GLOBAL	__end_of_lcd_putch
  2723  04A2                     	__end_of_lcd_putch:
  2724 ;; =============== function _lcd_putch ends ============
  2725                           
  2726                           	signat	_lcd_putch,4216
  2727                           	global	_DelayMs
  2728                           psect	text313,local,class=CODE,delta=2
  2729                           global __ptext313
  2730  0405                     __ptext313:
  2731                           
  2732 ;; *************** function _DelayMs *****************
  2733 ;; Defined at:
  2734 ;;		line 11 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 1
       \delay.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  cnt             1    wreg     unsigned char 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  cnt             1    1[COMMON] unsigned char 
  2739 ;;  _dcnt           1    3[COMMON] unsigned char 
  2740 ;;  i               1    2[COMMON] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;		None               void
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       0       0       0       0
  2751 ;;      Locals:         3       0       0       0       0
  2752 ;;      Temps:          1       0       0       0       0
  2753 ;;      Totals:         4       0       0       0       0
  2754 ;;Total ram usage:        4 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;;		_lcd_clear
  2761 ;;		_lcd_init
  2762 ;;		_getkey
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           psect	text313
  2766                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 1\delay.c"
  2767                           	line	11
  2768                           	global	__size_of_DelayMs
  2769  0021                     	__size_of_DelayMs	equ	__end_of_DelayMs-_DelayMs
  2770                           	
  2771  0405                     _DelayMs:	
  2772                           	opt	stack 6
  2773                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  2774                           ;DelayMs@cnt stored from wreg
  2775  0405  00F1               	movwf	(DelayMs@cnt)
  2776                           	line	20
  2777                           ;delay.c: 19: unsigned char i;
  2778                           ;delay.c: 20: do {
  2779                           	
  2780  0406                     l3:	
  2781                           	line	21
  2782                           	
  2783  0406                     l3777:	
  2784                           ;delay.c: 21: i = 4;
  2785  0406  3004               	movlw	(04h)
  2786  0407  00F0               	movwf	(??_DelayMs+0)+0
  2787  0408  0870               	movf	(??_DelayMs+0)+0,w
  2788  0409  00F2               	movwf	(DelayMs@i)
  2789                           	line	22
  2790                           ;delay.c: 22: do {
  2791                           	
  2792  040A                     l4:	
  2793                           	line	23
  2794                           ;delay.c: 23: { unsigned char _dcnt; _dcnt = (250)/((12*1000L)/(4*1000L))|1; while(--_dc
                                 nt != 0) continue; };
  2795  040A  3053               	movlw	(053h)
  2796  040B  00F0               	movwf	(??_DelayMs+0)+0
  2797  040C  0870               	movf	(??_DelayMs+0)+0,w
  2798  040D  00F3               	movwf	(DelayMs@_dcnt)
  2799  040E  2C10               	goto	l3779
  2800                           	
  2801  040F                     l6:	
  2802  040F  2C10               	goto	l3779
  2803                           	
  2804  0410                     l5:	
  2805                           	
  2806  0410                     l3779:	
  2807  0410  3001               	movlw	low(01h)
  2808  0411  02F3               	subwf	(DelayMs@_dcnt),f
  2809  0412  1D03               	btfss	status,2
  2810  0413  2C15               	goto	u2581
  2811  0414  2C16               	goto	u2580
  2812  0415                     u2581:
  2813  0415  2C10               	goto	l3779
  2814  0416                     u2580:
  2815  0416  2C17               	goto	l3781
  2816                           	
  2817  0417                     l7:	
  2818                           	line	24
  2819                           	
  2820  0417                     l3781:	
  2821                           ;delay.c: 24: } while(--i);
  2822  0417  3001               	movlw	low(01h)
  2823  0418  02F2               	subwf	(DelayMs@i),f
  2824  0419  1D03               	btfss	status,2
  2825  041A  2C1C               	goto	u2591
  2826  041B  2C1D               	goto	u2590
  2827  041C                     u2591:
  2828  041C  2C0A               	goto	l4
  2829  041D                     u2590:
  2830  041D  2C1E               	goto	l3783
  2831                           	
  2832  041E                     l8:	
  2833                           	line	25
  2834                           	
  2835  041E                     l3783:	
  2836                           ;delay.c: 25: } while(--cnt);
  2837  041E  3001               	movlw	low(01h)
  2838  041F  02F1               	subwf	(DelayMs@cnt),f
  2839  0420  1D03               	btfss	status,2
  2840  0421  2C23               	goto	u2601
  2841  0422  2C24               	goto	u2600
  2842  0423                     u2601:
  2843  0423  2C06               	goto	l3
  2844  0424                     u2600:
  2845  0424  2C25               	goto	l10
  2846                           	
  2847  0425                     l9:	
  2848                           	line	27
  2849                           	
  2850  0425                     l10:	
  2851  0425  0008               	return
  2852                           	opt stack 0
  2853                           GLOBAL	__end_of_DelayMs
  2854  0426                     	__end_of_DelayMs:
  2855 ;; =============== function _DelayMs ends ============
  2856                           
  2857                           	signat	_DelayMs,4216
  2858                           psect	text314,local,class=CODE,delta=2
  2859                           global __ptext314
  2860  0000                     __ptext314:
  2861                           	global	btemp
  2862  007E                     	btemp set 07Eh
  2863                           
  2864                           	DABS	1,126,2	;btemp
  2865                           	global	wtemp0
  2866  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 04 10:29:28 2022

                   l3 0406                     l4 040A                     l5 0410                     l6 040F  
                   l7 0417                     l8 041E                     l9 0425                     pc 0002  
                  l10 0425                    _RD 0C60                    _WR 0C61          ___awdiv@sign 0076  
                  _x1 0028                    _x2 002A                    _id 003C                    _op 002D  
                  fsr 0004                   l730 06C0                   l731 06E1                   l740 07FD  
                 l732 077E                   l741 07FD                   l733 06FC                   l750 0507  
                 l734 0734                   l751 04E7                   l735 0774                   l752 0516  
                 l744 04CB                   l736 077E                   l753 051F                   l745 04AD  
                 l737 07B6                   l729 0687                   l746 04D2                   l738 07BA  
                 l747 04D9                   l739 07F9                   _GIE 005F                   _RC1 0039  
                 _RE0 0048                   _RE1 0049                   _RC5 003D                   _RE2 004A  
                 _RC6 003E                   _RC7 003F                   _col 0020                   fsr0 0004  
                 _row 0024          ___awmod@sign 0076           lcd_goto@pos 0073                  l1500 057A  
                l2400 05D9                  l2401 05E0                  l4001 03D7                  l2330 0634  
                l2331 0642                  l2323 05EF                  l4003 03DA                  l4011 0500  
                l2332 064D                  l2324 05FD                  l2333 0654                  l2325 0643  
                l4013 0507                  l4005 04DA                  l4021 04AA                  l4101 07B2  
                l1470 0467                  l2326 0615                  l1471 0466                  l2327 0609  
                l4015 0516                  l4007 04E2                  l4031 04D9                  l4023 04AD  
                l4103 07BA                  l1472 046E                  l2328 061A                  l1480 042B  
                l1473 046E                  l2329 061B                  l4017 051F                  l4009 04E7  
                l4025 04B3                  l4033 03CC                  l1481 0449                  l4041 0437  
                l4105 07F5                  l1482 0449                  l4027 04CB                  l4019 04A2  
                l1491 03D6                  l4035 03CF                  l4043 043C                  l4051 065D  
                l1476 03E6                  l1485 049A                  l4029 04D2                  l4037 0427  
                l4061 0676                  l4053 0660                  l4045 0655                  l1486 0499  
                l1494 053F                  l1487 04A1                  l2391 0589                  l1495 053E  
                l1479 043C                  l4039 042B                  l4071 06B2                  l4063 0678  
                l4055 0666                  l4047 0658                  l1488 04A1                  l2392 0593  
                l1496 0545                  l2393 05CF                  l1497 055B                  l4081 06E7  
                l4065 0686                  l4073 06C0                  l4057 066B                  l4049 065B  
                l2394 05A9                  l1498 055A                  l2395 059D                  l1499 0562  
                l4091 0720                  l4083 06EB                  l4075 06D4                  l4067 0687  
                l4059 0670                  l2396 05AE                  l2397 05AF                  l4093 0726  
                l4085 06ED                  l4077 06DA                  l4069 06AA                  l2398 05C0  
                l2399 05CE                  l4087 06FB                  l4095 0734                  l4079 06E1  
                l4097 0743                  l4089 06FC                  l4099 0774                  l3901 05F3  
                l3911 0609                  l3903 05F8                  l3921 0632                  l3913 0610  
                l3905 05FD                  l3931 064D                  l3923 0634                  l3915 0615  
                l3907 05FF                  l3781 0417                  l3933 0654                  l3925 063B  
                l3917 061B                  l3909 0605                  l3941 058D                  l3783 041E  
                l3791 0485                  l3919 062C                  l3927 0643                  l3951 05A9  
                l3943 0593                  l3935 057B                  l3777 0406                  l3793 0492  
                l3785 0470                  l3881 044B                  l3929 0647                  l3953 05AF  
                l3945 0599                  l3961 05CF                  l3937 0580                  l3779 0410  
                l3795 0493                  l3787 0473                  l3891 0461                  l3883 0451  
                l3963 05D3                  l3955 05B9                  l3947 059D                  l3939 0589  
                l3971 0523                  l3797 0494                  l3789 0484                  l3893 0467  
                l3885 0452                  l3965 05D9                  l3957 05C0                  l3949 05A4  
                l3981 0535                  l3973 0529                  l3799 049A                  l3887 045F  
                l3895 05E1                  l3967 05E0                  l3959 05C7                  l3991 0553  
                l3983 0538                  l3975 052D                  l3889 0460                  l3897 05E6  
                l3993 0554                  l3985 053F                  l3977 052E                  l3969 0520  
                l3899 05EF                  l3995 0555                  l3987 0549                  l3979 052F  
                l3997 055B                  l3989 054F                  l3999 0562                  STR_1 0009  
                u3000 0545                  u3001 0544                  u3010 0561                  u3011 0560  
                u3020 0515                  u3100 0743                  u3021 0514                  u3101 0742  
                u3030 04D1                  u3110 07B2                  u3031 04D0                  u3111 07B1  
                u3040 0448                  u3120 07F5                  u3025 0511                  u3041 0447  
                u3121 07F4                  u3105 073F                  u3050 0685                  u3051 0684  
                u3060 06BF                  u3125 07F1                  u3061 06BE                  u3070 06D4  
                u3071 06D3                  u3055 0681                  u2600 0424                  u3080 06FA  
                u2601 0423                  u3081 06F9                  u3065 06BB                  u3090 0733  
                u3091 0732                  u2620 04A0                  u2621 049F                  u3085 06F6  
                u2615 0489                  u3095 072F                  u2800 046D                  u2801 046C  
                u2810 05E6                  u2811 05E5                  u2580 0416                  u2900 0647  
                u2820 05F3                  u2581 0415                  u2821 05F2                  u2590 041D  
                u2830 0605                  u2910 0580                  u2591 041C                  u2831 0604  
                u2911 057F                  u2920 058D                  u2921 058C                  u2850 0619  
                u2930 0599                  u2851 0618                  u2931 0598                  u2845 060A  
                u2870 062C                  u2950 05AD                  u2871 062B                  u2951 05AC  
                u2960 05B9                  u2865 061C                  u2961 05B8                  u2945 059E  
                u2890 0641                  u2795 0456                  u2891 0640                  u2875 0628  
                u2980 05CD                  u2885 0635                  u2981 05CC                  u2965 05B5  
                u2990 05D3                  u2975 05C1                  _WREN 0C62                  _main 0655  
                btemp 007E                  start 0000       __end_of_DelayMs 0426                 ?_main 0070  
     __end_of___awdiv 0655                 _EEADR 010D       __end_of___awmod 05E1                 _CARRY 0018  
     ___awdiv@divisor 0070       ___awdiv@counter 0075                 _PORTB 0006                 _PORTC 0007  
               _PORTD 0008                 _TRISB 0086                 _TRISC 0087                 _TRISD 0088  
               _TRISE 0089                 _Chkey 002C                 _nRBPU 040F       __end_of_get_int 0520  
       lcd_init@_dcnt 0075                 main@i 0036                 pclath 000A                 status 0003  
               wtemp0 007E         get_int_len@id 0079          __end_of_main 0800                ??_main 0032  
              _ADCON1 009F                _EEDATA 010C                _EECON1 018C                _EECON2 018D  
    ___awdiv@dividend 0072             ??_DelayMs 0070      __end_of_lcd_init 057B      __end_of_lcd_goto 03D7  
    __end_of_lcd_puts 044A             ??___awdiv 0074             ??___awmod 0074  __size_of_get_int_len 0038  
    ___awdiv@quotient 0077       ___awmod@divisor 0070       ___awmod@counter 0075             ??_get_int 007D  
      get_int_len@len 002E        __pcstackCOMMON 0070          __pidataBANK0 03C9    __size_of_lcd_clear 0010  
  __size_of_lcd_putch 0033    __size_of_lcd_write 0025            __pbssBANK0 0020            __pmaintext 0655  
           ?_lcd_init 0070             ?_lcd_goto 0070             ?_lcd_puts 0070               _DelayMs 0405  
   __end_of_lcd_clear 03E7     __end_of_lcd_putch 04A2               ___awdiv 05E1               ___awmod 057B  
   __end_of_lcd_write 046F               _get_int 04DA    lcd_init@_dcnt_2132 0076        lcd_putch@_dcnt 0073  
    ___awmod@dividend 0072            ??_lcd_init 0074            ??_lcd_goto 0073               main@sum 003A  
          ??_lcd_puts 0073  end_of_initialization 0401            main@i_1278 0038        lcd_write@_dcnt 0071  
          get_int@val 0030            get_int@pos 007B            lcd_putch@c 0074       get_int_len@temp 0030  
       ??_get_int_len 007B            lcd_write@c 0072          DelayMs@_dcnt 0073   start_initialization 03E7  
         __pdataBANK0 003C   __end_of_get_int_len 04DA         __pcstackBANK0 002E              ?_DelayMs 0070  
   __size_of_lcd_init 005B     __size_of_lcd_goto 000C     __size_of_lcd_puts 0024              ?___awdiv 0070  
           __ptext310 05E1             __ptext311 044A             __ptext303 0426             __ptext312 046F  
           __ptext304 03CB             __ptext313 0405             __ptext305 04A2             __ptext314 0000  
           __ptext306 04DA             __ptext307 03D7             __ptext308 0520             __ptext309 057B  
            ?___awmod 0070             _lcd_clear 03D7             __pstrings 0003             _lcd_putch 046F  
           _lcd_write 044A              ?_get_int 0079              DelayMs@i 0072           _get_int_len 04A2  
          ?_lcd_clear 0070            ?_lcd_putch 0070           __stringbase 0008            ?_lcd_write 0070  
           get_int@id 0079             lcd_puts@s 0074      _start_displaying 0026      __size_of_DelayMs 0021  
    __size_of___awdiv 0074      __size_of___awmod 0066      __size_of_get_int 0046              _lcd_init 0520  
            _lcd_goto 03CB              _lcd_puts 0426         __size_of_main 01AB              get_int@i 002E  
         ??_lcd_clear 0074           ??_lcd_putch 0070           ??_lcd_write 0070            DelayMs@cnt 0071  
           stringcode 0003              stringdir 0003              stringtab 0003           _pressed_key 0022  
        ?_get_int_len 0079  
