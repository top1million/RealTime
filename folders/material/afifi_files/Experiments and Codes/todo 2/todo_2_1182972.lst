

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 18 10:28:01 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 14 "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments
                                  and Codes\todo 2\capture.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 14 "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments
                                  and Codes\todo 2\capture.c"
    45  2007  FF7A               	dw 0xFFFF & 0xFFFB & 0xFF7F & 0xFFFE & 0xFFFF ;#
    46                           	FNCALL	_main,_DelayMs
    47                           	FNCALL	_main,_lcd_init
    48                           	FNCALL	_main,_lcd_clear
    49                           	FNCALL	_main,_init_a2d
    50                           	FNCALL	_main,_lcd_goto
    51                           	FNCALL	_main,_read_a2d
    52                           	FNCALL	_main,___ftdiv
    53                           	FNCALL	_main,_read_a2d2
    54                           	FNCALL	_main,___ftadd
    55                           	FNCALL	_main,_ftoa
    56                           	FNCALL	_main,_lcd_puts
    57                           	FNCALL	_main,___ftge
    58                           	FNCALL	_ftoa,___fttol
    59                           	FNCALL	_ftoa,___awtoft
    60                           	FNCALL	_ftoa,___ftneg
    61                           	FNCALL	_ftoa,___ftadd
    62                           	FNCALL	_ftoa,_intToStr
    63                           	FNCALL	_ftoa,_pow
    64                           	FNCALL	_ftoa,___ftmul
    65                           	FNCALL	_pow,___ftge
    66                           	FNCALL	_pow,___fttol
    67                           	FNCALL	_pow,___lltoft
    68                           	FNCALL	_pow,___ftneg
    69                           	FNCALL	_pow,_log
    70                           	FNCALL	_pow,___ftmul
    71                           	FNCALL	_pow,_exp
    72                           	FNCALL	_exp,___ftge
    73                           	FNCALL	_exp,___ftneg
    74                           	FNCALL	_exp,___ftmul
    75                           	FNCALL	_exp,_floor
    76                           	FNCALL	_exp,___fttol
    77                           	FNCALL	_exp,___awtoft
    78                           	FNCALL	_exp,___ftsub
    79                           	FNCALL	_exp,_eval_poly
    80                           	FNCALL	_exp,_ldexp
    81                           	FNCALL	_exp,___ftdiv
    82                           	FNCALL	_log,___ftge
    83                           	FNCALL	_log,_frexp
    84                           	FNCALL	_log,___ftmul
    85                           	FNCALL	_log,___ftadd
    86                           	FNCALL	_log,_eval_poly
    87                           	FNCALL	_log,___awtoft
    88                           	FNCALL	_eval_poly,___bmul
    89                           	FNCALL	_eval_poly,___ftmul
    90                           	FNCALL	_eval_poly,___ftadd
    91                           	FNCALL	_floor,_frexp
    92                           	FNCALL	_floor,___ftge
    93                           	FNCALL	_floor,___fttol
    94                           	FNCALL	_floor,___altoft
    95                           	FNCALL	_floor,___ftadd
    96                           	FNCALL	___ftsub,___ftadd
    97                           	FNCALL	_read_a2d2,_DelayMs
    98                           	FNCALL	_read_a2d2,___lbtoft
    99                           	FNCALL	_read_a2d,_DelayMs
   100                           	FNCALL	_read_a2d,___lbtoft
   101                           	FNCALL	_ldexp,___ftge
   102                           	FNCALL	_ldexp,___ftneg
   103                           	FNCALL	___lltoft,___ftpack
   104                           	FNCALL	___altoft,___ftpack
   105                           	FNCALL	___awtoft,___ftpack
   106                           	FNCALL	___lbtoft,___ftpack
   107                           	FNCALL	___ftmul,___ftpack
   108                           	FNCALL	___ftdiv,___ftpack
   109                           	FNCALL	___ftadd,___ftpack
   110                           	FNCALL	_intToStr,___lwmod
   111                           	FNCALL	_intToStr,___lwdiv
   112                           	FNCALL	_intToStr,_reverse
   113                           	FNCALL	_lcd_puts,_lcd_write
   114                           	FNCALL	_lcd_goto,_lcd_write
   115                           	FNCALL	_lcd_clear,_lcd_write
   116                           	FNCALL	_lcd_clear,_DelayMs
   117                           	FNCALL	_lcd_init,_DelayMs
   118                           	FNCALL	_lcd_init,_lcd_write
   119                           	FNROOT	_main
   120                           	FNCALL	intlevel1,_IntVector
   121                           	global	intlevel1
   122                           	FNROOT	intlevel1
   123                           	global	exp@coeff
   124                           psect	strings,class=STRING,delta=2
   125                           global __pstrings
   126  0800                     __pstrings:
   127                           ;	global	stringdir,stringtab,__stringbase
   128  0800                     stringtab:
   129                           ;	String table - string pointers are 1 byte each
   130  0800  1BFF               	btfsc	(btemp+1),7
   131  0801  280A               	ljmp	stringcode
   132  0802  1383               	bcf	status,7
   133  0803  187F               	btfsc	(btemp+1),0
   134  0804  1783               	bsf	status,7
   135  0805  0800               	movf	indf,w
   136  0806  0A84               	incf fsr
   137  0807  1903               skipnz
   138  0808  0AFF               incf btemp+1
   139  0809  0008               	return
   140  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   141  080A  3008               movlw high(stringdir)
   142  080B  008A               movwf pclath
   143  080C  0804               movf fsr,w
   144  080D  0A84               incf fsr
   145  080E  0782               	addwf pc
   146  080F                     __stringbase:
   147  080F  3400               	retlw	0
   148                           psect	strings
   149                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\exp.c"
   150                           	line	17
   151  0810                     exp@coeff:
   152  0810  3400               	retlw	0x0
   153  0811  3480               	retlw	0x80
   154  0812  343F               	retlw	0x3f
   155                           
   156  0813  3472               	retlw	0x72
   157  0814  3431               	retlw	0x31
   158  0815  343F               	retlw	0x3f
   159                           
   160  0816  34FE               	retlw	0xfe
   161  0817  3475               	retlw	0x75
   162  0818  343E               	retlw	0x3e
   163                           
   164  0819  3458               	retlw	0x58
   165  081A  3463               	retlw	0x63
   166  081B  343D               	retlw	0x3d
   167                           
   168  081C  3495               	retlw	0x95
   169  081D  341D               	retlw	0x1d
   170  081E  343C               	retlw	0x3c
   171                           
   172  081F  34C5               	retlw	0xc5
   173  0820  34AE               	retlw	0xae
   174  0821  343A               	retlw	0x3a
   175                           
   176  0822  3479               	retlw	0x79
   177  0823  3421               	retlw	0x21
   178  0824  3439               	retlw	0x39
   179                           
   180  0825  3494               	retlw	0x94
   181  0826  3480               	retlw	0x80
   182  0827  3437               	retlw	0x37
   183                           
   184  0828  3493               	retlw	0x93
   185  0829  34A7               	retlw	0xa7
   186  082A  3435               	retlw	0x35
   187                           
   188  082B  3456               	retlw	0x56
   189  082C  3415               	retlw	0x15
   190  082D  3434               	retlw	0x34
   191                           
   192                           	global	log@coeff
   193                           psect	strings
   194                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
   195                           	line	9
   196  082E                     log@coeff:
   197  082E  3400               	retlw	0x0
   198  082F  3400               	retlw	0x0
   199  0830  3400               	retlw	0x0
   200                           
   201  0831  3400               	retlw	0x0
   202  0832  3480               	retlw	0x80
   203  0833  343F               	retlw	0x3f
   204                           
   205  0834  34F0               	retlw	0xf0
   206  0835  34FF               	retlw	0xff
   207  0836  34BE               	retlw	0xbe
   208                           
   209  0837  34E2               	retlw	0xe2
   210  0838  34A9               	retlw	0xa9
   211  0839  343E               	retlw	0x3e
   212                           
   213  083A  3483               	retlw	0x83
   214  083B  3476               	retlw	0x76
   215  083C  34BE               	retlw	0xbe
   216                           
   217  083D  34AE               	retlw	0xae
   218  083E  342B               	retlw	0x2b
   219  083F  343E               	retlw	0x3e
   220                           
   221  0840  343C               	retlw	0x3c
   222  0841  34C3               	retlw	0xc3
   223  0842  34BD               	retlw	0xbd
   224                           
   225  0843  34D2               	retlw	0xd2
   226  0844  3413               	retlw	0x13
   227  0845  343D               	retlw	0x3d
   228                           
   229  0846  3478               	retlw	0x78
   230  0847  34D3               	retlw	0xd3
   231  0848  34BB               	retlw	0xbb
   232                           
   233                           	global	exp@coeff
   234                           	global	log@coeff
   235                           	global	_d2Counter
   236                           	global	_errno
   237                           	global	_str2
   238                           	global	_x
   239                           	global	_x2
   240                           	global	_d1Counter
   241                           	global	_state
   242                           	global	_str
   243                           	global	_ADCON0
   244  001F                     _ADCON0	set	31
   245                           	global	_ADRESH
   246  001E                     _ADRESH	set	30
   247                           	global	_CCP1CON
   248  0017                     _CCP1CON	set	23
   249                           	global	_CCPR1L
   250  0015                     _CCPR1L	set	21
   251                           	global	_PORTC
   252  0007                     _PORTC	set	7
   253                           	global	_PORTD
   254  0008                     _PORTD	set	8
   255                           	global	_T2CON
   256  0012                     _T2CON	set	18
   257                           	global	_TMR0
   258  0001                     _TMR0	set	1
   259                           	global	_TMR1H
   260  000F                     _TMR1H	set	15
   261                           	global	_TMR1L
   262  000E                     _TMR1L	set	14
   263                           	global	_ADON
   264  00F8                     _ADON	set	248
   265                           	global	_CARRY
   266  0018                     _CARRY	set	24
   267                           	global	_GIE
   268  005F                     _GIE	set	95
   269                           	global	_GO_nDONE
   270  00FA                     _GO_nDONE	set	250
   271                           	global	_PEIE
   272  005E                     _PEIE	set	94
   273                           	global	_RE0
   274  0048                     _RE0	set	72
   275                           	global	_RE1
   276  0049                     _RE1	set	73
   277                           	global	_RE2
   278  004A                     _RE2	set	74
   279                           	global	_T0IE
   280  005D                     _T0IE	set	93
   281                           	global	_T0IF
   282  005A                     _T0IF	set	90
   283                           	global	_T1CKPS0
   284  0084                     _T1CKPS0	set	132
   285                           	global	_T1CKPS1
   286  0085                     _T1CKPS1	set	133
   287                           	global	_T1SYNC
   288  0082                     _T1SYNC	set	130
   289                           	global	_TMR1CS
   290  0081                     _TMR1CS	set	129
   291                           	global	_TMR1IF
   292  0060                     _TMR1IF	set	96
   293                           	global	_TMR1ON
   294  0080                     _TMR1ON	set	128
   295                           	global	_ADCON1
   296  009F                     _ADCON1	set	159
   297                           	global	_OPTION_REG
   298  0081                     _OPTION_REG	set	129
   299                           	global	_PR2
   300  0092                     _PR2	set	146
   301                           	global	_TRISA
   302  0085                     _TRISA	set	133
   303                           	global	_TRISC
   304  0087                     _TRISC	set	135
   305                           	global	_TRISD
   306  0088                     _TRISD	set	136
   307                           	global	_TRISE
   308  0089                     _TRISE	set	137
   309                           	global	_TMR1IE
   310  0460                     _TMR1IE	set	1120
   311                           	global	_nRBPU
   312  040F                     _nRBPU	set	1039
   313                           	global	_EEADR
   314  010D                     _EEADR	set	269
   315                           	global	_EEDATA
   316  010C                     _EEDATA	set	268
   317                           	global	_EECON1
   318  018C                     _EECON1	set	396
   319                           	global	_EECON2
   320  018D                     _EECON2	set	397
   321                           	global	_RD
   322  0C60                     _RD	set	3168
   323                           	global	_WR
   324  0C61                     _WR	set	3169
   325                           	global	_WREN
   326  0C62                     _WREN	set	3170
   327                           	
   328  0849                     STR_1:	
   329  0849  3447               	retlw	71	;'G'
   330  084A  3472               	retlw	114	;'r'
   331  084B  3465               	retlw	101	;'e'
   332  084C  3461               	retlw	97	;'a'
   333  084D  3474               	retlw	116	;'t'
   334  084E  3465               	retlw	101	;'e'
   335  084F  3472               	retlw	114	;'r'
   336  0850  3420               	retlw	32	;' '
   337  0851  3474               	retlw	116	;'t'
   338  0852  3468               	retlw	104	;'h'
   339  0853  3461               	retlw	97	;'a'
   340  0854  346E               	retlw	110	;'n'
   341  0855  3420               	retlw	32	;' '
   342  0856  3435               	retlw	53	;'5'
   343  0857  3400               	retlw	0
   344                           psect	strings
   345                           	
   346  0858                     STR_2:	
   347  0858  344C               	retlw	76	;'L'
   348  0859  3465               	retlw	101	;'e'
   349  085A  3473               	retlw	115	;'s'
   350  085B  3473               	retlw	115	;'s'
   351  085C  3420               	retlw	32	;' '
   352  085D  3454               	retlw	84	;'T'
   353  085E  3468               	retlw	104	;'h'
   354  085F  3461               	retlw	97	;'a'
   355  0860  346E               	retlw	110	;'n'
   356  0861  3420               	retlw	32	;' '
   357  0862  3435               	retlw	53	;'5'
   358  0863  3400               	retlw	0
   359                           psect	strings
   360                           	file	"todo_2_1182972.as"
   361                           	line	#
   362                           psect cinit,class=CODE,delta=2
   363                           global start_initialization
   364  15E0                     start_initialization:
   365                           
   366                           psect	bssCOMMON,class=COMMON,space=1
   367                           global __pbssCOMMON
   368  0076                     __pbssCOMMON:
   369  0076                     _d2Counter:
   370  0076                            ds      2
   371                           
   372  0078                     _errno:
   373  0078                            ds      2
   374                           
   375                           psect	bssBANK1,class=BANK1,space=1
   376                           global __pbssBANK1
   377  00C6                     __pbssBANK1:
   378  00C6                     _str2:
   379  00C6                            ds      10
   380                           
   381  00D0                     _x:
   382  00D0                            ds      3
   383                           
   384  00D3                     _x2:
   385  00D3                            ds      3
   386                           
   387  00D6                     _d1Counter:
   388  00D6                            ds      2
   389                           
   390  00D8                     _state:
   391  00D8                            ds      2
   392                           
   393  00DA                     _str:
   394  00DA                            ds      10
   395                           
   396                           psect clrtext,class=CODE,delta=2
   397                           global clear_ram
   398                           ;	Called with FSR containing the base address, and
   399                           ;	W with the last address+1
   400  15AE                     clear_ram:
   401  15AE  0064               	clrwdt			;clear the watchdog before getting into this loop
   402  15AF                     clrloop:
   403  15AF  0180               	clrf	indf		;clear RAM location pointed to by FSR
   404  15B0  0A84               	incf	fsr,f		;increment pointer
   405  15B1  0604               	xorwf	fsr,w		;XOR with final address
   406  15B2  1903               	btfsc	status,2	;have we reached the end yet?
   407  15B3  3400               	retlw	0		;all done for this memory range, return
   408  15B4  0604               	xorwf	fsr,w		;XOR again to restore value
   409  15B5  2DAF               	goto	clrloop		;do the next byte
   410                           
   411                           ; Clear objects allocated to COMMON
   412                           psect cinit,class=CODE,delta=2
   413  15E0  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   414  15E1  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   415  15E2  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   416  15E3  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
   417                           ; Clear objects allocated to BANK1
   418                           psect cinit,class=CODE,delta=2
   419  15E4  1383               	bcf	status, 7	;select IRP bank0
   420  15E5  30C6               	movlw	low(__pbssBANK1)
   421  15E6  0084               	movwf	fsr
   422  15E7  30E4               	movlw	low((__pbssBANK1)+01Eh)
   423  15E8  160A  118A  25AE   	fcall	clear_ram
              160A  118A         
   424                           psect cinit,class=CODE,delta=2
   425                           global end_of_initialization
   426                           
   427                           ;End of C runtime variable initialization code
   428                           
   429  15ED                     end_of_initialization:
   430  15ED  0183               clrf status
   431  15EE  120A  118A  2815   ljmp _main	;jump to C main() function
   432                           psect	cstackBANK1,class=BANK1,space=1
   433                           global __pcstackBANK1
   434  00A0                     __pcstackBANK1:
   435                           	global	?_pow
   436  00A0                     ?_pow:	; 3 bytes @ 0x0
   437                           	global	pow@x
   438  00A0                     pow@x:	; 3 bytes @ 0x0
   439  00A0                     	ds	3
   440                           	global	pow@y
   441  00A3                     pow@y:	; 3 bytes @ 0x3
   442  00A3                     	ds	3
   443                           	global	??_pow
   444  00A6                     ??_pow:	; 0 bytes @ 0x6
   445  00A6                     	ds	1
   446                           	global	_pow$3821
   447  00A7                     _pow$3821:	; 3 bytes @ 0x7
   448  00A7                     	ds	3
   449                           	global	pow@sign
   450  00AA                     pow@sign:	; 1 bytes @ 0xA
   451  00AA                     	ds	1
   452                           	global	pow@yi
   453  00AB                     pow@yi:	; 4 bytes @ 0xB
   454  00AB                     	ds	4
   455                           	global	?_ftoa
   456  00AF                     ?_ftoa:	; 0 bytes @ 0xF
   457                           	global	ftoa@n
   458  00AF                     ftoa@n:	; 3 bytes @ 0xF
   459  00AF                     	ds	3
   460                           	global	ftoa@res
   461  00B2                     ftoa@res:	; 1 bytes @ 0x12
   462  00B2                     	ds	1
   463                           	global	ftoa@afterpoint
   464  00B3                     ftoa@afterpoint:	; 2 bytes @ 0x13
   465  00B3                     	ds	2
   466                           	global	??_ftoa
   467  00B5                     ??_ftoa:	; 0 bytes @ 0x15
   468  00B5                     	ds	2
   469                           	global	_ftoa$3820
   470  00B7                     _ftoa$3820:	; 3 bytes @ 0x17
   471  00B7                     	ds	3
   472                           	global	ftoa@ipart
   473  00BA                     ftoa@ipart:	; 2 bytes @ 0x1A
   474  00BA                     	ds	2
   475                           	global	ftoa@i
   476  00BC                     ftoa@i:	; 2 bytes @ 0x1C
   477  00BC                     	ds	2
   478                           	global	ftoa@fpart
   479  00BE                     ftoa@fpart:	; 3 bytes @ 0x1E
   480  00BE                     	ds	3
   481                           	global	??_main
   482  00C1                     ??_main:	; 0 bytes @ 0x21
   483  00C1                     	ds	2
   484                           	global	main@summ
   485  00C3                     main@summ:	; 3 bytes @ 0x23
   486  00C3                     	ds	3
   487                           psect	cstackCOMMON,class=COMMON,space=1
   488                           global __pcstackCOMMON
   489  0070                     __pcstackCOMMON:
   490                           	global	?_DelayMs
   491  0070                     ?_DelayMs:	; 0 bytes @ 0x0
   492                           	global	?_lcd_init
   493  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   494                           	global	?_lcd_clear
   495  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   496                           	global	?_init_a2d
   497  0070                     ?_init_a2d:	; 0 bytes @ 0x0
   498                           	global	?_lcd_goto
   499  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   500                           	global	?_main
   501  0070                     ?_main:	; 0 bytes @ 0x0
   502                           	global	?_IntVector
   503  0070                     ?_IntVector:	; 0 bytes @ 0x0
   504                           	global	??_IntVector
   505  0070                     ??_IntVector:	; 0 bytes @ 0x0
   506                           	global	?_lcd_write
   507  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   508  0070                     	ds	4
   509                           	global	??_DelayMs
   510  0074                     ??_DelayMs:	; 0 bytes @ 0x4
   511                           	global	??_init_a2d
   512  0074                     ??_init_a2d:	; 0 bytes @ 0x4
   513                           	global	??_frexp
   514  0074                     ??_frexp:	; 0 bytes @ 0x4
   515                           	global	??_lcd_write
   516  0074                     ??_lcd_write:	; 0 bytes @ 0x4
   517                           	global	?_reverse
   518  0074                     ?_reverse:	; 0 bytes @ 0x4
   519                           	global	??___lwdiv
   520  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   521                           	global	??___lwmod
   522  0074                     ??___lwmod:	; 0 bytes @ 0x4
   523                           	global	??___awtoft
   524  0074                     ??___awtoft:	; 0 bytes @ 0x4
   525                           	global	??___ftneg
   526  0074                     ??___ftneg:	; 0 bytes @ 0x4
   527                           	global	??___altoft
   528  0074                     ??___altoft:	; 0 bytes @ 0x4
   529                           	global	??___lltoft
   530  0074                     ??___lltoft:	; 0 bytes @ 0x4
   531                           	global	?___bmul
   532  0074                     ?___bmul:	; 1 bytes @ 0x4
   533                           	global	___bmul@multiplicand
   534  0074                     ___bmul@multiplicand:	; 1 bytes @ 0x4
   535                           	global	___lbtoft@c
   536  0074                     ___lbtoft@c:	; 1 bytes @ 0x4
   537                           	global	reverse@len
   538  0074                     reverse@len:	; 2 bytes @ 0x4
   539  0074                     	ds	1
   540                           	global	??_lcd_init
   541  0075                     ??_lcd_init:	; 0 bytes @ 0x5
   542                           	global	??_lcd_clear
   543  0075                     ??_lcd_clear:	; 0 bytes @ 0x5
   544                           	global	??_lcd_goto
   545  0075                     ??_lcd_goto:	; 0 bytes @ 0x5
   546                           	global	??_lcd_puts
   547  0075                     ??_lcd_puts:	; 0 bytes @ 0x5
   548                           	global	??___bmul
   549  0075                     ??___bmul:	; 0 bytes @ 0x5
   550                           	global	read_a2d@channel
   551  0075                     read_a2d@channel:	; 1 bytes @ 0x5
   552                           	global	read_a2d2@channel
   553  0075                     read_a2d2@channel:	; 1 bytes @ 0x5
   554                           	global	lcd_goto@pos
   555  0075                     lcd_goto@pos:	; 1 bytes @ 0x5
   556                           	global	___lwmod@counter
   557  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   558                           	global	___lltoft@exp
   559  0075                     ___lltoft@exp:	; 1 bytes @ 0x5
   560  0075                     	ds	1
   561                           	global	??___ftsub
   562  0076                     ??___ftsub:	; 0 bytes @ 0x6
   563                           psect	cstackBANK0,class=BANK0,space=1
   564                           global __pcstackBANK0
   565  0020                     __pcstackBANK0:
   566                           	global	??_reverse
   567  0020                     ??_reverse:	; 0 bytes @ 0x0
   568                           	global	?___ftge
   569  0020                     ?___ftge:	; 1 bit 
   570                           	global	?___lwdiv
   571  0020                     ?___lwdiv:	; 2 bytes @ 0x0
   572                           	global	?___lwmod
   573  0020                     ?___lwmod:	; 2 bytes @ 0x0
   574                           	global	?___ftpack
   575  0020                     ?___ftpack:	; 3 bytes @ 0x0
   576                           	global	?_frexp
   577  0020                     ?_frexp:	; 3 bytes @ 0x0
   578                           	global	?___fttol
   579  0020                     ?___fttol:	; 4 bytes @ 0x0
   580                           	global	DelayMs@cnt
   581  0020                     DelayMs@cnt:	; 1 bytes @ 0x0
   582                           	global	lcd_write@_dcnt
   583  0020                     lcd_write@_dcnt:	; 1 bytes @ 0x0
   584                           	global	___bmul@product
   585  0020                     ___bmul@product:	; 1 bytes @ 0x0
   586                           	global	___lwdiv@divisor
   587  0020                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   588                           	global	___lwmod@divisor
   589  0020                     ___lwmod@divisor:	; 2 bytes @ 0x0
   590                           	global	___fttol@f1
   591  0020                     ___fttol@f1:	; 3 bytes @ 0x0
   592                           	global	___ftge@ff1
   593  0020                     ___ftge@ff1:	; 3 bytes @ 0x0
   594                           	global	frexp@value
   595  0020                     frexp@value:	; 3 bytes @ 0x0
   596                           	global	___ftpack@arg
   597  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   598  0020                     	ds	1
   599                           	global	DelayMs@i
   600  0021                     DelayMs@i:	; 1 bytes @ 0x1
   601                           	global	lcd_write@c
   602  0021                     lcd_write@c:	; 1 bytes @ 0x1
   603                           	global	___bmul@multiplier
   604  0021                     ___bmul@multiplier:	; 1 bytes @ 0x1
   605  0021                     	ds	1
   606                           	global	?_lcd_puts
   607  0022                     ?_lcd_puts:	; 0 bytes @ 0x2
   608                           	global	DelayMs@_dcnt
   609  0022                     DelayMs@_dcnt:	; 1 bytes @ 0x2
   610                           	global	lcd_puts@s
   611  0022                     lcd_puts@s:	; 2 bytes @ 0x2
   612                           	global	___lwdiv@dividend
   613  0022                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   614                           	global	___lwmod@dividend
   615  0022                     ___lwmod@dividend:	; 2 bytes @ 0x2
   616  0022                     	ds	1
   617                           	global	lcd_init@_dcnt
   618  0023                     lcd_init@_dcnt:	; 1 bytes @ 0x3
   619                           	global	frexp@eptr
   620  0023                     frexp@eptr:	; 1 bytes @ 0x3
   621                           	global	___ftpack@exp
   622  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
   623                           	global	reverse@temp
   624  0023                     reverse@temp:	; 2 bytes @ 0x3
   625                           	global	___ftge@ff2
   626  0023                     ___ftge@ff2:	; 3 bytes @ 0x3
   627  0023                     	ds	1
   628                           	global	??___fttol
   629  0024                     ??___fttol:	; 0 bytes @ 0x4
   630                           	global	lcd_init@_dcnt_2131
   631  0024                     lcd_init@_dcnt_2131:	; 1 bytes @ 0x4
   632                           	global	___lwdiv@counter
   633  0024                     ___lwdiv@counter:	; 1 bytes @ 0x4
   634                           	global	___ftpack@sign
   635  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
   636  0024                     	ds	1
   637                           	global	??___ftpack
   638  0025                     ??___ftpack:	; 0 bytes @ 0x5
   639                           	global	reverse@i
   640  0025                     reverse@i:	; 2 bytes @ 0x5
   641                           	global	___lwdiv@quotient
   642  0025                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   643  0025                     	ds	1
   644                           	global	??___ftge
   645  0026                     ??___ftge:	; 0 bytes @ 0x6
   646  0026                     	ds	1
   647                           	global	reverse@j
   648  0027                     reverse@j:	; 2 bytes @ 0x7
   649  0027                     	ds	1
   650                           	global	?___ftdiv
   651  0028                     ?___ftdiv:	; 3 bytes @ 0x8
   652                           	global	?___lbtoft
   653  0028                     ?___lbtoft:	; 3 bytes @ 0x8
   654                           	global	?___ftneg
   655  0028                     ?___ftneg:	; 3 bytes @ 0x8
   656                           	global	?___lltoft
   657  0028                     ?___lltoft:	; 3 bytes @ 0x8
   658                           	global	___fttol@sign1
   659  0028                     ___fttol@sign1:	; 1 bytes @ 0x8
   660                           	global	___ftdiv@f2
   661  0028                     ___ftdiv@f2:	; 3 bytes @ 0x8
   662                           	global	___ftneg@f1
   663  0028                     ___ftneg@f1:	; 3 bytes @ 0x8
   664                           	global	___lltoft@c
   665  0028                     ___lltoft@c:	; 4 bytes @ 0x8
   666  0028                     	ds	1
   667                           	global	reverse@str
   668  0029                     reverse@str:	; 1 bytes @ 0x9
   669                           	global	___fttol@lval
   670  0029                     ___fttol@lval:	; 4 bytes @ 0x9
   671  0029                     	ds	2
   672                           	global	??___lbtoft
   673  002B                     ??___lbtoft:	; 0 bytes @ 0xB
   674                           	global	?___awtoft
   675  002B                     ?___awtoft:	; 3 bytes @ 0xB
   676                           	global	___awtoft@c
   677  002B                     ___awtoft@c:	; 2 bytes @ 0xB
   678                           	global	___ftdiv@f1
   679  002B                     ___ftdiv@f1:	; 3 bytes @ 0xB
   680  002B                     	ds	2
   681                           	global	___fttol@exp1
   682  002D                     ___fttol@exp1:	; 1 bytes @ 0xD
   683  002D                     	ds	1
   684                           	global	??___ftdiv
   685  002E                     ??___ftdiv:	; 0 bytes @ 0xE
   686                           	global	?_intToStr
   687  002E                     ?_intToStr:	; 2 bytes @ 0xE
   688                           	global	?___altoft
   689  002E                     ?___altoft:	; 3 bytes @ 0xE
   690                           	global	___awtoft@sign
   691  002E                     ___awtoft@sign:	; 1 bytes @ 0xE
   692                           	global	intToStr@x
   693  002E                     intToStr@x:	; 2 bytes @ 0xE
   694                           	global	___altoft@c
   695  002E                     ___altoft@c:	; 4 bytes @ 0xE
   696  002E                     	ds	1
   697                           	global	?_read_a2d
   698  002F                     ?_read_a2d:	; 3 bytes @ 0xF
   699                           	global	?_read_a2d2
   700  002F                     ?_read_a2d2:	; 3 bytes @ 0xF
   701                           	global	?___ftmul
   702  002F                     ?___ftmul:	; 3 bytes @ 0xF
   703                           	global	___ftmul@f1
   704  002F                     ___ftmul@f1:	; 3 bytes @ 0xF
   705  002F                     	ds	1
   706                           	global	intToStr@str
   707  0030                     intToStr@str:	; 1 bytes @ 0x10
   708  0030                     	ds	1
   709                           	global	intToStr@d
   710  0031                     intToStr@d:	; 2 bytes @ 0x11
   711  0031                     	ds	1
   712                           	global	??_read_a2d
   713  0032                     ??_read_a2d:	; 0 bytes @ 0x12
   714                           	global	??_read_a2d2
   715  0032                     ??_read_a2d2:	; 0 bytes @ 0x12
   716                           	global	___ftdiv@cntr
   717  0032                     ___ftdiv@cntr:	; 1 bytes @ 0x12
   718                           	global	___altoft@exp
   719  0032                     ___altoft@exp:	; 1 bytes @ 0x12
   720                           	global	___ftmul@f2
   721  0032                     ___ftmul@f2:	; 3 bytes @ 0x12
   722  0032                     	ds	1
   723                           	global	??_intToStr
   724  0033                     ??_intToStr:	; 0 bytes @ 0x13
   725                           	global	___altoft@sign
   726  0033                     ___altoft@sign:	; 1 bytes @ 0x13
   727                           	global	___ftdiv@f3
   728  0033                     ___ftdiv@f3:	; 3 bytes @ 0x13
   729  0033                     	ds	2
   730                           	global	??___ftmul
   731  0035                     ??___ftmul:	; 0 bytes @ 0x15
   732                           	global	intToStr@i
   733  0035                     intToStr@i:	; 2 bytes @ 0x15
   734  0035                     	ds	1
   735                           	global	___ftdiv@exp
   736  0036                     ___ftdiv@exp:	; 1 bytes @ 0x16
   737  0036                     	ds	1
   738                           	global	___ftdiv@sign
   739  0037                     ___ftdiv@sign:	; 1 bytes @ 0x17
   740  0037                     	ds	2
   741                           	global	___ftmul@exp
   742  0039                     ___ftmul@exp:	; 1 bytes @ 0x19
   743  0039                     	ds	1
   744                           	global	___ftmul@f3_as_product
   745  003A                     ___ftmul@f3_as_product:	; 3 bytes @ 0x1A
   746  003A                     	ds	3
   747                           	global	___ftmul@cntr
   748  003D                     ___ftmul@cntr:	; 1 bytes @ 0x1D
   749  003D                     	ds	1
   750                           	global	___ftmul@sign
   751  003E                     ___ftmul@sign:	; 1 bytes @ 0x1E
   752  003E                     	ds	1
   753                           	global	?___ftadd
   754  003F                     ?___ftadd:	; 3 bytes @ 0x1F
   755                           	global	___ftadd@f1
   756  003F                     ___ftadd@f1:	; 3 bytes @ 0x1F
   757  003F                     	ds	3
   758                           	global	___ftadd@f2
   759  0042                     ___ftadd@f2:	; 3 bytes @ 0x22
   760  0042                     	ds	3
   761                           	global	??___ftadd
   762  0045                     ??___ftadd:	; 0 bytes @ 0x25
   763  0045                     	ds	4
   764                           	global	___ftadd@sign
   765  0049                     ___ftadd@sign:	; 1 bytes @ 0x29
   766  0049                     	ds	1
   767                           	global	___ftadd@exp2
   768  004A                     ___ftadd@exp2:	; 1 bytes @ 0x2A
   769  004A                     	ds	1
   770                           	global	___ftadd@exp1
   771  004B                     ___ftadd@exp1:	; 1 bytes @ 0x2B
   772  004B                     	ds	1
   773                           	global	?_floor
   774  004C                     ?_floor:	; 3 bytes @ 0x2C
   775                           	global	?_ldexp
   776  004C                     ?_ldexp:	; 3 bytes @ 0x2C
   777                           	global	?___ftsub
   778  004C                     ?___ftsub:	; 3 bytes @ 0x2C
   779                           	global	___ftsub@f2
   780  004C                     ___ftsub@f2:	; 3 bytes @ 0x2C
   781                           	global	floor@x
   782  004C                     floor@x:	; 3 bytes @ 0x2C
   783                           	global	ldexp@value
   784  004C                     ldexp@value:	; 3 bytes @ 0x2C
   785  004C                     	ds	3
   786                           	global	??_floor
   787  004F                     ??_floor:	; 0 bytes @ 0x2F
   788                           	global	ldexp@newexp
   789  004F                     ldexp@newexp:	; 2 bytes @ 0x2F
   790                           	global	___ftsub@f1
   791  004F                     ___ftsub@f1:	; 3 bytes @ 0x2F
   792  004F                     	ds	1
   793                           	global	floor@i
   794  0050                     floor@i:	; 3 bytes @ 0x30
   795  0050                     	ds	1
   796                           	global	??_ldexp
   797  0051                     ??_ldexp:	; 0 bytes @ 0x31
   798  0051                     	ds	2
   799                           	global	floor@expon
   800  0053                     floor@expon:	; 2 bytes @ 0x33
   801                           	global	_ldexp$3590
   802  0053                     _ldexp$3590:	; 3 bytes @ 0x33
   803  0053                     	ds	3
   804                           	global	?_eval_poly
   805  0056                     ?_eval_poly:	; 3 bytes @ 0x36
   806                           	global	eval_poly@x
   807  0056                     eval_poly@x:	; 3 bytes @ 0x36
   808  0056                     	ds	3
   809                           	global	eval_poly@d
   810  0059                     eval_poly@d:	; 1 bytes @ 0x39
   811  0059                     	ds	1
   812                           	global	eval_poly@n
   813  005A                     eval_poly@n:	; 2 bytes @ 0x3A
   814  005A                     	ds	2
   815                           	global	??_eval_poly
   816  005C                     ??_eval_poly:	; 0 bytes @ 0x3C
   817  005C                     	ds	1
   818                           	global	eval_poly@res
   819  005D                     eval_poly@res:	; 3 bytes @ 0x3D
   820  005D                     	ds	3
   821                           	global	?_log
   822  0060                     ?_log:	; 3 bytes @ 0x40
   823                           	global	log@x
   824  0060                     log@x:	; 3 bytes @ 0x40
   825  0060                     	ds	3
   826                           	global	??_log
   827  0063                     ??_log:	; 0 bytes @ 0x43
   828  0063                     	ds	1
   829                           	global	log@exp
   830  0064                     log@exp:	; 2 bytes @ 0x44
   831  0064                     	ds	2
   832                           	global	?_exp
   833  0066                     ?_exp:	; 3 bytes @ 0x46
   834                           	global	exp@x
   835  0066                     exp@x:	; 3 bytes @ 0x46
   836  0066                     	ds	3
   837                           	global	??_exp
   838  0069                     ??_exp:	; 0 bytes @ 0x49
   839  0069                     	ds	1
   840                           	global	_exp$3544
   841  006A                     _exp$3544:	; 3 bytes @ 0x4A
   842  006A                     	ds	3
   843                           	global	exp@exp
   844  006D                     exp@exp:	; 2 bytes @ 0x4D
   845  006D                     	ds	2
   846                           	global	exp@sign
   847  006F                     exp@sign:	; 1 bytes @ 0x4F
   848  006F                     	ds	1
   849 ;;Data sizes: Strings 27, constant 57, data 0, bss 34, persistent 0 stack 0
   850 ;;Auto spaces:   Size  Autos    Used
   851 ;; COMMON          14      6      10
   852 ;; BANK0           80     80      80
   853 ;; BANK1           80     38      68
   854 ;; BANK3           96      0       0
   855 ;; BANK2           96      0       0
   856                           
   857 ;;
   858 ;; Pointer list with targets:
   859                           
   860 ;; ?_frexp	 size(1) Largest target is 0
   861 ;;
   862 ;; ?_ldexp	 size(1) Largest target is 0
   863 ;;
   864 ;; ?_eval_poly	 size(1) Largest target is 0
   865 ;;
   866 ;; ?_floor	 size(1) Largest target is 0
   867 ;;
   868 ;; ?___altoft	float  size(1) Largest target is 0
   869 ;;
   870 ;; ?___lbtoft	float  size(1) Largest target is 0
   871 ;;
   872 ;; ?___ftsub	float  size(1) Largest target is 0
   873 ;;
   874 ;; ?___ftpack	float  size(1) Largest target is 0
   875 ;;
   876 ;; ?_exp	float  size(1) Largest target is 0
   877 ;;
   878 ;; ?_log	float  size(1) Largest target is 0
   879 ;;
   880 ;; ?___lltoft	float  size(1) Largest target is 0
   881 ;;
   882 ;; ?___ftmul	float  size(1) Largest target is 0
   883 ;;
   884 ;; ?_pow	float  size(1) Largest target is 0
   885 ;;
   886 ;; ?___ftneg	float  size(1) Largest target is 0
   887 ;;
   888 ;; ?___awtoft	float  size(1) Largest target is 0
   889 ;;
   890 ;; ?___fttol	long  size(1) Largest target is 0
   891 ;;
   892 ;; ?_intToStr	unsigned int  size(1) Largest target is 0
   893 ;;
   894 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   895 ;;
   896 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   897 ;;
   898 ;; ?_read_a2d2	float  size(1) Largest target is 0
   899 ;;
   900 ;; ?_read_a2d	float  size(1) Largest target is 0
   901 ;;
   902 ;; ?___ftadd	float  size(1) Largest target is 0
   903 ;;
   904 ;; ?___ftdiv	float  size(1) Largest target is 0
   905 ;;
   906 ;; eval_poly@d	PTR const  size(1) Largest target is 30
   907 ;;		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 
   908 ;;
   909 ;; frexp@eptr	PTR int  size(1) Largest target is 2
   910 ;;		 -> log@exp(BANK0[2]), floor@expon(BANK0[2]), 
   911 ;;
   912 ;; ftoa@res	PTR unsigned char  size(1) Largest target is 10
   913 ;;		 -> str(BANK1[10]), 
   914 ;;
   915 ;; intToStr@str	PTR unsigned char  size(1) Largest target is 10
   916 ;;		 -> str(BANK1[10]), 
   917 ;;
   918 ;; reverse@str	PTR unsigned char  size(1) Largest target is 10
   919 ;;		 -> str(BANK1[10]), 
   920 ;;
   921 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 15
   922 ;;		 -> STR_2(CODE[12]), STR_1(CODE[15]), str(BANK1[10]), 
   923 ;;
   924                           
   925                           
   926 ;;
   927 ;; Critical Paths under _main in COMMON
   928 ;;
   929 ;;   _main->_lcd_init
   930 ;;   _main->_lcd_goto
   931 ;;   _main->_read_a2d
   932 ;;   _main->_read_a2d2
   933 ;;   _ftoa->___awtoft
   934 ;;   _pow->___lltoft
   935 ;;   _exp->___awtoft
   936 ;;   _log->_frexp
   937 ;;   _log->___awtoft
   938 ;;   _eval_poly->___bmul
   939 ;;   _floor->_frexp
   940 ;;   _floor->___altoft
   941 ;;   ___ftsub->___awtoft
   942 ;;   _read_a2d2->_DelayMs
   943 ;;   _read_a2d2->___lbtoft
   944 ;;   _read_a2d->_DelayMs
   945 ;;   _read_a2d->___lbtoft
   946 ;;   _ldexp->___bmul
   947 ;;   ___ftmul->___awtoft
   948 ;;   ___ftmul->_frexp
   949 ;;   ___ftadd->___awtoft
   950 ;;   ___ftadd->_frexp
   951 ;;   ___ftadd->___bmul
   952 ;;   _intToStr->___lwmod
   953 ;;   _intToStr->_reverse
   954 ;;   _lcd_puts->_lcd_write
   955 ;;   _lcd_goto->_lcd_write
   956 ;;   _lcd_clear->_lcd_write
   957 ;;   _lcd_clear->_DelayMs
   958 ;;   _lcd_init->_DelayMs
   959 ;;   _lcd_init->_lcd_write
   960 ;;
   961 ;; Critical Paths under _IntVector in COMMON
   962 ;;
   963 ;;   None.
   964 ;;
   965 ;; Critical Paths under _main in BANK0
   966 ;;
   967 ;;   _pow->_exp
   968 ;;   _exp->_log
   969 ;;   _log->_eval_poly
   970 ;;   _eval_poly->_ldexp
   971 ;;   _floor->___ftadd
   972 ;;   ___ftsub->___ftadd
   973 ;;   _read_a2d2->___lbtoft
   974 ;;   _read_a2d->___lbtoft
   975 ;;   _ldexp->___ftadd
   976 ;;   ___lltoft->___ftpack
   977 ;;   ___altoft->___fttol
   978 ;;   ___awtoft->___ftneg
   979 ;;   ___lbtoft->___ftpack
   980 ;;   ___ftmul->___awtoft
   981 ;;   ___ftdiv->___ftpack
   982 ;;   ___ftadd->___ftmul
   983 ;;   _intToStr->___fttol
   984 ;;   _lcd_puts->_lcd_write
   985 ;;   _lcd_goto->_lcd_write
   986 ;;   _lcd_clear->_DelayMs
   987 ;;   _lcd_init->_DelayMs
   988 ;;   ___ftneg->___ftpack
   989 ;;
   990 ;; Critical Paths under _IntVector in BANK0
   991 ;;
   992 ;;   None.
   993 ;;
   994 ;; Critical Paths under _main in BANK1
   995 ;;
   996 ;;   _main->_ftoa
   997 ;;   _ftoa->_pow
   998 ;;
   999 ;; Critical Paths under _IntVector in BANK1
  1000 ;;
  1001 ;;   None.
  1002 ;;
  1003 ;; Critical Paths under _main in BANK3
  1004 ;;
  1005 ;;   None.
  1006 ;;
  1007 ;; Critical Paths under _IntVector in BANK3
  1008 ;;
  1009 ;;   None.
  1010 ;;
  1011 ;; Critical Paths under _main in BANK2
  1012 ;;
  1013 ;;   None.
  1014 ;;
  1015 ;; Critical Paths under _IntVector in BANK2
  1016 ;;
  1017 ;;   None.
  1018                           
  1019 ;;
  1020 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1021 ;;
  1022                           
  1023 ;;
  1024 ;;Call Graph Tables:
  1025 ;;
  1026 ;; ---------------------------------------------------------------------------------
  1027 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (0) _main                                                 5     5      0   29325
  1030 ;;                                             33 BANK1      5     5      0
  1031 ;;                            _DelayMs
  1032 ;;                           _lcd_init
  1033 ;;                          _lcd_clear
  1034 ;;                           _init_a2d
  1035 ;;                           _lcd_goto
  1036 ;;                           _read_a2d
  1037 ;;                            ___ftdiv
  1038 ;;                          _read_a2d2
  1039 ;;                            ___ftadd
  1040 ;;                               _ftoa
  1041 ;;                           _lcd_puts
  1042 ;;                             ___ftge
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (1) _ftoa                                                18    12      6   24996
  1045 ;;                                             15 BANK1     18    12      6
  1046 ;;                            ___fttol
  1047 ;;                           ___awtoft
  1048 ;;                            ___ftneg
  1049 ;;                            ___ftadd
  1050 ;;                           _intToStr
  1051 ;;                                _pow
  1052 ;;                            ___ftmul
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (2) _pow                                                 15     9      6   20012
  1055 ;;                                              0 BANK1     15     9      6
  1056 ;;                             ___ftge
  1057 ;;                            ___fttol
  1058 ;;                           ___lltoft
  1059 ;;                            ___ftneg
  1060 ;;                                _log
  1061 ;;                            ___ftmul
  1062 ;;                                _exp
  1063 ;; ---------------------------------------------------------------------------------
  1064 ;; (3) _exp                                                 10     7      3   11422
  1065 ;;                                             70 BANK0     10     7      3
  1066 ;;                             ___ftge
  1067 ;;                            ___ftneg
  1068 ;;                            ___ftmul
  1069 ;;                              _floor
  1070 ;;                            ___fttol
  1071 ;;                           ___awtoft
  1072 ;;                            ___ftsub
  1073 ;;                          _eval_poly
  1074 ;;                              _ldexp
  1075 ;;                            ___ftdiv
  1076 ;;                                _log (ARG)
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (3) _log                                                  6     3      3    6279
  1079 ;;                                             64 BANK0      6     3      3
  1080 ;;                             ___ftge
  1081 ;;                              _frexp
  1082 ;;                            ___ftmul
  1083 ;;                            ___ftadd
  1084 ;;                          _eval_poly
  1085 ;;                           ___awtoft
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (4) _eval_poly                                           10     4      6    2727
  1088 ;;                                             54 BANK0     10     4      6
  1089 ;;                             ___bmul
  1090 ;;                            ___ftmul
  1091 ;;                            ___ftadd
  1092 ;;                              _ldexp (ARG)
  1093 ;; ---------------------------------------------------------------------------------
  1094 ;; (4) _floor                                                9     6      3    3312
  1095 ;;                                             44 BANK0      9     6      3
  1096 ;;                              _frexp
  1097 ;;                             ___ftge
  1098 ;;                            ___fttol
  1099 ;;                           ___altoft
  1100 ;;                            ___ftadd
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; (4) ___ftsub                                              6     0      6    1602
  1103 ;;                                             44 BANK0      6     0      6
  1104 ;;                            ___ftadd
  1105 ;;                           ___awtoft (ARG)
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (1) _read_a2d2                                            6     3      3     476
  1108 ;;                                              5 COMMON     1     1      0
  1109 ;;                                             15 BANK0      5     2      3
  1110 ;;                            _DelayMs
  1111 ;;                           ___lbtoft
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (1) _read_a2d                                             6     3      3     476
  1114 ;;                                              5 COMMON     1     1      0
  1115 ;;                                             15 BANK0      5     2      3
  1116 ;;                            _DelayMs
  1117 ;;                           ___lbtoft
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (4) _ldexp                                               10     5      5     639
  1120 ;;                                             44 BANK0     10     5      5
  1121 ;;                             ___ftge
  1122 ;;                            ___ftneg
  1123 ;;                             ___bmul (ARG)
  1124 ;;                            ___ftmul (ARG)
  1125 ;;                            ___ftadd (ARG)
  1126 ;; ---------------------------------------------------------------------------------
  1127 ;; (3) ___lltoft                                             6     2      4     414
  1128 ;;                                              4 COMMON     2     2      0
  1129 ;;                                              8 BANK0      4     0      4
  1130 ;;                           ___ftpack
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (5) ___altoft                                             8     4      4     516
  1133 ;;                                              4 COMMON     2     2      0
  1134 ;;                                             14 BANK0      6     2      4
  1135 ;;                           ___ftpack
  1136 ;;                            ___fttol (ARG)
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (4) ___awtoft                                             6     3      3     445
  1139 ;;                                              4 COMMON     2     2      0
  1140 ;;                                             11 BANK0      4     1      3
  1141 ;;                           ___ftpack
  1142 ;;                            ___ftneg (ARG)
  1143 ;; ---------------------------------------------------------------------------------
  1144 ;; (2) ___lbtoft                                             8     5      3     343
  1145 ;;                                              4 COMMON     1     1      0
  1146 ;;                                              8 BANK0      7     4      3
  1147 ;;                           ___ftpack
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (2) ___ftmul                                             16    10      6     800
  1150 ;;                                             15 BANK0     16    10      6
  1151 ;;                           ___ftpack
  1152 ;;                           ___awtoft (ARG)
  1153 ;;                              _frexp (ARG)
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (4) ___ftdiv                                             16    10      6     732
  1156 ;;                                              8 BANK0     16    10      6
  1157 ;;                           ___ftpack
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (5) ___ftadd                                             13     7      6    1537
  1160 ;;                                             31 BANK0     13     7      6
  1161 ;;                           ___ftpack
  1162 ;;                            ___ftneg (ARG)
  1163 ;;                           ___awtoft (ARG)
  1164 ;;                            ___ftmul (ARG)
  1165 ;;                              _frexp (ARG)
  1166 ;;                             ___bmul (ARG)
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (2) _intToStr                                             9     4      5    1306
  1169 ;;                                             14 BANK0      9     4      5
  1170 ;;                            ___lwmod
  1171 ;;                            ___lwdiv
  1172 ;;                            _reverse
  1173 ;;                            ___fttol (ARG)
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; (1) _lcd_puts                                             2     0      2     161
  1176 ;;                                              2 BANK0      2     0      2
  1177 ;;                          _lcd_write
  1178 ;; ---------------------------------------------------------------------------------
  1179 ;; (1) _lcd_goto                                             1     1      0     127
  1180 ;;                                              5 COMMON     1     1      0
  1181 ;;                          _lcd_write
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (1) _lcd_clear                                            0     0      0     195
  1184 ;;                          _lcd_write
  1185 ;;                            _DelayMs
  1186 ;; ---------------------------------------------------------------------------------
  1187 ;; (1) _lcd_init                                             3     3      0     263
  1188 ;;                                              5 COMMON     1     1      0
  1189 ;;                                              3 BANK0      2     2      0
  1190 ;;                            _DelayMs
  1191 ;;                          _lcd_write
  1192 ;; ---------------------------------------------------------------------------------
  1193 ;; (5) _frexp                                                6     2      4     322
  1194 ;;                                              4 COMMON     2     2      0
  1195 ;;                                              0 BANK0      4     0      4
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; (1) ___ftge                                              12     6      6     198
  1198 ;;                                              0 BANK0     12     6      6
  1199 ;; ---------------------------------------------------------------------------------
  1200 ;; (5) ___ftneg                                              3     0      3      45
  1201 ;;                                              8 BANK0      3     0      3
  1202 ;;                           ___ftpack (ARG)
  1203 ;; ---------------------------------------------------------------------------------
  1204 ;; (4) ___fttol                                             14    10      4     371
  1205 ;;                                              0 BANK0     14    10      4
  1206 ;; ---------------------------------------------------------------------------------
  1207 ;; (3) ___ftpack                                             8     3      5     312
  1208 ;;                                              0 BANK0      8     3      5
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; (3) ___lwmod                                              6     2      4     232
  1211 ;;                                              4 COMMON     2     2      0
  1212 ;;                                              0 BANK0      4     0      4
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (3) ___lwdiv                                              8     4      4     241
  1215 ;;                                              4 COMMON     1     1      0
  1216 ;;                                              0 BANK0      7     3      4
  1217 ;; ---------------------------------------------------------------------------------
  1218 ;; (5) ___bmul                                               4     3      1     136
  1219 ;;                                              4 COMMON     2     1      1
  1220 ;;                                              0 BANK0      2     2      0
  1221 ;; ---------------------------------------------------------------------------------
  1222 ;; (3) _reverse                                             12    10      2     387
  1223 ;;                                              4 COMMON     2     0      2
  1224 ;;                                              0 BANK0     10    10      0
  1225 ;; ---------------------------------------------------------------------------------
  1226 ;; (2) _lcd_write                                            3     3      0      96
  1227 ;;                                              4 COMMON     1     1      0
  1228 ;;                                              0 BANK0      2     2      0
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (1) _init_a2d                                             0     0      0       0
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (2) _DelayMs                                              4     4      0      99
  1233 ;;                                              4 COMMON     1     1      0
  1234 ;;                                              0 BANK0      3     3      0
  1235 ;; ---------------------------------------------------------------------------------
  1236 ;; Estimated maximum stack depth 5
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1239 ;; ---------------------------------------------------------------------------------
  1240 ;; (7) _IntVector                                            4     4      0       0
  1241 ;;                                              0 COMMON     4     4      0
  1242 ;; ---------------------------------------------------------------------------------
  1243 ;; Estimated maximum stack depth 7
  1244 ;; ---------------------------------------------------------------------------------
  1245                           
  1246 ;; Call Graph Graphs:
  1247                           
  1248 ;; _main (ROOT)
  1249 ;;   _DelayMs
  1250 ;;   _lcd_init
  1251 ;;     _DelayMs
  1252 ;;     _lcd_write
  1253 ;;   _lcd_clear
  1254 ;;     _lcd_write
  1255 ;;     _DelayMs
  1256 ;;   _init_a2d
  1257 ;;   _lcd_goto
  1258 ;;     _lcd_write
  1259 ;;   _read_a2d
  1260 ;;     _DelayMs
  1261 ;;     ___lbtoft
  1262 ;;       ___ftpack
  1263 ;;   ___ftdiv
  1264 ;;     ___ftpack
  1265 ;;   _read_a2d2
  1266 ;;     _DelayMs
  1267 ;;     ___lbtoft
  1268 ;;       ___ftpack
  1269 ;;   ___ftadd
  1270 ;;     ___ftpack
  1271 ;;     ___ftneg (ARG)
  1272 ;;       ___ftpack (ARG)
  1273 ;;     ___awtoft (ARG)
  1274 ;;       ___ftpack
  1275 ;;       ___ftneg (ARG)
  1276 ;;         ___ftpack (ARG)
  1277 ;;     ___ftmul (ARG)
  1278 ;;       ___ftpack
  1279 ;;       ___awtoft (ARG)
  1280 ;;         ___ftpack
  1281 ;;         ___ftneg (ARG)
  1282 ;;           ___ftpack (ARG)
  1283 ;;       _frexp (ARG)
  1284 ;;     _frexp (ARG)
  1285 ;;     ___bmul (ARG)
  1286 ;;   _ftoa
  1287 ;;     ___fttol
  1288 ;;     ___awtoft
  1289 ;;       ___ftpack
  1290 ;;       ___ftneg (ARG)
  1291 ;;         ___ftpack (ARG)
  1292 ;;     ___ftneg
  1293 ;;       ___ftpack (ARG)
  1294 ;;     ___ftadd
  1295 ;;       ___ftpack
  1296 ;;       ___ftneg (ARG)
  1297 ;;         ___ftpack (ARG)
  1298 ;;       ___awtoft (ARG)
  1299 ;;         ___ftpack
  1300 ;;         ___ftneg (ARG)
  1301 ;;           ___ftpack (ARG)
  1302 ;;       ___ftmul (ARG)
  1303 ;;         ___ftpack
  1304 ;;         ___awtoft (ARG)
  1305 ;;           ___ftpack
  1306 ;;           ___ftneg (ARG)
  1307 ;;             ___ftpack (ARG)
  1308 ;;         _frexp (ARG)
  1309 ;;       _frexp (ARG)
  1310 ;;       ___bmul (ARG)
  1311 ;;     _intToStr
  1312 ;;       ___lwmod
  1313 ;;       ___lwdiv
  1314 ;;       _reverse
  1315 ;;       ___fttol (ARG)
  1316 ;;     _pow
  1317 ;;       ___ftge
  1318 ;;       ___fttol
  1319 ;;       ___lltoft
  1320 ;;         ___ftpack
  1321 ;;       ___ftneg
  1322 ;;         ___ftpack (ARG)
  1323 ;;       _log
  1324 ;;         ___ftge
  1325 ;;         _frexp
  1326 ;;         ___ftmul
  1327 ;;           ___ftpack
  1328 ;;           ___awtoft (ARG)
  1329 ;;             ___ftpack
  1330 ;;             ___ftneg (ARG)
  1331 ;;               ___ftpack (ARG)
  1332 ;;           _frexp (ARG)
  1333 ;;         ___ftadd
  1334 ;;           ___ftpack
  1335 ;;           ___ftneg (ARG)
  1336 ;;             ___ftpack (ARG)
  1337 ;;           ___awtoft (ARG)
  1338 ;;             ___ftpack
  1339 ;;             ___ftneg (ARG)
  1340 ;;               ___ftpack (ARG)
  1341 ;;           ___ftmul (ARG)
  1342 ;;             ___ftpack
  1343 ;;             ___awtoft (ARG)
  1344 ;;               ___ftpack
  1345 ;;               ___ftneg (ARG)
  1346 ;;                 ___ftpack (ARG)
  1347 ;;             _frexp (ARG)
  1348 ;;           _frexp (ARG)
  1349 ;;           ___bmul (ARG)
  1350 ;;         _eval_poly
  1351 ;;           ___bmul
  1352 ;;           ___ftmul
  1353 ;;             ___ftpack
  1354 ;;             ___awtoft (ARG)
  1355 ;;               ___ftpack
  1356 ;;               ___ftneg (ARG)
  1357 ;;                 ___ftpack (ARG)
  1358 ;;             _frexp (ARG)
  1359 ;;           ___ftadd
  1360 ;;             ___ftpack
  1361 ;;             ___ftneg (ARG)
  1362 ;;               ___ftpack (ARG)
  1363 ;;             ___awtoft (ARG)
  1364 ;;               ___ftpack
  1365 ;;               ___ftneg (ARG)
  1366 ;;                 ___ftpack (ARG)
  1367 ;;             ___ftmul (ARG)
  1368 ;;               ___ftpack
  1369 ;;               ___awtoft (ARG)
  1370 ;;                 ___ftpack
  1371 ;;                 ___ftneg (ARG)
  1372 ;;                   ___ftpack (ARG)
  1373 ;;               _frexp (ARG)
  1374 ;;             _frexp (ARG)
  1375 ;;             ___bmul (ARG)
  1376 ;;           _ldexp (ARG)
  1377 ;;             ___ftge
  1378 ;;             ___ftneg
  1379 ;;               ___ftpack (ARG)
  1380 ;;             ___bmul (ARG)
  1381 ;;             ___ftmul (ARG)
  1382 ;;               ___ftpack
  1383 ;;               ___awtoft (ARG)
  1384 ;;                 ___ftpack
  1385 ;;                 ___ftneg (ARG)
  1386 ;;                   ___ftpack (ARG)
  1387 ;;               _frexp (ARG)
  1388 ;;             ___ftadd (ARG)
  1389 ;;               ___ftpack
  1390 ;;               ___ftneg (ARG)
  1391 ;;                 ___ftpack (ARG)
  1392 ;;               ___awtoft (ARG)
  1393 ;;                 ___ftpack
  1394 ;;                 ___ftneg (ARG)
  1395 ;;                   ___ftpack (ARG)
  1396 ;;               ___ftmul (ARG)
  1397 ;;                 ___ftpack
  1398 ;;                 ___awtoft (ARG)
  1399 ;;                   ___ftpack
  1400 ;;                   ___ftneg (ARG)
  1401 ;;                     ___ftpack (ARG)
  1402 ;;                 _frexp (ARG)
  1403 ;;               _frexp (ARG)
  1404 ;;               ___bmul (ARG)
  1405 ;;         ___awtoft
  1406 ;;           ___ftpack
  1407 ;;           ___ftneg (ARG)
  1408 ;;             ___ftpack (ARG)
  1409 ;;       ___ftmul
  1410 ;;         ___ftpack
  1411 ;;         ___awtoft (ARG)
  1412 ;;           ___ftpack
  1413 ;;           ___ftneg (ARG)
  1414 ;;             ___ftpack (ARG)
  1415 ;;         _frexp (ARG)
  1416 ;;       _exp
  1417 ;;         ___ftge
  1418 ;;         ___ftneg
  1419 ;;           ___ftpack (ARG)
  1420 ;;         ___ftmul
  1421 ;;           ___ftpack
  1422 ;;           ___awtoft (ARG)
  1423 ;;             ___ftpack
  1424 ;;             ___ftneg (ARG)
  1425 ;;               ___ftpack (ARG)
  1426 ;;           _frexp (ARG)
  1427 ;;         _floor
  1428 ;;           _frexp
  1429 ;;           ___ftge
  1430 ;;           ___fttol
  1431 ;;           ___altoft
  1432 ;;             ___ftpack
  1433 ;;             ___fttol (ARG)
  1434 ;;           ___ftadd
  1435 ;;             ___ftpack
  1436 ;;             ___ftneg (ARG)
  1437 ;;               ___ftpack (ARG)
  1438 ;;             ___awtoft (ARG)
  1439 ;;               ___ftpack
  1440 ;;               ___ftneg (ARG)
  1441 ;;                 ___ftpack (ARG)
  1442 ;;             ___ftmul (ARG)
  1443 ;;               ___ftpack
  1444 ;;               ___awtoft (ARG)
  1445 ;;                 ___ftpack
  1446 ;;                 ___ftneg (ARG)
  1447 ;;                   ___ftpack (ARG)
  1448 ;;               _frexp (ARG)
  1449 ;;             _frexp (ARG)
  1450 ;;             ___bmul (ARG)
  1451 ;;         ___fttol
  1452 ;;         ___awtoft
  1453 ;;           ___ftpack
  1454 ;;           ___ftneg (ARG)
  1455 ;;             ___ftpack (ARG)
  1456 ;;         ___ftsub
  1457 ;;           ___ftadd
  1458 ;;             ___ftpack
  1459 ;;             ___ftneg (ARG)
  1460 ;;               ___ftpack (ARG)
  1461 ;;             ___awtoft (ARG)
  1462 ;;               ___ftpack
  1463 ;;               ___ftneg (ARG)
  1464 ;;                 ___ftpack (ARG)
  1465 ;;             ___ftmul (ARG)
  1466 ;;               ___ftpack
  1467 ;;               ___awtoft (ARG)
  1468 ;;                 ___ftpack
  1469 ;;                 ___ftneg (ARG)
  1470 ;;                   ___ftpack (ARG)
  1471 ;;               _frexp (ARG)
  1472 ;;             _frexp (ARG)
  1473 ;;             ___bmul (ARG)
  1474 ;;           ___awtoft (ARG)
  1475 ;;             ___ftpack
  1476 ;;             ___ftneg (ARG)
  1477 ;;               ___ftpack (ARG)
  1478 ;;         _eval_poly
  1479 ;;           ___bmul
  1480 ;;           ___ftmul
  1481 ;;             ___ftpack
  1482 ;;             ___awtoft (ARG)
  1483 ;;               ___ftpack
  1484 ;;               ___ftneg (ARG)
  1485 ;;                 ___ftpack (ARG)
  1486 ;;             _frexp (ARG)
  1487 ;;           ___ftadd
  1488 ;;             ___ftpack
  1489 ;;             ___ftneg (ARG)
  1490 ;;               ___ftpack (ARG)
  1491 ;;             ___awtoft (ARG)
  1492 ;;               ___ftpack
  1493 ;;               ___ftneg (ARG)
  1494 ;;                 ___ftpack (ARG)
  1495 ;;             ___ftmul (ARG)
  1496 ;;               ___ftpack
  1497 ;;               ___awtoft (ARG)
  1498 ;;                 ___ftpack
  1499 ;;                 ___ftneg (ARG)
  1500 ;;                   ___ftpack (ARG)
  1501 ;;               _frexp (ARG)
  1502 ;;             _frexp (ARG)
  1503 ;;             ___bmul (ARG)
  1504 ;;           _ldexp (ARG)
  1505 ;;             ___ftge
  1506 ;;             ___ftneg
  1507 ;;               ___ftpack (ARG)
  1508 ;;             ___bmul (ARG)
  1509 ;;             ___ftmul (ARG)
  1510 ;;               ___ftpack
  1511 ;;               ___awtoft (ARG)
  1512 ;;                 ___ftpack
  1513 ;;                 ___ftneg (ARG)
  1514 ;;                   ___ftpack (ARG)
  1515 ;;               _frexp (ARG)
  1516 ;;             ___ftadd (ARG)
  1517 ;;               ___ftpack
  1518 ;;               ___ftneg (ARG)
  1519 ;;                 ___ftpack (ARG)
  1520 ;;               ___awtoft (ARG)
  1521 ;;                 ___ftpack
  1522 ;;                 ___ftneg (ARG)
  1523 ;;                   ___ftpack (ARG)
  1524 ;;               ___ftmul (ARG)
  1525 ;;                 ___ftpack
  1526 ;;                 ___awtoft (ARG)
  1527 ;;                   ___ftpack
  1528 ;;                   ___ftneg (ARG)
  1529 ;;                     ___ftpack (ARG)
  1530 ;;                 _frexp (ARG)
  1531 ;;               _frexp (ARG)
  1532 ;;               ___bmul (ARG)
  1533 ;;         _ldexp
  1534 ;;           ___ftge
  1535 ;;           ___ftneg
  1536 ;;             ___ftpack (ARG)
  1537 ;;           ___bmul (ARG)
  1538 ;;           ___ftmul (ARG)
  1539 ;;             ___ftpack
  1540 ;;             ___awtoft (ARG)
  1541 ;;               ___ftpack
  1542 ;;               ___ftneg (ARG)
  1543 ;;                 ___ftpack (ARG)
  1544 ;;             _frexp (ARG)
  1545 ;;           ___ftadd (ARG)
  1546 ;;             ___ftpack
  1547 ;;             ___ftneg (ARG)
  1548 ;;               ___ftpack (ARG)
  1549 ;;             ___awtoft (ARG)
  1550 ;;               ___ftpack
  1551 ;;               ___ftneg (ARG)
  1552 ;;                 ___ftpack (ARG)
  1553 ;;             ___ftmul (ARG)
  1554 ;;               ___ftpack
  1555 ;;               ___awtoft (ARG)
  1556 ;;                 ___ftpack
  1557 ;;                 ___ftneg (ARG)
  1558 ;;                   ___ftpack (ARG)
  1559 ;;               _frexp (ARG)
  1560 ;;             _frexp (ARG)
  1561 ;;             ___bmul (ARG)
  1562 ;;         ___ftdiv
  1563 ;;           ___ftpack
  1564 ;;         _log (ARG)
  1565 ;;           ___ftge
  1566 ;;           _frexp
  1567 ;;           ___ftmul
  1568 ;;             ___ftpack
  1569 ;;             ___awtoft (ARG)
  1570 ;;               ___ftpack
  1571 ;;               ___ftneg (ARG)
  1572 ;;                 ___ftpack (ARG)
  1573 ;;             _frexp (ARG)
  1574 ;;           ___ftadd
  1575 ;;             ___ftpack
  1576 ;;             ___ftneg (ARG)
  1577 ;;               ___ftpack (ARG)
  1578 ;;             ___awtoft (ARG)
  1579 ;;               ___ftpack
  1580 ;;               ___ftneg (ARG)
  1581 ;;                 ___ftpack (ARG)
  1582 ;;             ___ftmul (ARG)
  1583 ;;               ___ftpack
  1584 ;;               ___awtoft (ARG)
  1585 ;;                 ___ftpack
  1586 ;;                 ___ftneg (ARG)
  1587 ;;                   ___ftpack (ARG)
  1588 ;;               _frexp (ARG)
  1589 ;;             _frexp (ARG)
  1590 ;;             ___bmul (ARG)
  1591 ;;           _eval_poly
  1592 ;;             ___bmul
  1593 ;;             ___ftmul
  1594 ;;               ___ftpack
  1595 ;;               ___awtoft (ARG)
  1596 ;;                 ___ftpack
  1597 ;;                 ___ftneg (ARG)
  1598 ;;                   ___ftpack (ARG)
  1599 ;;               _frexp (ARG)
  1600 ;;             ___ftadd
  1601 ;;               ___ftpack
  1602 ;;               ___ftneg (ARG)
  1603 ;;                 ___ftpack (ARG)
  1604 ;;               ___awtoft (ARG)
  1605 ;;                 ___ftpack
  1606 ;;                 ___ftneg (ARG)
  1607 ;;                   ___ftpack (ARG)
  1608 ;;               ___ftmul (ARG)
  1609 ;;                 ___ftpack
  1610 ;;                 ___awtoft (ARG)
  1611 ;;                   ___ftpack
  1612 ;;                   ___ftneg (ARG)
  1613 ;;                     ___ftpack (ARG)
  1614 ;;                 _frexp (ARG)
  1615 ;;               _frexp (ARG)
  1616 ;;               ___bmul (ARG)
  1617 ;;             _ldexp (ARG)
  1618 ;;               ___ftge
  1619 ;;               ___ftneg
  1620 ;;                 ___ftpack (ARG)
  1621 ;;               ___bmul (ARG)
  1622 ;;               ___ftmul (ARG)
  1623 ;;                 ___ftpack
  1624 ;;                 ___awtoft (ARG)
  1625 ;;                   ___ftpack
  1626 ;;                   ___ftneg (ARG)
  1627 ;;                     ___ftpack (ARG)
  1628 ;;                 _frexp (ARG)
  1629 ;;               ___ftadd (ARG)
  1630 ;;                 ___ftpack
  1631 ;;                 ___ftneg (ARG)
  1632 ;;                   ___ftpack (ARG)
  1633 ;;                 ___awtoft (ARG)
  1634 ;;                   ___ftpack
  1635 ;;                   ___ftneg (ARG)
  1636 ;;                     ___ftpack (ARG)
  1637 ;;                 ___ftmul (ARG)
  1638 ;;                   ___ftpack
  1639 ;;                   ___awtoft (ARG)
  1640 ;;                     ___ftpack
  1641 ;;                     ___ftneg (ARG)
  1642 ;;                       ___ftpack (ARG)
  1643 ;;                   _frexp (ARG)
  1644 ;;                 _frexp (ARG)
  1645 ;;                 ___bmul (ARG)
  1646 ;;           ___awtoft
  1647 ;;             ___ftpack
  1648 ;;             ___ftneg (ARG)
  1649 ;;               ___ftpack (ARG)
  1650 ;;     ___ftmul
  1651 ;;       ___ftpack
  1652 ;;       ___awtoft (ARG)
  1653 ;;         ___ftpack
  1654 ;;         ___ftneg (ARG)
  1655 ;;           ___ftpack (ARG)
  1656 ;;       _frexp (ARG)
  1657 ;;   _lcd_puts
  1658 ;;     _lcd_write
  1659 ;;   ___ftge
  1660 ;;
  1661 ;; _IntVector (ROOT)
  1662 ;;
  1663                           
  1664 ;; Address spaces:
  1665                           
  1666 ;;Name               Size   Autos  Total    Cost      Usage
  1667 ;;BITCOMMON            E      0       0       0        0.0%
  1668 ;;EEDATA             100      0       0       0        0.0%
  1669 ;;NULL                 0      0       0       0        0.0%
  1670 ;;CODE                 0      0       0       0        0.0%
  1671 ;;COMMON               E      6       A       1       71.4%
  1672 ;;BITSFR0              0      0       0       1        0.0%
  1673 ;;SFR0                 0      0       0       1        0.0%
  1674 ;;BITSFR1              0      0       0       2        0.0%
  1675 ;;SFR1                 0      0       0       2        0.0%
  1676 ;;STACK                0      0       6       2        0.0%
  1677 ;;ABS                  0      0      9E       3        0.0%
  1678 ;;BITBANK0            50      0       0       4        0.0%
  1679 ;;BITSFR3              0      0       0       4        0.0%
  1680 ;;SFR3                 0      0       0       4        0.0%
  1681 ;;BANK0               50     50      50       5      100.0%
  1682 ;;BITSFR2              0      0       0       5        0.0%
  1683 ;;SFR2                 0      0       0       5        0.0%
  1684 ;;BITBANK1            50      0       0       6        0.0%
  1685 ;;BANK1               50     26      44       7       85.0%
  1686 ;;BITBANK3            60      0       0       8        0.0%
  1687 ;;BANK3               60      0       0       9        0.0%
  1688 ;;BITBANK2            60      0       0      10        0.0%
  1689 ;;BANK2               60      0       0      11        0.0%
  1690 ;;DATA                 0      0      A4      12        0.0%
  1691                           
  1692                           	global	_main
  1693                           psect	maintext,global,class=CODE,delta=2
  1694                           global __pmaintext
  1695  0015                     __pmaintext:
  1696                           
  1697 ;; *************** function _main *****************
  1698 ;; Defined at:
  1699 ;;		line 28 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \capture.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  summ            3   35[BANK1 ] float 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;		None               void
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 17F/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         0       0       3       0       0
  1715 ;;      Temps:          0       0       2       0       0
  1716 ;;      Totals:         0       0       5       0       0
  1717 ;;Total ram usage:        5 bytes
  1718 ;; Hardware stack levels required when called:    7
  1719 ;; This function calls:
  1720 ;;		_DelayMs
  1721 ;;		_lcd_init
  1722 ;;		_lcd_clear
  1723 ;;		_init_a2d
  1724 ;;		_lcd_goto
  1725 ;;		_read_a2d
  1726 ;;		___ftdiv
  1727 ;;		_read_a2d2
  1728 ;;		___ftadd
  1729 ;;		_ftoa
  1730 ;;		_lcd_puts
  1731 ;;		___ftge
  1732 ;; This function is called by:
  1733 ;;		Startup code after reset
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           psect	maintext
  1737                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\capture.c"
  1738                           	line	28
  1739                           	global	__size_of_main
  1740  01AF                     	__size_of_main	equ	__end_of_main-_main
  1741                           	
  1742  0015                     _main:	
  1743                           	opt	stack 1
  1744                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1745                           	line	29
  1746                           	
  1747  0015                     l7241:	
  1748                           ;capture.c: 29: ADCON1 = 0;
  1749  0015  1683               	bsf	status, 5	;RP0=1, select bank1
  1750  0016  1303               	bcf	status, 6	;RP1=0, select bank1
  1751  0017  019F               	clrf	(159)^080h	;volatile
  1752                           	line	30
  1753                           	
  1754  0018                     l7243:	
  1755                           ;capture.c: 30: TRISA = 0xFF;
  1756  0018  30FF               	movlw	(0FFh)
  1757  0019  0085               	movwf	(133)^080h	;volatile
  1758                           	line	31
  1759                           	
  1760  001A                     l7245:	
  1761                           ;capture.c: 31: nRBPU = 0;
  1762  001A  1381               	bcf	(1039/8)^080h,(1039)&7
  1763                           	line	32
  1764                           	
  1765  001B                     l7247:	
  1766                           ;capture.c: 32: TRISE = 0;
  1767  001B  0189               	clrf	(137)^080h	;volatile
  1768                           	line	33
  1769                           	
  1770  001C                     l7249:	
  1771                           ;capture.c: 33: TRISD = 0;
  1772  001C  0188               	clrf	(136)^080h	;volatile
  1773                           	line	34
  1774                           	
  1775  001D                     l7251:	
  1776                           ;capture.c: 34: TRISC = 0;
  1777  001D  0187               	clrf	(135)^080h	;volatile
  1778                           	line	35
  1779                           	
  1780  001E                     l7253:	
  1781                           ;capture.c: 35: RE2 = 0;
  1782  001E  1283               	bcf	status, 5	;RP0=0, select bank0
  1783  001F  1303               	bcf	status, 6	;RP1=0, select bank0
  1784  0020  1109               	bcf	(74/8),(74)&7
  1785                           	line	37
  1786                           	
  1787  0021                     l7255:	
  1788                           ;capture.c: 37: GIE = 1;
  1789  0021  178B               	bsf	(95/8),(95)&7
  1790                           	line	38
  1791                           	
  1792  0022                     l7257:	
  1793                           ;capture.c: 38: PEIE = 1;
  1794  0022  170B               	bsf	(94/8),(94)&7
  1795                           	line	39
  1796                           ;capture.c: 39: OPTION_REG = 0x47;
  1797  0023  3047               	movlw	(047h)
  1798  0024  1683               	bsf	status, 5	;RP0=1, select bank1
  1799  0025  1303               	bcf	status, 6	;RP1=0, select bank1
  1800  0026  0081               	movwf	(129)^080h	;volatile
  1801                           	line	40
  1802                           ;capture.c: 40: TMR0 =103;
  1803  0027  3067               	movlw	(067h)
  1804  0028  1283               	bcf	status, 5	;RP0=0, select bank0
  1805  0029  1303               	bcf	status, 6	;RP1=0, select bank0
  1806  002A  0081               	movwf	(1)	;volatile
  1807                           	line	42
  1808                           	
  1809  002B                     l7259:	
  1810                           ;capture.c: 42: TMR1CS = 0;
  1811  002B  1090               	bcf	(129/8),(129)&7
  1812                           	line	43
  1813                           	
  1814  002C                     l7261:	
  1815                           ;capture.c: 43: TMR1IF = 0;
  1816  002C  100C               	bcf	(96/8),(96)&7
  1817                           	line	44
  1818                           	
  1819  002D                     l7263:	
  1820                           ;capture.c: 44: TMR1H = 0x00;
  1821  002D  018F               	clrf	(15)	;volatile
  1822                           	line	45
  1823                           	
  1824  002E                     l7265:	
  1825                           ;capture.c: 45: TMR1L = 0x00;
  1826  002E  018E               	clrf	(14)	;volatile
  1827                           	line	46
  1828                           	
  1829  002F                     l7267:	
  1830                           ;capture.c: 46: T1CKPS0 = 0; T1CKPS1 = 0;
  1831  002F  1210               	bcf	(132/8),(132)&7
  1832                           	
  1833  0030                     l7269:	
  1834  0030  1290               	bcf	(133/8),(133)&7
  1835                           	line	47
  1836                           	
  1837  0031                     l7271:	
  1838                           ;capture.c: 47: T1SYNC = 0;
  1839  0031  1110               	bcf	(130/8),(130)&7
  1840                           	line	48
  1841                           	
  1842  0032                     l7273:	
  1843                           ;capture.c: 48: TMR1IE = 1;
  1844  0032  1683               	bsf	status, 5	;RP0=1, select bank1
  1845  0033  1303               	bcf	status, 6	;RP1=0, select bank1
  1846  0034  140C               	bsf	(1120/8)^080h,(1120)&7
  1847                           	line	49
  1848                           	
  1849  0035                     l7275:	
  1850                           ;capture.c: 49: TMR1ON = 1;
  1851  0035  1283               	bcf	status, 5	;RP0=0, select bank0
  1852  0036  1303               	bcf	status, 6	;RP1=0, select bank0
  1853  0037  1410               	bsf	(128/8),(128)&7
  1854                           	line	51
  1855                           ;capture.c: 51: PR2 = 71;
  1856  0038  3047               	movlw	(047h)
  1857  0039  1683               	bsf	status, 5	;RP0=1, select bank1
  1858  003A  1303               	bcf	status, 6	;RP1=0, select bank1
  1859  003B  0092               	movwf	(146)^080h	;volatile
  1860                           	line	52
  1861                           ;capture.c: 52: T2CON = 0b00000100;
  1862  003C  3004               	movlw	(04h)
  1863  003D  1283               	bcf	status, 5	;RP0=0, select bank0
  1864  003E  1303               	bcf	status, 6	;RP1=0, select bank0
  1865  003F  0092               	movwf	(18)	;volatile
  1866                           	line	53
  1867                           ;capture.c: 53: CCP1CON = 0b00101100;
  1868  0040  302C               	movlw	(02Ch)
  1869  0041  0097               	movwf	(23)	;volatile
  1870                           	line	55
  1871                           	
  1872  0042                     l7277:	
  1873                           ;capture.c: 55: DelayMs(100);
  1874  0042  3064               	movlw	(064h)
  1875  0043  160A  118A  264B   	fcall	_DelayMs
              120A  118A         
  1876                           	line	56
  1877                           	
  1878  0048                     l7279:	
  1879                           ;capture.c: 56: lcd_init();
  1880  0048  120A  158A  21A2   	fcall	_lcd_init
              120A  118A         
  1881                           	line	57
  1882                           	
  1883  004D                     l7281:	
  1884                           ;capture.c: 57: lcd_clear();
  1885  004D  160A  118A  25D0   	fcall	_lcd_clear
              120A  118A         
  1886                           	line	59
  1887                           	
  1888  0052                     l7283:	
  1889                           ;capture.c: 59: init_a2d();
  1890  0052  160A  118A  25B6   	fcall	_init_a2d
              120A  118A         
  1891                           	line	60
  1892                           	
  1893  0057                     l7285:	
  1894                           ;capture.c: 60: DelayMs(500);
  1895  0057  30F4               	movlw	(0F4h)
  1896  0058  160A  118A  264B   	fcall	_DelayMs
              120A  118A         
  1897  005D  285E               	goto	l7287
  1898                           	line	63
  1899                           ;capture.c: 63: while(1) {
  1900                           	
  1901  005E                     l717:	
  1902                           	line	64
  1903                           	
  1904  005E                     l7287:	
  1905                           ;capture.c: 64: DelayMs(100);
  1906  005E  3064               	movlw	(064h)
  1907  005F  160A  118A  264B   	fcall	_DelayMs
              120A  118A         
  1908                           	line	65
  1909                           	
  1910  0064                     l7289:	
  1911                           ;capture.c: 65: lcd_clear();
  1912  0064  160A  118A  25D0   	fcall	_lcd_clear
              120A  118A         
  1913                           	line	66
  1914                           	
  1915  0069                     l7291:	
  1916                           ;capture.c: 66: lcd_goto(0);
  1917  0069  3000               	movlw	(0)
  1918  006A  120A  118A  27F4   	fcall	_lcd_goto
              120A  118A         
  1919                           	line	67
  1920                           	
  1921  006F                     l7293:	
  1922                           ;capture.c: 67: x= read_a2d(0);
  1923  006F  3000               	movlw	(0)
  1924  0070  160A  118A  2748   	fcall	_read_a2d
              120A  118A         
  1925  0075  1283               	bcf	status, 5	;RP0=0, select bank0
  1926  0076  1303               	bcf	status, 6	;RP1=0, select bank0
  1927  0077  082F               	movf	(0+(?_read_a2d)),w
  1928  0078  1683               	bsf	status, 5	;RP0=1, select bank1
  1929  0079  1303               	bcf	status, 6	;RP1=0, select bank1
  1930  007A  00D0               	movwf	(_x)^080h
  1931  007B  1283               	bcf	status, 5	;RP0=0, select bank0
  1932  007C  1303               	bcf	status, 6	;RP1=0, select bank0
  1933  007D  0830               	movf	(1+(?_read_a2d)),w
  1934  007E  1683               	bsf	status, 5	;RP0=1, select bank1
  1935  007F  1303               	bcf	status, 6	;RP1=0, select bank1
  1936  0080  00D1               	movwf	(_x+1)^080h
  1937  0081  1283               	bcf	status, 5	;RP0=0, select bank0
  1938  0082  1303               	bcf	status, 6	;RP1=0, select bank0
  1939  0083  0831               	movf	(2+(?_read_a2d)),w
  1940  0084  1683               	bsf	status, 5	;RP0=1, select bank1
  1941  0085  1303               	bcf	status, 6	;RP1=0, select bank1
  1942  0086  00D2               	movwf	(_x+2)^080h
  1943                           	line	68
  1944                           	
  1945  0087                     l7295:	
  1946                           ;capture.c: 68: x = x/51.0;
  1947  0087  3000               	movlw	0x0
  1948  0088  1283               	bcf	status, 5	;RP0=0, select bank0
  1949  0089  1303               	bcf	status, 6	;RP1=0, select bank0
  1950  008A  00A8               	movwf	(?___ftdiv)
  1951  008B  304C               	movlw	0x4c
  1952  008C  00A9               	movwf	(?___ftdiv+1)
  1953  008D  3042               	movlw	0x42
  1954  008E  00AA               	movwf	(?___ftdiv+2)
  1955  008F  1683               	bsf	status, 5	;RP0=1, select bank1
  1956  0090  1303               	bcf	status, 6	;RP1=0, select bank1
  1957  0091  0850               	movf	(_x)^080h,w
  1958  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  1959  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  1960  0094  00AB               	movwf	0+(?___ftdiv)+03h
  1961  0095  1683               	bsf	status, 5	;RP0=1, select bank1
  1962  0096  1303               	bcf	status, 6	;RP1=0, select bank1
  1963  0097  0851               	movf	(_x+1)^080h,w
  1964  0098  1283               	bcf	status, 5	;RP0=0, select bank0
  1965  0099  1303               	bcf	status, 6	;RP1=0, select bank0
  1966  009A  00AC               	movwf	1+(?___ftdiv)+03h
  1967  009B  1683               	bsf	status, 5	;RP0=1, select bank1
  1968  009C  1303               	bcf	status, 6	;RP1=0, select bank1
  1969  009D  0852               	movf	(_x+2)^080h,w
  1970  009E  1283               	bcf	status, 5	;RP0=0, select bank0
  1971  009F  1303               	bcf	status, 6	;RP1=0, select bank0
  1972  00A0  00AD               	movwf	2+(?___ftdiv)+03h
  1973  00A1  120A  158A  2577   	fcall	___ftdiv
              120A  118A         
  1974  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1975  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1976  00A8  0828               	movf	(0+(?___ftdiv)),w
  1977  00A9  1683               	bsf	status, 5	;RP0=1, select bank1
  1978  00AA  1303               	bcf	status, 6	;RP1=0, select bank1
  1979  00AB  00D0               	movwf	(_x)^080h
  1980  00AC  1283               	bcf	status, 5	;RP0=0, select bank0
  1981  00AD  1303               	bcf	status, 6	;RP1=0, select bank0
  1982  00AE  0829               	movf	(1+(?___ftdiv)),w
  1983  00AF  1683               	bsf	status, 5	;RP0=1, select bank1
  1984  00B0  1303               	bcf	status, 6	;RP1=0, select bank1
  1985  00B1  00D1               	movwf	(_x+1)^080h
  1986  00B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1987  00B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1988  00B4  082A               	movf	(2+(?___ftdiv)),w
  1989  00B5  1683               	bsf	status, 5	;RP0=1, select bank1
  1990  00B6  1303               	bcf	status, 6	;RP1=0, select bank1
  1991  00B7  00D2               	movwf	(_x+2)^080h
  1992                           	line	69
  1993                           	
  1994  00B8                     l7297:	
  1995                           ;capture.c: 69: x2 = read_a2d2(0);
  1996  00B8  3000               	movlw	(0)
  1997  00B9  160A  118A  2781   	fcall	_read_a2d2
              120A  118A         
  1998  00BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1999  00BF  1303               	bcf	status, 6	;RP1=0, select bank0
  2000  00C0  082F               	movf	(0+(?_read_a2d2)),w
  2001  00C1  1683               	bsf	status, 5	;RP0=1, select bank1
  2002  00C2  1303               	bcf	status, 6	;RP1=0, select bank1
  2003  00C3  00D3               	movwf	(_x2)^080h
  2004  00C4  1283               	bcf	status, 5	;RP0=0, select bank0
  2005  00C5  1303               	bcf	status, 6	;RP1=0, select bank0
  2006  00C6  0830               	movf	(1+(?_read_a2d2)),w
  2007  00C7  1683               	bsf	status, 5	;RP0=1, select bank1
  2008  00C8  1303               	bcf	status, 6	;RP1=0, select bank1
  2009  00C9  00D4               	movwf	(_x2+1)^080h
  2010  00CA  1283               	bcf	status, 5	;RP0=0, select bank0
  2011  00CB  1303               	bcf	status, 6	;RP1=0, select bank0
  2012  00CC  0831               	movf	(2+(?_read_a2d2)),w
  2013  00CD  1683               	bsf	status, 5	;RP0=1, select bank1
  2014  00CE  1303               	bcf	status, 6	;RP1=0, select bank1
  2015  00CF  00D5               	movwf	(_x2+2)^080h
  2016                           	line	70
  2017                           	
  2018  00D0                     l7299:	
  2019                           ;capture.c: 70: x2/=51.0;
  2020  00D0  3000               	movlw	0x0
  2021  00D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2022  00D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2023  00D3  00A8               	movwf	(?___ftdiv)
  2024  00D4  304C               	movlw	0x4c
  2025  00D5  00A9               	movwf	(?___ftdiv+1)
  2026  00D6  3042               	movlw	0x42
  2027  00D7  00AA               	movwf	(?___ftdiv+2)
  2028  00D8  1683               	bsf	status, 5	;RP0=1, select bank1
  2029  00D9  1303               	bcf	status, 6	;RP1=0, select bank1
  2030  00DA  0853               	movf	(_x2)^080h,w
  2031  00DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2032  00DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2033  00DD  00AB               	movwf	0+(?___ftdiv)+03h
  2034  00DE  1683               	bsf	status, 5	;RP0=1, select bank1
  2035  00DF  1303               	bcf	status, 6	;RP1=0, select bank1
  2036  00E0  0854               	movf	(_x2+1)^080h,w
  2037  00E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2038  00E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2039  00E3  00AC               	movwf	1+(?___ftdiv)+03h
  2040  00E4  1683               	bsf	status, 5	;RP0=1, select bank1
  2041  00E5  1303               	bcf	status, 6	;RP1=0, select bank1
  2042  00E6  0855               	movf	(_x2+2)^080h,w
  2043  00E7  1283               	bcf	status, 5	;RP0=0, select bank0
  2044  00E8  1303               	bcf	status, 6	;RP1=0, select bank0
  2045  00E9  00AD               	movwf	2+(?___ftdiv)+03h
  2046  00EA  120A  158A  2577   	fcall	___ftdiv
              120A  118A         
  2047  00EF  1283               	bcf	status, 5	;RP0=0, select bank0
  2048  00F0  1303               	bcf	status, 6	;RP1=0, select bank0
  2049  00F1  0828               	movf	(0+(?___ftdiv)),w
  2050  00F2  1683               	bsf	status, 5	;RP0=1, select bank1
  2051  00F3  1303               	bcf	status, 6	;RP1=0, select bank1
  2052  00F4  00D3               	movwf	(_x2)^080h
  2053  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
  2054  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
  2055  00F7  0829               	movf	(1+(?___ftdiv)),w
  2056  00F8  1683               	bsf	status, 5	;RP0=1, select bank1
  2057  00F9  1303               	bcf	status, 6	;RP1=0, select bank1
  2058  00FA  00D4               	movwf	(_x2+1)^080h
  2059  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2060  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2061  00FD  082A               	movf	(2+(?___ftdiv)),w
  2062  00FE  1683               	bsf	status, 5	;RP0=1, select bank1
  2063  00FF  1303               	bcf	status, 6	;RP1=0, select bank1
  2064  0100  00D5               	movwf	(_x2+2)^080h
  2065                           	line	71
  2066                           	
  2067  0101                     l7301:	
  2068                           ;capture.c: 71: float summ = x+x2;
  2069  0101  0853               	movf	(_x2)^080h,w
  2070  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  2071  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  2072  0104  00BF               	movwf	(?___ftadd)
  2073  0105  1683               	bsf	status, 5	;RP0=1, select bank1
  2074  0106  1303               	bcf	status, 6	;RP1=0, select bank1
  2075  0107  0854               	movf	(_x2+1)^080h,w
  2076  0108  1283               	bcf	status, 5	;RP0=0, select bank0
  2077  0109  1303               	bcf	status, 6	;RP1=0, select bank0
  2078  010A  00C0               	movwf	(?___ftadd+1)
  2079  010B  1683               	bsf	status, 5	;RP0=1, select bank1
  2080  010C  1303               	bcf	status, 6	;RP1=0, select bank1
  2081  010D  0855               	movf	(_x2+2)^080h,w
  2082  010E  1283               	bcf	status, 5	;RP0=0, select bank0
  2083  010F  1303               	bcf	status, 6	;RP1=0, select bank0
  2084  0110  00C1               	movwf	(?___ftadd+2)
  2085  0111  1683               	bsf	status, 5	;RP0=1, select bank1
  2086  0112  1303               	bcf	status, 6	;RP1=0, select bank1
  2087  0113  0850               	movf	(_x)^080h,w
  2088  0114  1283               	bcf	status, 5	;RP0=0, select bank0
  2089  0115  1303               	bcf	status, 6	;RP1=0, select bank0
  2090  0116  00C2               	movwf	0+(?___ftadd)+03h
  2091  0117  1683               	bsf	status, 5	;RP0=1, select bank1
  2092  0118  1303               	bcf	status, 6	;RP1=0, select bank1
  2093  0119  0851               	movf	(_x+1)^080h,w
  2094  011A  1283               	bcf	status, 5	;RP0=0, select bank0
  2095  011B  1303               	bcf	status, 6	;RP1=0, select bank0
  2096  011C  00C3               	movwf	1+(?___ftadd)+03h
  2097  011D  1683               	bsf	status, 5	;RP0=1, select bank1
  2098  011E  1303               	bcf	status, 6	;RP1=0, select bank1
  2099  011F  0852               	movf	(_x+2)^080h,w
  2100  0120  1283               	bcf	status, 5	;RP0=0, select bank0
  2101  0121  1303               	bcf	status, 6	;RP1=0, select bank0
  2102  0122  00C4               	movwf	2+(?___ftadd)+03h
  2103  0123  120A  118A  262E   	fcall	___ftadd
              120A  118A         
  2104  0128  1283               	bcf	status, 5	;RP0=0, select bank0
  2105  0129  1303               	bcf	status, 6	;RP1=0, select bank0
  2106  012A  083F               	movf	(0+(?___ftadd)),w
  2107  012B  1683               	bsf	status, 5	;RP0=1, select bank1
  2108  012C  1303               	bcf	status, 6	;RP1=0, select bank1
  2109  012D  00C3               	movwf	(main@summ)^080h
  2110  012E  1283               	bcf	status, 5	;RP0=0, select bank0
  2111  012F  1303               	bcf	status, 6	;RP1=0, select bank0
  2112  0130  0840               	movf	(1+(?___ftadd)),w
  2113  0131  1683               	bsf	status, 5	;RP0=1, select bank1
  2114  0132  1303               	bcf	status, 6	;RP1=0, select bank1
  2115  0133  00C4               	movwf	(main@summ+1)^080h
  2116  0134  1283               	bcf	status, 5	;RP0=0, select bank0
  2117  0135  1303               	bcf	status, 6	;RP1=0, select bank0
  2118  0136  0841               	movf	(2+(?___ftadd)),w
  2119  0137  1683               	bsf	status, 5	;RP0=1, select bank1
  2120  0138  1303               	bcf	status, 6	;RP1=0, select bank1
  2121  0139  00C5               	movwf	(main@summ+2)^080h
  2122                           	line	72
  2123                           	
  2124  013A                     l7303:	
  2125                           ;capture.c: 72: ftoa(summ, str, 1);
  2126  013A  0843               	movf	(main@summ)^080h,w
  2127  013B  00AF               	movwf	(?_ftoa)^080h
  2128  013C  0844               	movf	(main@summ+1)^080h,w
  2129  013D  00B0               	movwf	(?_ftoa+1)^080h
  2130  013E  0845               	movf	(main@summ+2)^080h,w
  2131  013F  00B1               	movwf	(?_ftoa+2)^080h
  2132  0140  30DA               	movlw	(_str)&0ffh
  2133  0141  00C1               	movwf	(??_main+0)^080h+0
  2134  0142  0841               	movf	(??_main+0)^080h+0,w
  2135  0143  00B2               	movwf	(0+?_ftoa+03h)^080h
  2136  0144  3001               	movlw	low(01h)
  2137  0145  00B3               	movwf	0+(?_ftoa)^080h+04h
  2138  0146  3000               	movlw	high(01h)
  2139  0147  00B4               	movwf	(0+(?_ftoa)^080h+04h)+1
  2140  0148  120A  118A  24D4   	fcall	_ftoa
              120A  118A         
  2141                           	line	74
  2142                           	
  2143  014D                     l7305:	
  2144                           ;capture.c: 74: lcd_puts(str);
  2145  014D  30DA               	movlw	(_str&0ffh)
  2146  014E  1283               	bcf	status, 5	;RP0=0, select bank0
  2147  014F  1303               	bcf	status, 6	;RP1=0, select bank0
  2148  0150  00A2               	movwf	(?_lcd_puts)
  2149  0151  3000               	movlw	(0x1/2)
  2150  0152  00A3               	movwf	(?_lcd_puts+1)
  2151  0153  160A  118A  26B9   	fcall	_lcd_puts
              120A  118A         
  2152                           	line	75
  2153                           	
  2154  0158                     l7307:	
  2155                           ;capture.c: 75: lcd_goto(40);
  2156  0158  3028               	movlw	(028h)
  2157  0159  120A  118A  27F4   	fcall	_lcd_goto
              120A  118A         
  2158                           	line	76
  2159                           	
  2160  015E                     l7309:	
  2161                           ;capture.c: 76: if(summ > 5.0)
  2162  015E  3000               	movlw	0x0
  2163  015F  1283               	bcf	status, 5	;RP0=0, select bank0
  2164  0160  1303               	bcf	status, 6	;RP1=0, select bank0
  2165  0161  00A0               	movwf	(?___ftge)
  2166  0162  30A0               	movlw	0xa0
  2167  0163  00A1               	movwf	(?___ftge+1)
  2168  0164  3040               	movlw	0x40
  2169  0165  00A2               	movwf	(?___ftge+2)
  2170  0166  1683               	bsf	status, 5	;RP0=1, select bank1
  2171  0167  1303               	bcf	status, 6	;RP1=0, select bank1
  2172  0168  0843               	movf	(main@summ)^080h,w
  2173  0169  1283               	bcf	status, 5	;RP0=0, select bank0
  2174  016A  1303               	bcf	status, 6	;RP1=0, select bank0
  2175  016B  00A3               	movwf	0+(?___ftge)+03h
  2176  016C  1683               	bsf	status, 5	;RP0=1, select bank1
  2177  016D  1303               	bcf	status, 6	;RP1=0, select bank1
  2178  016E  0844               	movf	(main@summ+1)^080h,w
  2179  016F  1283               	bcf	status, 5	;RP0=0, select bank0
  2180  0170  1303               	bcf	status, 6	;RP1=0, select bank0
  2181  0171  00A4               	movwf	1+(?___ftge)+03h
  2182  0172  1683               	bsf	status, 5	;RP0=1, select bank1
  2183  0173  1303               	bcf	status, 6	;RP1=0, select bank1
  2184  0174  0845               	movf	(main@summ+2)^080h,w
  2185  0175  1283               	bcf	status, 5	;RP0=0, select bank0
  2186  0176  1303               	bcf	status, 6	;RP1=0, select bank0
  2187  0177  00A5               	movwf	2+(?___ftge)+03h
  2188  0178  120A  158A  21FB   	fcall	___ftge
              120A  118A         
  2189  017D  1803               	btfsc	status,0
  2190  017E  2980               	goto	u5531
  2191  017F  2981               	goto	u5530
  2192  0180                     u5531:
  2193  0180  2995               	goto	l7317
  2194  0181                     u5530:
  2195                           	line	78
  2196                           	
  2197  0181                     l7311:	
  2198                           ;capture.c: 77: {
  2199                           ;capture.c: 78: lcd_puts("Greater than 5");
  2200  0181  303A               	movlw	low((STR_1-__stringbase))
  2201  0182  1283               	bcf	status, 5	;RP0=0, select bank0
  2202  0183  1303               	bcf	status, 6	;RP1=0, select bank0
  2203  0184  00A2               	movwf	(?_lcd_puts)
  2204  0185  3080               	movlw	80h
  2205  0186  00A3               	movwf	(?_lcd_puts+1)
  2206  0187  160A  118A  26B9   	fcall	_lcd_puts
              120A  118A         
  2207                           	line	79
  2208                           	
  2209  018C                     l7313:	
  2210                           ;capture.c: 79: CCPR1L = 0b00010101;
  2211  018C  3015               	movlw	(015h)
  2212  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  2213  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  2214  018F  0095               	movwf	(21)	;volatile
  2215                           	line	80
  2216                           	
  2217  0190                     l7315:	
  2218                           ;capture.c: 80: d1Counter = 0;
  2219  0190  1683               	bsf	status, 5	;RP0=1, select bank1
  2220  0191  1303               	bcf	status, 6	;RP1=0, select bank1
  2221  0192  01D6               	clrf	(_d1Counter)^080h
  2222  0193  01D7               	clrf	(_d1Counter+1)^080h
  2223                           	line	81
  2224                           ;capture.c: 81: }
  2225  0194  285E               	goto	l7287
  2226                           	line	82
  2227                           	
  2228  0195                     l718:	
  2229                           	line	84
  2230                           	
  2231  0195                     l7317:	
  2232                           ;capture.c: 82: else
  2233                           ;capture.c: 83: {
  2234                           ;capture.c: 84: lcd_puts("Less Than 5");
  2235  0195  3049               	movlw	low((STR_2-__stringbase))
  2236  0196  1283               	bcf	status, 5	;RP0=0, select bank0
  2237  0197  1303               	bcf	status, 6	;RP1=0, select bank0
  2238  0198  00A2               	movwf	(?_lcd_puts)
  2239  0199  3080               	movlw	80h
  2240  019A  00A3               	movwf	(?_lcd_puts+1)
  2241  019B  160A  118A  26B9   	fcall	_lcd_puts
              120A  118A         
  2242                           	line	85
  2243                           	
  2244  01A0                     l7319:	
  2245                           ;capture.c: 85: CCPR1L = 0;
  2246  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2247  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2248  01A2  0195               	clrf	(21)	;volatile
  2249                           	line	86
  2250                           	
  2251  01A3                     l7321:	
  2252                           ;capture.c: 86: if(d1Counter == 150){
  2253  01A3  3096               	movlw	096h
  2254  01A4  1683               	bsf	status, 5	;RP0=1, select bank1
  2255  01A5  1303               	bcf	status, 6	;RP1=0, select bank1
  2256  01A6  0656               	xorwf	(_d1Counter)^080h,w
  2257  01A7  0457               	iorwf	(_d1Counter+1)^080h,w
  2258  01A8  1D03               	skipz
  2259  01A9  29AB               	goto	u5541
  2260  01AA  29AC               	goto	u5540
  2261  01AB                     u5541:
  2262  01AB  285E               	goto	l7287
  2263  01AC                     u5540:
  2264                           	line	87
  2265                           	
  2266  01AC                     l7323:	
  2267                           ;capture.c: 87: state = !state;
  2268  01AC  0859               	movf	(_state+1)^080h,w
  2269  01AD  0458               	iorwf	(_state)^080h,w
  2270  01AE  3000               	movlw	0
  2271  01AF  1903               	skipnz
  2272  01B0  3001               	movlw	1
  2273  01B1  00C1               	movwf	(??_main+0)^080h+0
  2274  01B2  01C2               	clrf	(??_main+0)^080h+0+1
  2275  01B3  0841               	movf	0+(??_main+0)^080h+0,w
  2276  01B4  00D8               	movwf	(_state)^080h
  2277  01B5  0842               	movf	1+(??_main+0)^080h+0,w
  2278  01B6  00D9               	movwf	(_state+1)^080h
  2279                           	line	88
  2280                           	
  2281  01B7                     l7325:	
  2282                           ;capture.c: 88: PORTC |= (state);
  2283  01B7  0858               	movf	(_state)^080h,w
  2284  01B8  00C1               	movwf	(??_main+0)^080h+0
  2285  01B9  0841               	movf	(??_main+0)^080h+0,w
  2286  01BA  1283               	bcf	status, 5	;RP0=0, select bank0
  2287  01BB  1303               	bcf	status, 6	;RP1=0, select bank0
  2288  01BC  0487               	iorwf	(7),f	;volatile
  2289  01BD  285E               	goto	l7287
  2290                           	line	89
  2291                           	
  2292  01BE                     l720:	
  2293  01BE  285E               	goto	l7287
  2294                           	line	90
  2295                           	
  2296  01BF                     l719:	
  2297  01BF  285E               	goto	l7287
  2298                           	line	91
  2299                           	
  2300  01C0                     l721:	
  2301                           	line	63
  2302  01C0  285E               	goto	l7287
  2303                           	
  2304  01C1                     l722:	
  2305                           	line	93
  2306                           	
  2307  01C1                     l723:	
  2308                           	global	start
  2309  01C1  120A  118A  2812   	ljmp	start
  2310                           	opt stack 0
  2311                           GLOBAL	__end_of_main
  2312  01C4                     	__end_of_main:
  2313 ;; =============== function _main ends ============
  2314                           
  2315                           	signat	_main,88
  2316                           	global	_ftoa
  2317                           psect	text1237,local,class=CODE,delta=2
  2318                           global __ptext1237
  2319  04D4                     __ptext1237:
  2320                           
  2321 ;; *************** function _ftoa *****************
  2322 ;; Defined at:
  2323 ;;		line 44 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \string.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  n               3   15[BANK1 ] float 
  2326 ;;  res             1   18[BANK1 ] PTR unsigned char 
  2327 ;;		 -> str(10), 
  2328 ;;  afterpoint      2   19[BANK1 ] int 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  fpart           3   30[BANK1 ] float 
  2331 ;;  i               2   28[BANK1 ] int 
  2332 ;;  ipart           2   26[BANK1 ] int 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;		None               void
  2335 ;; Registers used:
  2336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       6       0       0
  2343 ;;      Locals:         0       0      10       0       0
  2344 ;;      Temps:          0       0       2       0       0
  2345 ;;      Totals:         0       0      18       0       0
  2346 ;;Total ram usage:       18 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    6
  2349 ;; This function calls:
  2350 ;;		___fttol
  2351 ;;		___awtoft
  2352 ;;		___ftneg
  2353 ;;		___ftadd
  2354 ;;		_intToStr
  2355 ;;		_pow
  2356 ;;		___ftmul
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           psect	text1237
  2362                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\string.c"
  2363                           	line	44
  2364                           	global	__size_of_ftoa
  2365  015A                     	__size_of_ftoa	equ	__end_of_ftoa-_ftoa
  2366                           	
  2367  04D4                     _ftoa:	
  2368                           	opt	stack 1
  2369                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2370                           	line	46
  2371                           	
  2372  04D4                     l7227:	
  2373                           ;string.c: 46: int ipart = (int)n;
  2374  04D4  1683               	bsf	status, 5	;RP0=1, select bank1
  2375  04D5  1303               	bcf	status, 6	;RP1=0, select bank1
  2376  04D6  082F               	movf	(ftoa@n)^080h,w
  2377  04D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2378  04D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2379  04D9  00A0               	movwf	(?___fttol)
  2380  04DA  1683               	bsf	status, 5	;RP0=1, select bank1
  2381  04DB  1303               	bcf	status, 6	;RP1=0, select bank1
  2382  04DC  0830               	movf	(ftoa@n+1)^080h,w
  2383  04DD  1283               	bcf	status, 5	;RP0=0, select bank0
  2384  04DE  1303               	bcf	status, 6	;RP1=0, select bank0
  2385  04DF  00A1               	movwf	(?___fttol+1)
  2386  04E0  1683               	bsf	status, 5	;RP0=1, select bank1
  2387  04E1  1303               	bcf	status, 6	;RP1=0, select bank1
  2388  04E2  0831               	movf	(ftoa@n+2)^080h,w
  2389  04E3  1283               	bcf	status, 5	;RP0=0, select bank0
  2390  04E4  1303               	bcf	status, 6	;RP1=0, select bank0
  2391  04E5  00A2               	movwf	(?___fttol+2)
  2392  04E6  120A  158A  2365   	fcall	___fttol
              120A  118A         
  2393  04EB  1283               	bcf	status, 5	;RP0=0, select bank0
  2394  04EC  1303               	bcf	status, 6	;RP1=0, select bank0
  2395  04ED  0821               	movf	1+(((0+(?___fttol)))),w
  2396  04EE  1683               	bsf	status, 5	;RP0=1, select bank1
  2397  04EF  1303               	bcf	status, 6	;RP1=0, select bank1
  2398  04F0  01BB               	clrf	(ftoa@ipart+1)^080h
  2399  04F1  07BB               	addwf	(ftoa@ipart+1)^080h
  2400  04F2  1283               	bcf	status, 5	;RP0=0, select bank0
  2401  04F3  1303               	bcf	status, 6	;RP1=0, select bank0
  2402  04F4  0820               	movf	0+(((0+(?___fttol)))),w
  2403  04F5  1683               	bsf	status, 5	;RP0=1, select bank1
  2404  04F6  1303               	bcf	status, 6	;RP1=0, select bank1
  2405  04F7  01BA               	clrf	(ftoa@ipart)^080h
  2406  04F8  07BA               	addwf	(ftoa@ipart)^080h
  2407                           
  2408                           	line	49
  2409                           ;string.c: 49: float fpart = n - (float)ipart;
  2410  04F9  082F               	movf	(ftoa@n)^080h,w
  2411  04FA  1283               	bcf	status, 5	;RP0=0, select bank0
  2412  04FB  1303               	bcf	status, 6	;RP1=0, select bank0
  2413  04FC  00BF               	movwf	(?___ftadd)
  2414  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  2415  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  2416  04FF  0830               	movf	(ftoa@n+1)^080h,w
  2417  0500  1283               	bcf	status, 5	;RP0=0, select bank0
  2418  0501  1303               	bcf	status, 6	;RP1=0, select bank0
  2419  0502  00C0               	movwf	(?___ftadd+1)
  2420  0503  1683               	bsf	status, 5	;RP0=1, select bank1
  2421  0504  1303               	bcf	status, 6	;RP1=0, select bank1
  2422  0505  0831               	movf	(ftoa@n+2)^080h,w
  2423  0506  1283               	bcf	status, 5	;RP0=0, select bank0
  2424  0507  1303               	bcf	status, 6	;RP1=0, select bank0
  2425  0508  00C1               	movwf	(?___ftadd+2)
  2426  0509  1683               	bsf	status, 5	;RP0=1, select bank1
  2427  050A  1303               	bcf	status, 6	;RP1=0, select bank1
  2428  050B  083B               	movf	(ftoa@ipart+1)^080h,w
  2429  050C  1283               	bcf	status, 5	;RP0=0, select bank0
  2430  050D  1303               	bcf	status, 6	;RP1=0, select bank0
  2431  050E  01AC               	clrf	(?___awtoft+1)
  2432  050F  07AC               	addwf	(?___awtoft+1)
  2433  0510  1683               	bsf	status, 5	;RP0=1, select bank1
  2434  0511  1303               	bcf	status, 6	;RP1=0, select bank1
  2435  0512  083A               	movf	(ftoa@ipart)^080h,w
  2436  0513  1283               	bcf	status, 5	;RP0=0, select bank0
  2437  0514  1303               	bcf	status, 6	;RP1=0, select bank0
  2438  0515  01AB               	clrf	(?___awtoft)
  2439  0516  07AB               	addwf	(?___awtoft)
  2440                           
  2441  0517  160A  118A  26E4   	fcall	___awtoft
              120A  118A         
  2442  051C  1283               	bcf	status, 5	;RP0=0, select bank0
  2443  051D  1303               	bcf	status, 6	;RP1=0, select bank0
  2444  051E  082B               	movf	(0+(?___awtoft)),w
  2445  051F  00A8               	movwf	(?___ftneg)
  2446  0520  082C               	movf	(1+(?___awtoft)),w
  2447  0521  00A9               	movwf	(?___ftneg+1)
  2448  0522  082D               	movf	(2+(?___awtoft)),w
  2449  0523  00AA               	movwf	(?___ftneg+2)
  2450  0524  160A  118A  25C2   	fcall	___ftneg
              120A  118A         
  2451  0529  1283               	bcf	status, 5	;RP0=0, select bank0
  2452  052A  1303               	bcf	status, 6	;RP1=0, select bank0
  2453  052B  0828               	movf	(0+(?___ftneg)),w
  2454  052C  00C2               	movwf	0+(?___ftadd)+03h
  2455  052D  0829               	movf	(1+(?___ftneg)),w
  2456  052E  00C3               	movwf	1+(?___ftadd)+03h
  2457  052F  082A               	movf	(2+(?___ftneg)),w
  2458  0530  00C4               	movwf	2+(?___ftadd)+03h
  2459  0531  120A  118A  262E   	fcall	___ftadd
              120A  118A         
  2460  0536  1283               	bcf	status, 5	;RP0=0, select bank0
  2461  0537  1303               	bcf	status, 6	;RP1=0, select bank0
  2462  0538  083F               	movf	(0+(?___ftadd)),w
  2463  0539  1683               	bsf	status, 5	;RP0=1, select bank1
  2464  053A  1303               	bcf	status, 6	;RP1=0, select bank1
  2465  053B  00BE               	movwf	(ftoa@fpart)^080h
  2466  053C  1283               	bcf	status, 5	;RP0=0, select bank0
  2467  053D  1303               	bcf	status, 6	;RP1=0, select bank0
  2468  053E  0840               	movf	(1+(?___ftadd)),w
  2469  053F  1683               	bsf	status, 5	;RP0=1, select bank1
  2470  0540  1303               	bcf	status, 6	;RP1=0, select bank1
  2471  0541  00BF               	movwf	(ftoa@fpart+1)^080h
  2472  0542  1283               	bcf	status, 5	;RP0=0, select bank0
  2473  0543  1303               	bcf	status, 6	;RP1=0, select bank0
  2474  0544  0841               	movf	(2+(?___ftadd)),w
  2475  0545  1683               	bsf	status, 5	;RP0=1, select bank1
  2476  0546  1303               	bcf	status, 6	;RP1=0, select bank1
  2477  0547  00C0               	movwf	(ftoa@fpart+2)^080h
  2478                           	line	52
  2479                           	
  2480  0548                     l7229:	
  2481                           ;string.c: 52: int i = intToStr(ipart, res, 0);
  2482  0548  083B               	movf	(ftoa@ipart+1)^080h,w
  2483  0549  1283               	bcf	status, 5	;RP0=0, select bank0
  2484  054A  1303               	bcf	status, 6	;RP1=0, select bank0
  2485  054B  01AF               	clrf	(?_intToStr+1)
  2486  054C  07AF               	addwf	(?_intToStr+1)
  2487  054D  1683               	bsf	status, 5	;RP0=1, select bank1
  2488  054E  1303               	bcf	status, 6	;RP1=0, select bank1
  2489  054F  083A               	movf	(ftoa@ipart)^080h,w
  2490  0550  1283               	bcf	status, 5	;RP0=0, select bank0
  2491  0551  1303               	bcf	status, 6	;RP1=0, select bank0
  2492  0552  01AE               	clrf	(?_intToStr)
  2493  0553  07AE               	addwf	(?_intToStr)
  2494                           
  2495  0554  1683               	bsf	status, 5	;RP0=1, select bank1
  2496  0555  1303               	bcf	status, 6	;RP1=0, select bank1
  2497  0556  0832               	movf	(ftoa@res)^080h,w
  2498  0557  00B5               	movwf	(??_ftoa+0)^080h+0
  2499  0558  0835               	movf	(??_ftoa+0)^080h+0,w
  2500  0559  1283               	bcf	status, 5	;RP0=0, select bank0
  2501  055A  1303               	bcf	status, 6	;RP1=0, select bank0
  2502  055B  00B0               	movwf	(0+?_intToStr+02h)
  2503  055C  3000               	movlw	low(0)
  2504  055D  00B1               	movwf	0+(?_intToStr)+03h
  2505  055E  3000               	movlw	high(0)
  2506  055F  00B2               	movwf	(0+(?_intToStr)+03h)+1
  2507  0560  120A  118A  2774   	fcall	_intToStr
              120A  118A         
  2508  0565  1283               	bcf	status, 5	;RP0=0, select bank0
  2509  0566  1303               	bcf	status, 6	;RP1=0, select bank0
  2510  0567  082F               	movf	(1+(?_intToStr)),w
  2511  0568  1683               	bsf	status, 5	;RP0=1, select bank1
  2512  0569  1303               	bcf	status, 6	;RP1=0, select bank1
  2513  056A  01BD               	clrf	(ftoa@i+1)^080h
  2514  056B  07BD               	addwf	(ftoa@i+1)^080h
  2515  056C  1283               	bcf	status, 5	;RP0=0, select bank0
  2516  056D  1303               	bcf	status, 6	;RP1=0, select bank0
  2517  056E  082E               	movf	(0+(?_intToStr)),w
  2518  056F  1683               	bsf	status, 5	;RP0=1, select bank1
  2519  0570  1303               	bcf	status, 6	;RP1=0, select bank1
  2520  0571  01BC               	clrf	(ftoa@i)^080h
  2521  0572  07BC               	addwf	(ftoa@i)^080h
  2522                           
  2523                           	line	55
  2524                           	
  2525  0573                     l7231:	
  2526                           ;string.c: 55: if (afterpoint != 0)
  2527  0573  0834               	movf	(ftoa@afterpoint+1)^080h,w
  2528  0574  0433               	iorwf	(ftoa@afterpoint)^080h,w
  2529  0575  1903               	skipnz
  2530  0576  2D78               	goto	u5521
  2531  0577  2D79               	goto	u5520
  2532  0578                     u5521:
  2533  0578  2E2D               	goto	l2175
  2534  0579                     u5520:
  2535                           	line	57
  2536                           	
  2537  0579                     l7233:	
  2538                           ;string.c: 56: {
  2539                           ;string.c: 57: res[i] = '.';
  2540  0579  302E               	movlw	(02Eh)
  2541  057A  00B5               	movwf	(??_ftoa+0)^080h+0
  2542  057B  083C               	movf	(ftoa@i)^080h,w
  2543  057C  0732               	addwf	(ftoa@res)^080h,w
  2544  057D  00B6               	movwf	(??_ftoa+1)^080h+0
  2545  057E  0836               	movf	0+(??_ftoa+1)^080h+0,w
  2546  057F  0084               	movwf	fsr0
  2547  0580  0835               	movf	(??_ftoa+0)^080h+0,w
  2548  0581  1383               	bcf	status, 7	;select IRP bank0
  2549  0582  0080               	movwf	indf
  2550                           	line	62
  2551                           	
  2552  0583                     l7235:	
  2553                           ;string.c: 62: fpart = fpart * pow(10, afterpoint);
  2554  0583  0834               	movf	(ftoa@afterpoint+1)^080h,w
  2555  0584  1283               	bcf	status, 5	;RP0=0, select bank0
  2556  0585  1303               	bcf	status, 6	;RP1=0, select bank0
  2557  0586  01AC               	clrf	(?___awtoft+1)
  2558  0587  07AC               	addwf	(?___awtoft+1)
  2559  0588  1683               	bsf	status, 5	;RP0=1, select bank1
  2560  0589  1303               	bcf	status, 6	;RP1=0, select bank1
  2561  058A  0833               	movf	(ftoa@afterpoint)^080h,w
  2562  058B  1283               	bcf	status, 5	;RP0=0, select bank0
  2563  058C  1303               	bcf	status, 6	;RP1=0, select bank0
  2564  058D  01AB               	clrf	(?___awtoft)
  2565  058E  07AB               	addwf	(?___awtoft)
  2566                           
  2567  058F  160A  118A  26E4   	fcall	___awtoft
              120A  118A         
  2568  0594  1283               	bcf	status, 5	;RP0=0, select bank0
  2569  0595  1303               	bcf	status, 6	;RP1=0, select bank0
  2570  0596  082B               	movf	(0+(?___awtoft)),w
  2571  0597  1683               	bsf	status, 5	;RP0=1, select bank1
  2572  0598  1303               	bcf	status, 6	;RP1=0, select bank1
  2573  0599  00A3               	movwf	0+(?_pow)^080h+03h
  2574  059A  1283               	bcf	status, 5	;RP0=0, select bank0
  2575  059B  1303               	bcf	status, 6	;RP1=0, select bank0
  2576  059C  082C               	movf	(1+(?___awtoft)),w
  2577  059D  1683               	bsf	status, 5	;RP0=1, select bank1
  2578  059E  1303               	bcf	status, 6	;RP1=0, select bank1
  2579  059F  00A4               	movwf	1+(?_pow)^080h+03h
  2580  05A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2581  05A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2582  05A2  082D               	movf	(2+(?___awtoft)),w
  2583  05A3  1683               	bsf	status, 5	;RP0=1, select bank1
  2584  05A4  1303               	bcf	status, 6	;RP1=0, select bank1
  2585  05A5  00A5               	movwf	2+(?_pow)^080h+03h
  2586  05A6  3000               	movlw	0x0
  2587  05A7  00A0               	movwf	(?_pow)^080h
  2588  05A8  3020               	movlw	0x20
  2589  05A9  00A1               	movwf	(?_pow+1)^080h
  2590  05AA  3041               	movlw	0x41
  2591  05AB  00A2               	movwf	(?_pow+2)^080h
  2592  05AC  120A  118A  21C4   	fcall	_pow
              120A  118A         
  2593  05B1  1683               	bsf	status, 5	;RP0=1, select bank1
  2594  05B2  1303               	bcf	status, 6	;RP1=0, select bank1
  2595  05B3  0820               	movf	(0+(?_pow))^080h,w
  2596  05B4  00B7               	movwf	(_ftoa$3820)^080h
  2597  05B5  0821               	movf	(1+(?_pow))^080h,w
  2598  05B6  00B8               	movwf	(_ftoa$3820+1)^080h
  2599  05B7  0822               	movf	(2+(?_pow))^080h,w
  2600  05B8  00B9               	movwf	(_ftoa$3820+2)^080h
  2601                           	
  2602  05B9                     l7237:	
  2603                           ;string.c: 62: fpart = fpart * pow(10, afterpoint);
  2604  05B9  083E               	movf	(ftoa@fpart)^080h,w
  2605  05BA  1283               	bcf	status, 5	;RP0=0, select bank0
  2606  05BB  1303               	bcf	status, 6	;RP1=0, select bank0
  2607  05BC  00AF               	movwf	(?___ftmul)
  2608  05BD  1683               	bsf	status, 5	;RP0=1, select bank1
  2609  05BE  1303               	bcf	status, 6	;RP1=0, select bank1
  2610  05BF  083F               	movf	(ftoa@fpart+1)^080h,w
  2611  05C0  1283               	bcf	status, 5	;RP0=0, select bank0
  2612  05C1  1303               	bcf	status, 6	;RP1=0, select bank0
  2613  05C2  00B0               	movwf	(?___ftmul+1)
  2614  05C3  1683               	bsf	status, 5	;RP0=1, select bank1
  2615  05C4  1303               	bcf	status, 6	;RP1=0, select bank1
  2616  05C5  0840               	movf	(ftoa@fpart+2)^080h,w
  2617  05C6  1283               	bcf	status, 5	;RP0=0, select bank0
  2618  05C7  1303               	bcf	status, 6	;RP1=0, select bank0
  2619  05C8  00B1               	movwf	(?___ftmul+2)
  2620  05C9  1683               	bsf	status, 5	;RP0=1, select bank1
  2621  05CA  1303               	bcf	status, 6	;RP1=0, select bank1
  2622  05CB  0837               	movf	(_ftoa$3820)^080h,w
  2623  05CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2624  05CD  1303               	bcf	status, 6	;RP1=0, select bank0
  2625  05CE  00B2               	movwf	0+(?___ftmul)+03h
  2626  05CF  1683               	bsf	status, 5	;RP0=1, select bank1
  2627  05D0  1303               	bcf	status, 6	;RP1=0, select bank1
  2628  05D1  0838               	movf	(_ftoa$3820+1)^080h,w
  2629  05D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2630  05D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2631  05D4  00B3               	movwf	1+(?___ftmul)+03h
  2632  05D5  1683               	bsf	status, 5	;RP0=1, select bank1
  2633  05D6  1303               	bcf	status, 6	;RP1=0, select bank1
  2634  05D7  0839               	movf	(_ftoa$3820+2)^080h,w
  2635  05D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2636  05D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2637  05DA  00B4               	movwf	2+(?___ftmul)+03h
  2638  05DB  120A  158A  2712   	fcall	___ftmul
              120A  118A         
  2639  05E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2640  05E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2641  05E2  082F               	movf	(0+(?___ftmul)),w
  2642  05E3  1683               	bsf	status, 5	;RP0=1, select bank1
  2643  05E4  1303               	bcf	status, 6	;RP1=0, select bank1
  2644  05E5  00BE               	movwf	(ftoa@fpart)^080h
  2645  05E6  1283               	bcf	status, 5	;RP0=0, select bank0
  2646  05E7  1303               	bcf	status, 6	;RP1=0, select bank0
  2647  05E8  0830               	movf	(1+(?___ftmul)),w
  2648  05E9  1683               	bsf	status, 5	;RP0=1, select bank1
  2649  05EA  1303               	bcf	status, 6	;RP1=0, select bank1
  2650  05EB  00BF               	movwf	(ftoa@fpart+1)^080h
  2651  05EC  1283               	bcf	status, 5	;RP0=0, select bank0
  2652  05ED  1303               	bcf	status, 6	;RP1=0, select bank0
  2653  05EE  0831               	movf	(2+(?___ftmul)),w
  2654  05EF  1683               	bsf	status, 5	;RP0=1, select bank1
  2655  05F0  1303               	bcf	status, 6	;RP1=0, select bank1
  2656  05F1  00C0               	movwf	(ftoa@fpart+2)^080h
  2657                           	line	64
  2658                           	
  2659  05F2                     l7239:	
  2660                           ;string.c: 64: intToStr((int)fpart, res + i + 1, afterpoint);
  2661  05F2  083E               	movf	(ftoa@fpart)^080h,w
  2662  05F3  1283               	bcf	status, 5	;RP0=0, select bank0
  2663  05F4  1303               	bcf	status, 6	;RP1=0, select bank0
  2664  05F5  00A0               	movwf	(?___fttol)
  2665  05F6  1683               	bsf	status, 5	;RP0=1, select bank1
  2666  05F7  1303               	bcf	status, 6	;RP1=0, select bank1
  2667  05F8  083F               	movf	(ftoa@fpart+1)^080h,w
  2668  05F9  1283               	bcf	status, 5	;RP0=0, select bank0
  2669  05FA  1303               	bcf	status, 6	;RP1=0, select bank0
  2670  05FB  00A1               	movwf	(?___fttol+1)
  2671  05FC  1683               	bsf	status, 5	;RP0=1, select bank1
  2672  05FD  1303               	bcf	status, 6	;RP1=0, select bank1
  2673  05FE  0840               	movf	(ftoa@fpart+2)^080h,w
  2674  05FF  1283               	bcf	status, 5	;RP0=0, select bank0
  2675  0600  1303               	bcf	status, 6	;RP1=0, select bank0
  2676  0601  00A2               	movwf	(?___fttol+2)
  2677  0602  120A  158A  2365   	fcall	___fttol
              120A  118A         
  2678  0607  1283               	bcf	status, 5	;RP0=0, select bank0
  2679  0608  1303               	bcf	status, 6	;RP1=0, select bank0
  2680  0609  0821               	movf	1+(((0+(?___fttol)))),w
  2681  060A  01AF               	clrf	(?_intToStr+1)
  2682  060B  07AF               	addwf	(?_intToStr+1)
  2683  060C  0820               	movf	0+(((0+(?___fttol)))),w
  2684  060D  01AE               	clrf	(?_intToStr)
  2685  060E  07AE               	addwf	(?_intToStr)
  2686                           
  2687  060F  1683               	bsf	status, 5	;RP0=1, select bank1
  2688  0610  1303               	bcf	status, 6	;RP1=0, select bank1
  2689  0611  083C               	movf	(ftoa@i)^080h,w
  2690  0612  0732               	addwf	(ftoa@res)^080h,w
  2691  0613  3E01               	addlw	01h
  2692  0614  00B5               	movwf	(??_ftoa+0)^080h+0
  2693  0615  0835               	movf	(??_ftoa+0)^080h+0,w
  2694  0616  1283               	bcf	status, 5	;RP0=0, select bank0
  2695  0617  1303               	bcf	status, 6	;RP1=0, select bank0
  2696  0618  00B0               	movwf	(0+?_intToStr+02h)
  2697  0619  1683               	bsf	status, 5	;RP0=1, select bank1
  2698  061A  1303               	bcf	status, 6	;RP1=0, select bank1
  2699  061B  0834               	movf	(ftoa@afterpoint+1)^080h,w
  2700  061C  1283               	bcf	status, 5	;RP0=0, select bank0
  2701  061D  1303               	bcf	status, 6	;RP1=0, select bank0
  2702  061E  01B2               	clrf	1+(?_intToStr)+03h
  2703  061F  07B2               	addwf	1+(?_intToStr)+03h
  2704  0620  1683               	bsf	status, 5	;RP0=1, select bank1
  2705  0621  1303               	bcf	status, 6	;RP1=0, select bank1
  2706  0622  0833               	movf	(ftoa@afterpoint)^080h,w
  2707  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  2708  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  2709  0625  01B1               	clrf	0+(?_intToStr)+03h
  2710  0626  07B1               	addwf	0+(?_intToStr)+03h
  2711                           
  2712  0627  120A  118A  2774   	fcall	_intToStr
              120A  118A         
  2713  062C  2E2D               	goto	l2175
  2714                           	line	65
  2715                           	
  2716  062D                     l2174:	
  2717                           	line	66
  2718                           	
  2719  062D                     l2175:	
  2720  062D  0008               	return
  2721                           	opt stack 0
  2722                           GLOBAL	__end_of_ftoa
  2723  062E                     	__end_of_ftoa:
  2724 ;; =============== function _ftoa ends ============
  2725                           
  2726                           	signat	_ftoa,12408
  2727                           	global	_pow
  2728                           psect	text1238,local,class=CODE,delta=2
  2729                           global __ptext1238
  2730  01C4                     __ptext1238:
  2731                           
  2732 ;; *************** function _pow *****************
  2733 ;; Defined at:
  2734 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\pow.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  x               3    0[BANK1 ] int 
  2737 ;;  y               3    3[BANK1 ] int 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  yi              4   11[BANK1 ] unsigned long 
  2740 ;;  sign            1   10[BANK1 ] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  3    0[BANK1 ] unsigned char 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       0       6       0       0
  2751 ;;      Locals:         0       0       8       0       0
  2752 ;;      Temps:          0       0       1       0       0
  2753 ;;      Totals:         0       0      15       0       0
  2754 ;;Total ram usage:       15 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    5
  2757 ;; This function calls:
  2758 ;;		___ftge
  2759 ;;		___fttol
  2760 ;;		___lltoft
  2761 ;;		___ftneg
  2762 ;;		_log
  2763 ;;		___ftmul
  2764 ;;		_exp
  2765 ;; This function is called by:
  2766 ;;		_ftoa
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           psect	text1238
  2770                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\pow.c"
  2771                           	line	6
  2772                           	global	__size_of_pow
  2773  01A7                     	__size_of_pow	equ	__end_of_pow-_pow
  2774                           	
  2775  01C4                     _pow:	
  2776                           	opt	stack 1
  2777                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2778                           	line	7
  2779                           	
  2780  01C4                     l7189:	
  2781  01C4  1683               	bsf	status, 5	;RP0=1, select bank1
  2782  01C5  1303               	bcf	status, 6	;RP1=0, select bank1
  2783  01C6  01AA               	clrf	(pow@sign)^080h
  2784                           	line	10
  2785                           	
  2786  01C7                     l7191:	
  2787  01C7  0822               	movf	(pow@x+2)^080h,w
  2788  01C8  0421               	iorwf	(pow@x+1)^080h,w
  2789  01C9  0420               	iorwf	(pow@x)^080h,w
  2790  01CA  1D03               	skipz
  2791  01CB  29CD               	goto	u5461
  2792  01CC  29CE               	goto	u5460
  2793  01CD                     u5461:
  2794  01CD  29FF               	goto	l7199
  2795  01CE                     u5460:
  2796                           	line	11
  2797                           	
  2798  01CE                     l7193:	
  2799  01CE  3000               	movlw	0x0
  2800  01CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2801  01D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2802  01D1  00A0               	movwf	(?___ftge)
  2803  01D2  3000               	movlw	0x0
  2804  01D3  00A1               	movwf	(?___ftge+1)
  2805  01D4  3000               	movlw	0x0
  2806  01D5  00A2               	movwf	(?___ftge+2)
  2807  01D6  1683               	bsf	status, 5	;RP0=1, select bank1
  2808  01D7  1303               	bcf	status, 6	;RP1=0, select bank1
  2809  01D8  0823               	movf	(pow@y)^080h,w
  2810  01D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2811  01DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2812  01DB  00A3               	movwf	0+(?___ftge)+03h
  2813  01DC  1683               	bsf	status, 5	;RP0=1, select bank1
  2814  01DD  1303               	bcf	status, 6	;RP1=0, select bank1
  2815  01DE  0824               	movf	(pow@y+1)^080h,w
  2816  01DF  1283               	bcf	status, 5	;RP0=0, select bank0
  2817  01E0  1303               	bcf	status, 6	;RP1=0, select bank0
  2818  01E1  00A4               	movwf	1+(?___ftge)+03h
  2819  01E2  1683               	bsf	status, 5	;RP0=1, select bank1
  2820  01E3  1303               	bcf	status, 6	;RP1=0, select bank1
  2821  01E4  0825               	movf	(pow@y+2)^080h,w
  2822  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  2823  01E6  1303               	bcf	status, 6	;RP1=0, select bank0
  2824  01E7  00A5               	movwf	2+(?___ftge)+03h
  2825  01E8  120A  158A  21FB   	fcall	___ftge
              120A  118A         
  2826  01ED  1C03               	btfss	status,0
  2827  01EE  29F0               	goto	u5471
  2828  01EF  29F1               	goto	u5470
  2829  01F0                     u5471:
  2830  01F0  29F5               	goto	l2859
  2831  01F1                     u5470:
  2832                           	line	12
  2833                           	
  2834  01F1                     l7195:	
  2835  01F1  3021               	movlw	low(021h)
  2836  01F2  00F8               	movwf	(_errno)
  2837  01F3  3000               	movlw	high(021h)
  2838  01F4  00F9               	movwf	((_errno))+1
  2839                           	line	13
  2840                           	
  2841  01F5                     l2859:	
  2842                           	line	14
  2843  01F5  3000               	movlw	0x0
  2844  01F6  1683               	bsf	status, 5	;RP0=1, select bank1
  2845  01F7  1303               	bcf	status, 6	;RP1=0, select bank1
  2846  01F8  00A0               	movwf	(?_pow)^080h
  2847  01F9  3000               	movlw	0x0
  2848  01FA  00A1               	movwf	(?_pow+1)^080h
  2849  01FB  3000               	movlw	0x0
  2850  01FC  00A2               	movwf	(?_pow+2)^080h
  2851  01FD  2B6A               	goto	l2860
  2852                           	
  2853  01FE                     l7197:	
  2854  01FE  2B6A               	goto	l2860
  2855                           	line	15
  2856                           	
  2857  01FF                     l2858:	
  2858                           	line	16
  2859                           	
  2860  01FF                     l7199:	
  2861  01FF  0825               	movf	(pow@y+2)^080h,w
  2862  0200  0424               	iorwf	(pow@y+1)^080h,w
  2863  0201  0423               	iorwf	(pow@y)^080h,w
  2864  0202  1D03               	skipz
  2865  0203  2A05               	goto	u5481
  2866  0204  2A06               	goto	u5480
  2867  0205                     u5481:
  2868  0205  2A0E               	goto	l7205
  2869  0206                     u5480:
  2870                           	line	17
  2871                           	
  2872  0206                     l7201:	
  2873  0206  3000               	movlw	0x0
  2874  0207  00A0               	movwf	(?_pow)^080h
  2875  0208  3080               	movlw	0x80
  2876  0209  00A1               	movwf	(?_pow+1)^080h
  2877  020A  303F               	movlw	0x3f
  2878  020B  00A2               	movwf	(?_pow+2)^080h
  2879  020C  2B6A               	goto	l2860
  2880                           	
  2881  020D                     l7203:	
  2882  020D  2B6A               	goto	l2860
  2883                           	
  2884  020E                     l2861:	
  2885                           	line	18
  2886                           	
  2887  020E                     l7205:	
  2888  020E  0820               	movf	(pow@x)^080h,w
  2889  020F  1283               	bcf	status, 5	;RP0=0, select bank0
  2890  0210  1303               	bcf	status, 6	;RP1=0, select bank0
  2891  0211  00A0               	movwf	(?___ftge)
  2892  0212  1683               	bsf	status, 5	;RP0=1, select bank1
  2893  0213  1303               	bcf	status, 6	;RP1=0, select bank1
  2894  0214  0821               	movf	(pow@x+1)^080h,w
  2895  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  2896  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  2897  0217  00A1               	movwf	(?___ftge+1)
  2898  0218  1683               	bsf	status, 5	;RP0=1, select bank1
  2899  0219  1303               	bcf	status, 6	;RP1=0, select bank1
  2900  021A  0822               	movf	(pow@x+2)^080h,w
  2901  021B  1283               	bcf	status, 5	;RP0=0, select bank0
  2902  021C  1303               	bcf	status, 6	;RP1=0, select bank0
  2903  021D  00A2               	movwf	(?___ftge+2)
  2904  021E  3000               	movlw	0x0
  2905  021F  00A3               	movwf	0+(?___ftge)+03h
  2906  0220  3000               	movlw	0x0
  2907  0221  00A4               	movwf	1+(?___ftge)+03h
  2908  0222  3000               	movlw	0x0
  2909  0223  00A5               	movwf	2+(?___ftge)+03h
  2910  0224  120A  158A  21FB   	fcall	___ftge
              120A  118A         
  2911  0229  1803               	btfsc	status,0
  2912  022A  2A2C               	goto	u5491
  2913  022B  2A2D               	goto	u5490
  2914  022C                     u5491:
  2915  022C  2ACE               	goto	l7217
  2916  022D                     u5490:
  2917                           	line	19
  2918                           	
  2919  022D                     l7207:	
  2920  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  2921  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  2922  022F  0823               	movf	(pow@y)^080h,w
  2923  0230  1283               	bcf	status, 5	;RP0=0, select bank0
  2924  0231  1303               	bcf	status, 6	;RP1=0, select bank0
  2925  0232  00A0               	movwf	(?___fttol)
  2926  0233  1683               	bsf	status, 5	;RP0=1, select bank1
  2927  0234  1303               	bcf	status, 6	;RP1=0, select bank1
  2928  0235  0824               	movf	(pow@y+1)^080h,w
  2929  0236  1283               	bcf	status, 5	;RP0=0, select bank0
  2930  0237  1303               	bcf	status, 6	;RP1=0, select bank0
  2931  0238  00A1               	movwf	(?___fttol+1)
  2932  0239  1683               	bsf	status, 5	;RP0=1, select bank1
  2933  023A  1303               	bcf	status, 6	;RP1=0, select bank1
  2934  023B  0825               	movf	(pow@y+2)^080h,w
  2935  023C  1283               	bcf	status, 5	;RP0=0, select bank0
  2936  023D  1303               	bcf	status, 6	;RP1=0, select bank0
  2937  023E  00A2               	movwf	(?___fttol+2)
  2938  023F  120A  158A  2365   	fcall	___fttol
              120A  118A         
  2939  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  2940  0245  1303               	bcf	status, 6	;RP1=0, select bank0
  2941  0246  0823               	movf	(3+(?___fttol)),w
  2942  0247  1683               	bsf	status, 5	;RP0=1, select bank1
  2943  0248  1303               	bcf	status, 6	;RP1=0, select bank1
  2944  0249  00AE               	movwf	(pow@yi+3)^080h
  2945  024A  1283               	bcf	status, 5	;RP0=0, select bank0
  2946  024B  1303               	bcf	status, 6	;RP1=0, select bank0
  2947  024C  0822               	movf	(2+(?___fttol)),w
  2948  024D  1683               	bsf	status, 5	;RP0=1, select bank1
  2949  024E  1303               	bcf	status, 6	;RP1=0, select bank1
  2950  024F  00AD               	movwf	(pow@yi+2)^080h
  2951  0250  1283               	bcf	status, 5	;RP0=0, select bank0
  2952  0251  1303               	bcf	status, 6	;RP1=0, select bank0
  2953  0252  0821               	movf	(1+(?___fttol)),w
  2954  0253  1683               	bsf	status, 5	;RP0=1, select bank1
  2955  0254  1303               	bcf	status, 6	;RP1=0, select bank1
  2956  0255  00AC               	movwf	(pow@yi+1)^080h
  2957  0256  1283               	bcf	status, 5	;RP0=0, select bank0
  2958  0257  1303               	bcf	status, 6	;RP1=0, select bank0
  2959  0258  0820               	movf	(0+(?___fttol)),w
  2960  0259  1683               	bsf	status, 5	;RP0=1, select bank1
  2961  025A  1303               	bcf	status, 6	;RP1=0, select bank1
  2962  025B  00AB               	movwf	(pow@yi)^080h
  2963                           
  2964                           	line	20
  2965  025C  082E               	movf	(pow@yi+3)^080h,w
  2966  025D  1283               	bcf	status, 5	;RP0=0, select bank0
  2967  025E  1303               	bcf	status, 6	;RP1=0, select bank0
  2968  025F  00AB               	movwf	(?___lltoft+3)
  2969  0260  1683               	bsf	status, 5	;RP0=1, select bank1
  2970  0261  1303               	bcf	status, 6	;RP1=0, select bank1
  2971  0262  082D               	movf	(pow@yi+2)^080h,w
  2972  0263  1283               	bcf	status, 5	;RP0=0, select bank0
  2973  0264  1303               	bcf	status, 6	;RP1=0, select bank0
  2974  0265  00AA               	movwf	(?___lltoft+2)
  2975  0266  1683               	bsf	status, 5	;RP0=1, select bank1
  2976  0267  1303               	bcf	status, 6	;RP1=0, select bank1
  2977  0268  082C               	movf	(pow@yi+1)^080h,w
  2978  0269  1283               	bcf	status, 5	;RP0=0, select bank0
  2979  026A  1303               	bcf	status, 6	;RP1=0, select bank0
  2980  026B  00A9               	movwf	(?___lltoft+1)
  2981  026C  1683               	bsf	status, 5	;RP0=1, select bank1
  2982  026D  1303               	bcf	status, 6	;RP1=0, select bank1
  2983  026E  082B               	movf	(pow@yi)^080h,w
  2984  026F  1283               	bcf	status, 5	;RP0=0, select bank0
  2985  0270  1303               	bcf	status, 6	;RP1=0, select bank0
  2986  0271  00A8               	movwf	(?___lltoft)
  2987                           
  2988  0272  160A  118A  2710   	fcall	___lltoft
              120A  118A         
  2989  0277  1683               	bsf	status, 5	;RP0=1, select bank1
  2990  0278  1303               	bcf	status, 6	;RP1=0, select bank1
  2991  0279  0825               	movf	(pow@y+2)^080h,w
  2992  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  2993  027B  1303               	bcf	status, 6	;RP1=0, select bank0
  2994  027C  062A               	xorwf	(2+(?___lltoft)),w
  2995  027D  1D03               	skipz
  2996  027E  2A8D               	goto	u5505
  2997  027F  1683               	bsf	status, 5	;RP0=1, select bank1
  2998  0280  1303               	bcf	status, 6	;RP1=0, select bank1
  2999  0281  0824               	movf	(pow@y+1)^080h,w
  3000  0282  1283               	bcf	status, 5	;RP0=0, select bank0
  3001  0283  1303               	bcf	status, 6	;RP1=0, select bank0
  3002  0284  0629               	xorwf	(1+(?___lltoft)),w
  3003  0285  1D03               	skipz
  3004  0286  2A8D               	goto	u5505
  3005  0287  1683               	bsf	status, 5	;RP0=1, select bank1
  3006  0288  1303               	bcf	status, 6	;RP1=0, select bank1
  3007  0289  0823               	movf	(pow@y)^080h,w
  3008  028A  1283               	bcf	status, 5	;RP0=0, select bank0
  3009  028B  1303               	bcf	status, 6	;RP1=0, select bank0
  3010  028C  0628               	xorwf	(0+(?___lltoft)),w
  3011  028D                     u5505:
  3012  028D  1903               	skipnz
  3013  028E  2A90               	goto	u5501
  3014  028F  2A91               	goto	u5500
  3015  0290                     u5501:
  3016  0290  2A9F               	goto	l7213
  3017  0291                     u5500:
  3018                           	line	21
  3019                           	
  3020  0291                     l7209:	
  3021  0291  3021               	movlw	low(021h)
  3022  0292  00F8               	movwf	(_errno)
  3023  0293  3000               	movlw	high(021h)
  3024  0294  00F9               	movwf	((_errno))+1
  3025                           	line	22
  3026  0295  3000               	movlw	0x0
  3027  0296  1683               	bsf	status, 5	;RP0=1, select bank1
  3028  0297  1303               	bcf	status, 6	;RP1=0, select bank1
  3029  0298  00A0               	movwf	(?_pow)^080h
  3030  0299  3000               	movlw	0x0
  3031  029A  00A1               	movwf	(?_pow+1)^080h
  3032  029B  3000               	movlw	0x0
  3033  029C  00A2               	movwf	(?_pow+2)^080h
  3034  029D  2B6A               	goto	l2860
  3035                           	
  3036  029E                     l7211:	
  3037  029E  2B6A               	goto	l2860
  3038                           	line	23
  3039                           	
  3040  029F                     l2863:	
  3041                           	line	24
  3042                           	
  3043  029F                     l7213:	
  3044  029F  1683               	bsf	status, 5	;RP0=1, select bank1
  3045  02A0  1303               	bcf	status, 6	;RP1=0, select bank1
  3046  02A1  082B               	movf	(pow@yi)^080h,w
  3047  02A2  3901               	andlw	01h
  3048  02A3  00A6               	movwf	(??_pow+0)^080h+0
  3049  02A4  0826               	movf	(??_pow+0)^080h+0,w
  3050  02A5  00AA               	movwf	(pow@sign)^080h
  3051                           	line	25
  3052                           	
  3053  02A6                     l7215:	
  3054  02A6  0820               	movf	(pow@x)^080h,w
  3055  02A7  1283               	bcf	status, 5	;RP0=0, select bank0
  3056  02A8  1303               	bcf	status, 6	;RP1=0, select bank0
  3057  02A9  00A8               	movwf	(?___ftneg)
  3058  02AA  1683               	bsf	status, 5	;RP0=1, select bank1
  3059  02AB  1303               	bcf	status, 6	;RP1=0, select bank1
  3060  02AC  0821               	movf	(pow@x+1)^080h,w
  3061  02AD  1283               	bcf	status, 5	;RP0=0, select bank0
  3062  02AE  1303               	bcf	status, 6	;RP1=0, select bank0
  3063  02AF  00A9               	movwf	(?___ftneg+1)
  3064  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  3065  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  3066  02B2  0822               	movf	(pow@x+2)^080h,w
  3067  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3068  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3069  02B5  00AA               	movwf	(?___ftneg+2)
  3070  02B6  160A  118A  25C2   	fcall	___ftneg
              120A  118A         
  3071  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  3072  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  3073  02BD  0828               	movf	(0+(?___ftneg)),w
  3074  02BE  1683               	bsf	status, 5	;RP0=1, select bank1
  3075  02BF  1303               	bcf	status, 6	;RP1=0, select bank1
  3076  02C0  00A0               	movwf	(pow@x)^080h
  3077  02C1  1283               	bcf	status, 5	;RP0=0, select bank0
  3078  02C2  1303               	bcf	status, 6	;RP1=0, select bank0
  3079  02C3  0829               	movf	(1+(?___ftneg)),w
  3080  02C4  1683               	bsf	status, 5	;RP0=1, select bank1
  3081  02C5  1303               	bcf	status, 6	;RP1=0, select bank1
  3082  02C6  00A1               	movwf	(pow@x+1)^080h
  3083  02C7  1283               	bcf	status, 5	;RP0=0, select bank0
  3084  02C8  1303               	bcf	status, 6	;RP1=0, select bank0
  3085  02C9  082A               	movf	(2+(?___ftneg)),w
  3086  02CA  1683               	bsf	status, 5	;RP0=1, select bank1
  3087  02CB  1303               	bcf	status, 6	;RP1=0, select bank1
  3088  02CC  00A2               	movwf	(pow@x+2)^080h
  3089  02CD  2ACE               	goto	l7217
  3090                           	line	26
  3091                           	
  3092  02CE                     l2862:	
  3093                           	line	27
  3094                           	
  3095  02CE                     l7217:	
  3096  02CE  1683               	bsf	status, 5	;RP0=1, select bank1
  3097  02CF  1303               	bcf	status, 6	;RP1=0, select bank1
  3098  02D0  0820               	movf	(pow@x)^080h,w
  3099  02D1  1283               	bcf	status, 5	;RP0=0, select bank0
  3100  02D2  1303               	bcf	status, 6	;RP1=0, select bank0
  3101  02D3  00E0               	movwf	(?_log)
  3102  02D4  1683               	bsf	status, 5	;RP0=1, select bank1
  3103  02D5  1303               	bcf	status, 6	;RP1=0, select bank1
  3104  02D6  0821               	movf	(pow@x+1)^080h,w
  3105  02D7  1283               	bcf	status, 5	;RP0=0, select bank0
  3106  02D8  1303               	bcf	status, 6	;RP1=0, select bank0
  3107  02D9  00E1               	movwf	(?_log+1)
  3108  02DA  1683               	bsf	status, 5	;RP0=1, select bank1
  3109  02DB  1303               	bcf	status, 6	;RP1=0, select bank1
  3110  02DC  0822               	movf	(pow@x+2)^080h,w
  3111  02DD  1283               	bcf	status, 5	;RP0=0, select bank0
  3112  02DE  1303               	bcf	status, 6	;RP1=0, select bank0
  3113  02DF  00E2               	movwf	(?_log+2)
  3114  02E0  120A  158A  263F   	fcall	_log
              120A  118A         
  3115  02E5  1283               	bcf	status, 5	;RP0=0, select bank0
  3116  02E6  1303               	bcf	status, 6	;RP1=0, select bank0
  3117  02E7  0860               	movf	(0+(?_log)),w
  3118  02E8  1683               	bsf	status, 5	;RP0=1, select bank1
  3119  02E9  1303               	bcf	status, 6	;RP1=0, select bank1
  3120  02EA  00A7               	movwf	(_pow$3821)^080h
  3121  02EB  1283               	bcf	status, 5	;RP0=0, select bank0
  3122  02EC  1303               	bcf	status, 6	;RP1=0, select bank0
  3123  02ED  0861               	movf	(1+(?_log)),w
  3124  02EE  1683               	bsf	status, 5	;RP0=1, select bank1
  3125  02EF  1303               	bcf	status, 6	;RP1=0, select bank1
  3126  02F0  00A8               	movwf	(_pow$3821+1)^080h
  3127  02F1  1283               	bcf	status, 5	;RP0=0, select bank0
  3128  02F2  1303               	bcf	status, 6	;RP1=0, select bank0
  3129  02F3  0862               	movf	(2+(?_log)),w
  3130  02F4  1683               	bsf	status, 5	;RP0=1, select bank1
  3131  02F5  1303               	bcf	status, 6	;RP1=0, select bank1
  3132  02F6  00A9               	movwf	(_pow$3821+2)^080h
  3133                           	
  3134  02F7                     l7219:	
  3135  02F7  0823               	movf	(pow@y)^080h,w
  3136  02F8  1283               	bcf	status, 5	;RP0=0, select bank0
  3137  02F9  1303               	bcf	status, 6	;RP1=0, select bank0
  3138  02FA  00AF               	movwf	(?___ftmul)
  3139  02FB  1683               	bsf	status, 5	;RP0=1, select bank1
  3140  02FC  1303               	bcf	status, 6	;RP1=0, select bank1
  3141  02FD  0824               	movf	(pow@y+1)^080h,w
  3142  02FE  1283               	bcf	status, 5	;RP0=0, select bank0
  3143  02FF  1303               	bcf	status, 6	;RP1=0, select bank0
  3144  0300  00B0               	movwf	(?___ftmul+1)
  3145  0301  1683               	bsf	status, 5	;RP0=1, select bank1
  3146  0302  1303               	bcf	status, 6	;RP1=0, select bank1
  3147  0303  0825               	movf	(pow@y+2)^080h,w
  3148  0304  1283               	bcf	status, 5	;RP0=0, select bank0
  3149  0305  1303               	bcf	status, 6	;RP1=0, select bank0
  3150  0306  00B1               	movwf	(?___ftmul+2)
  3151  0307  1683               	bsf	status, 5	;RP0=1, select bank1
  3152  0308  1303               	bcf	status, 6	;RP1=0, select bank1
  3153  0309  0827               	movf	(_pow$3821)^080h,w
  3154  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  3155  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  3156  030C  00B2               	movwf	0+(?___ftmul)+03h
  3157  030D  1683               	bsf	status, 5	;RP0=1, select bank1
  3158  030E  1303               	bcf	status, 6	;RP1=0, select bank1
  3159  030F  0828               	movf	(_pow$3821+1)^080h,w
  3160  0310  1283               	bcf	status, 5	;RP0=0, select bank0
  3161  0311  1303               	bcf	status, 6	;RP1=0, select bank0
  3162  0312  00B3               	movwf	1+(?___ftmul)+03h
  3163  0313  1683               	bsf	status, 5	;RP0=1, select bank1
  3164  0314  1303               	bcf	status, 6	;RP1=0, select bank1
  3165  0315  0829               	movf	(_pow$3821+2)^080h,w
  3166  0316  1283               	bcf	status, 5	;RP0=0, select bank0
  3167  0317  1303               	bcf	status, 6	;RP1=0, select bank0
  3168  0318  00B4               	movwf	2+(?___ftmul)+03h
  3169  0319  120A  158A  2712   	fcall	___ftmul
              120A  118A         
  3170  031E  1283               	bcf	status, 5	;RP0=0, select bank0
  3171  031F  1303               	bcf	status, 6	;RP1=0, select bank0
  3172  0320  082F               	movf	(0+(?___ftmul)),w
  3173  0321  00E6               	movwf	(?_exp)
  3174  0322  0830               	movf	(1+(?___ftmul)),w
  3175  0323  00E7               	movwf	(?_exp+1)
  3176  0324  0831               	movf	(2+(?___ftmul)),w
  3177  0325  00E8               	movwf	(?_exp+2)
  3178  0326  120A  118A  236B   	fcall	_exp
              120A  118A         
  3179  032B  1283               	bcf	status, 5	;RP0=0, select bank0
  3180  032C  1303               	bcf	status, 6	;RP1=0, select bank0
  3181  032D  0866               	movf	(0+(?_exp)),w
  3182  032E  1683               	bsf	status, 5	;RP0=1, select bank1
  3183  032F  1303               	bcf	status, 6	;RP1=0, select bank1
  3184  0330  00A0               	movwf	(pow@x)^080h
  3185  0331  1283               	bcf	status, 5	;RP0=0, select bank0
  3186  0332  1303               	bcf	status, 6	;RP1=0, select bank0
  3187  0333  0867               	movf	(1+(?_exp)),w
  3188  0334  1683               	bsf	status, 5	;RP0=1, select bank1
  3189  0335  1303               	bcf	status, 6	;RP1=0, select bank1
  3190  0336  00A1               	movwf	(pow@x+1)^080h
  3191  0337  1283               	bcf	status, 5	;RP0=0, select bank0
  3192  0338  1303               	bcf	status, 6	;RP1=0, select bank0
  3193  0339  0868               	movf	(2+(?_exp)),w
  3194  033A  1683               	bsf	status, 5	;RP0=1, select bank1
  3195  033B  1303               	bcf	status, 6	;RP1=0, select bank1
  3196  033C  00A2               	movwf	(pow@x+2)^080h
  3197                           	line	28
  3198                           	
  3199  033D                     l7221:	
  3200  033D  082A               	movf	(pow@sign)^080h,w
  3201  033E  1D03               	skipz
  3202  033F  2B41               	goto	u5510
  3203  0340  2B6A               	goto	l2864
  3204  0341                     u5510:
  3205                           	line	29
  3206                           	
  3207  0341                     l7223:	
  3208  0341  0820               	movf	(pow@x)^080h,w
  3209  0342  1283               	bcf	status, 5	;RP0=0, select bank0
  3210  0343  1303               	bcf	status, 6	;RP1=0, select bank0
  3211  0344  00A8               	movwf	(?___ftneg)
  3212  0345  1683               	bsf	status, 5	;RP0=1, select bank1
  3213  0346  1303               	bcf	status, 6	;RP1=0, select bank1
  3214  0347  0821               	movf	(pow@x+1)^080h,w
  3215  0348  1283               	bcf	status, 5	;RP0=0, select bank0
  3216  0349  1303               	bcf	status, 6	;RP1=0, select bank0
  3217  034A  00A9               	movwf	(?___ftneg+1)
  3218  034B  1683               	bsf	status, 5	;RP0=1, select bank1
  3219  034C  1303               	bcf	status, 6	;RP1=0, select bank1
  3220  034D  0822               	movf	(pow@x+2)^080h,w
  3221  034E  1283               	bcf	status, 5	;RP0=0, select bank0
  3222  034F  1303               	bcf	status, 6	;RP1=0, select bank0
  3223  0350  00AA               	movwf	(?___ftneg+2)
  3224  0351  160A  118A  25C2   	fcall	___ftneg
              120A  118A         
  3225  0356  1283               	bcf	status, 5	;RP0=0, select bank0
  3226  0357  1303               	bcf	status, 6	;RP1=0, select bank0
  3227  0358  0828               	movf	(0+(?___ftneg)),w
  3228  0359  1683               	bsf	status, 5	;RP0=1, select bank1
  3229  035A  1303               	bcf	status, 6	;RP1=0, select bank1
  3230  035B  00A0               	movwf	(?_pow)^080h
  3231  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  3232  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  3233  035E  0829               	movf	(1+(?___ftneg)),w
  3234  035F  1683               	bsf	status, 5	;RP0=1, select bank1
  3235  0360  1303               	bcf	status, 6	;RP1=0, select bank1
  3236  0361  00A1               	movwf	(?_pow+1)^080h
  3237  0362  1283               	bcf	status, 5	;RP0=0, select bank0
  3238  0363  1303               	bcf	status, 6	;RP1=0, select bank0
  3239  0364  082A               	movf	(2+(?___ftneg)),w
  3240  0365  1683               	bsf	status, 5	;RP0=1, select bank1
  3241  0366  1303               	bcf	status, 6	;RP1=0, select bank1
  3242  0367  00A2               	movwf	(?_pow+2)^080h
  3243  0368  2B6A               	goto	l2860
  3244                           	
  3245  0369                     l7225:	
  3246  0369  2B6A               	goto	l2860
  3247                           	
  3248  036A                     l2864:	
  3249                           	line	30
  3250                           	line	31
  3251                           	
  3252  036A                     l2860:	
  3253  036A  0008               	return
  3254                           	opt stack 0
  3255                           GLOBAL	__end_of_pow
  3256  036B                     	__end_of_pow:
  3257 ;; =============== function _pow ends ============
  3258                           
  3259                           	signat	_pow,8315
  3260                           	global	_exp
  3261                           psect	text1239,local,class=CODE,delta=2
  3262                           global __ptext1239
  3263  036B                     __ptext1239:
  3264                           
  3265 ;; *************** function _exp *****************
  3266 ;; Defined at:
  3267 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\exp.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  x               3   70[BANK0 ] unsigned char 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  exp             2   77[BANK0 ] int 
  3272 ;;  sign            1   79[BANK0 ] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  3   70[BANK0 ] unsigned char 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       3       0       0       0
  3283 ;;      Locals:         0       6       0       0       0
  3284 ;;      Temps:          0       1       0       0       0
  3285 ;;      Totals:         0      10       0       0       0
  3286 ;;Total ram usage:       10 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    4
  3289 ;; This function calls:
  3290 ;;		___ftge
  3291 ;;		___ftneg
  3292 ;;		___ftmul
  3293 ;;		_floor
  3294 ;;		___fttol
  3295 ;;		___awtoft
  3296 ;;		___ftsub
  3297 ;;		_eval_poly
  3298 ;;		_ldexp
  3299 ;;		___ftdiv
  3300 ;; This function is called by:
  3301 ;;		_pow
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           psect	text1239
  3305                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\exp.c"
  3306                           	line	13
  3307                           	global	__size_of_exp
  3308  0169                     	__size_of_exp	equ	__end_of_exp-_exp
  3309                           	
  3310  036B                     _exp:	
  3311                           	opt	stack 1
  3312                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3313                           	line	31
  3314                           	
  3315  036B                     l7137:	
  3316  036B  1283               	bcf	status, 5	;RP0=0, select bank0
  3317  036C  1303               	bcf	status, 6	;RP1=0, select bank0
  3318  036D  0868               	movf	(exp@x+2),w
  3319  036E  0467               	iorwf	(exp@x+1),w
  3320  036F  0466               	iorwf	(exp@x),w
  3321  0370  1D03               	skipz
  3322  0371  2B73               	goto	u5401
  3323  0372  2B74               	goto	u5400
  3324  0373                     u5401:
  3325  0373  2B7C               	goto	l7143
  3326  0374                     u5400:
  3327                           	line	32
  3328                           	
  3329  0374                     l7139:	
  3330  0374  3000               	movlw	0x0
  3331  0375  00E6               	movwf	(?_exp)
  3332  0376  3080               	movlw	0x80
  3333  0377  00E7               	movwf	(?_exp+1)
  3334  0378  303F               	movlw	0x3f
  3335  0379  00E8               	movwf	(?_exp+2)
  3336  037A  2CD3               	goto	l3218
  3337                           	
  3338  037B                     l7141:	
  3339  037B  2CD3               	goto	l3218
  3340                           	
  3341  037C                     l3217:	
  3342                           	line	34
  3343                           	
  3344  037C                     l7143:	
  3345  037C  3072               	movlw	0x72
  3346  037D  00A0               	movwf	(?___ftge)
  3347  037E  3031               	movlw	0x31
  3348  037F  00A1               	movwf	(?___ftge+1)
  3349  0380  3044               	movlw	0x44
  3350  0381  00A2               	movwf	(?___ftge+2)
  3351  0382  0866               	movf	(exp@x),w
  3352  0383  00A3               	movwf	0+(?___ftge)+03h
  3353  0384  0867               	movf	(exp@x+1),w
  3354  0385  00A4               	movwf	1+(?___ftge)+03h
  3355  0386  0868               	movf	(exp@x+2),w
  3356  0387  00A5               	movwf	2+(?___ftge)+03h
  3357  0388  120A  158A  21FB   	fcall	___ftge
              120A  118A         
  3358  038D  1803               	btfsc	status,0
  3359  038E  2B90               	goto	u5411
  3360  038F  2B91               	goto	u5410
  3361  0390                     u5411:
  3362  0390  2BAA               	goto	l7153
  3363  0391                     u5410:
  3364                           	line	35
  3365                           	
  3366  0391                     l7145:	
  3367  0391  3022               	movlw	low(022h)
  3368  0392  00F8               	movwf	(_errno)
  3369  0393  3000               	movlw	high(022h)
  3370  0394  00F9               	movwf	((_errno))+1
  3371                           	line	36
  3372  0395  2B9F               	goto	l7149
  3373                           	
  3374  0396                     l7147:	
  3375  0396  3000               	movlw	0x0
  3376  0397  1283               	bcf	status, 5	;RP0=0, select bank0
  3377  0398  1303               	bcf	status, 6	;RP1=0, select bank0
  3378  0399  00E6               	movwf	(?_exp)
  3379  039A  3080               	movlw	0x80
  3380  039B  00E7               	movwf	(?_exp+1)
  3381  039C  307F               	movlw	0x7f
  3382  039D  00E8               	movwf	(?_exp+2)
  3383  039E  2CD3               	goto	l3218
  3384                           	
  3385  039F                     l3221:	
  3386                           	
  3387  039F                     l7149:	
  3388  039F  30FF               	movlw	0xff
  3389  03A0  1283               	bcf	status, 5	;RP0=0, select bank0
  3390  03A1  1303               	bcf	status, 6	;RP1=0, select bank0
  3391  03A2  00E6               	movwf	(?_exp)
  3392  03A3  307F               	movlw	0x7f
  3393  03A4  00E7               	movwf	(?_exp+1)
  3394  03A5  307F               	movlw	0x7f
  3395  03A6  00E8               	movwf	(?_exp+2)
  3396  03A7  2CD3               	goto	l3218
  3397                           	
  3398  03A8                     l3223:	
  3399  03A8  2CD3               	goto	l3218
  3400                           	
  3401  03A9                     l7151:	
  3402  03A9  2CD3               	goto	l3218
  3403                           	line	37
  3404                           	
  3405  03AA                     l3219:	
  3406                           	line	38
  3407                           	
  3408  03AA                     l7153:	
  3409  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  3410  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  3411  03AC  0866               	movf	(exp@x),w
  3412  03AD  00A0               	movwf	(?___ftge)
  3413  03AE  0867               	movf	(exp@x+1),w
  3414  03AF  00A1               	movwf	(?___ftge+1)
  3415  03B0  0868               	movf	(exp@x+2),w
  3416  03B1  00A2               	movwf	(?___ftge+2)
  3417  03B2  3049               	movlw	0x49
  3418  03B3  00A3               	movwf	0+(?___ftge)+03h
  3419  03B4  303A               	movlw	0x3a
  3420  03B5  00A4               	movwf	1+(?___ftge)+03h
  3421  03B6  30C4               	movlw	0xc4
  3422  03B7  00A5               	movwf	2+(?___ftge)+03h
  3423  03B8  120A  158A  21FB   	fcall	___ftge
              120A  118A         
  3424  03BD  1803               	btfsc	status,0
  3425  03BE  2BC0               	goto	u5421
  3426  03BF  2BC1               	goto	u5420
  3427  03C0                     u5421:
  3428  03C0  2BCF               	goto	l7159
  3429  03C1                     u5420:
  3430                           	line	39
  3431                           	
  3432  03C1                     l7155:	
  3433  03C1  3022               	movlw	low(022h)
  3434  03C2  00F8               	movwf	(_errno)
  3435  03C3  3000               	movlw	high(022h)
  3436  03C4  00F9               	movwf	((_errno))+1
  3437                           	line	40
  3438  03C5  3000               	movlw	0x0
  3439  03C6  1283               	bcf	status, 5	;RP0=0, select bank0
  3440  03C7  1303               	bcf	status, 6	;RP1=0, select bank0
  3441  03C8  00E6               	movwf	(?_exp)
  3442  03C9  3000               	movlw	0x0
  3443  03CA  00E7               	movwf	(?_exp+1)
  3444  03CB  3000               	movlw	0x0
  3445  03CC  00E8               	movwf	(?_exp+2)
  3446  03CD  2CD3               	goto	l3218
  3447                           	
  3448  03CE                     l7157:	
  3449  03CE  2CD3               	goto	l3218
  3450                           	line	41
  3451                           	
  3452  03CF                     l3224:	
  3453                           	line	43
  3454                           	
  3455  03CF                     l7159:	
  3456  03CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3457  03D0  1303               	bcf	status, 6	;RP1=0, select bank0
  3458  03D1  0866               	movf	(exp@x),w
  3459  03D2  00A0               	movwf	(?___ftge)
  3460  03D3  0867               	movf	(exp@x+1),w
  3461  03D4  00A1               	movwf	(?___ftge+1)
  3462  03D5  0868               	movf	(exp@x+2),w
  3463  03D6  00A2               	movwf	(?___ftge+2)
  3464  03D7  3000               	movlw	0x0
  3465  03D8  00A3               	movwf	0+(?___ftge)+03h
  3466  03D9  3000               	movlw	0x0
  3467  03DA  00A4               	movwf	1+(?___ftge)+03h
  3468  03DB  3000               	movlw	0x0
  3469  03DC  00A5               	movwf	2+(?___ftge)+03h
  3470  03DD  120A  158A  21FB   	fcall	___ftge
              120A  118A         
  3471  03E2  3000               	movlw	0
  3472  03E3  1C03               	btfss	status,0
  3473  03E4  3001               	movlw	1
  3474  03E5  1283               	bcf	status, 5	;RP0=0, select bank0
  3475  03E6  1303               	bcf	status, 6	;RP1=0, select bank0
  3476  03E7  00E9               	movwf	(??_exp+0)+0
  3477  03E8  0869               	movf	(??_exp+0)+0,w
  3478  03E9  00EF               	movwf	(exp@sign)
  3479                           	line	44
  3480                           	
  3481  03EA                     l7161:	
  3482  03EA  086F               	movf	(exp@sign),w
  3483  03EB  1D03               	skipz
  3484  03EC  2BEE               	goto	u5430
  3485  03ED  2C02               	goto	l7165
  3486  03EE                     u5430:
  3487                           	line	45
  3488                           	
  3489  03EE                     l7163:	
  3490  03EE  0866               	movf	(exp@x),w
  3491  03EF  00A8               	movwf	(?___ftneg)
  3492  03F0  0867               	movf	(exp@x+1),w
  3493  03F1  00A9               	movwf	(?___ftneg+1)
  3494  03F2  0868               	movf	(exp@x+2),w
  3495  03F3  00AA               	movwf	(?___ftneg+2)
  3496  03F4  160A  118A  25C2   	fcall	___ftneg
              120A  118A         
  3497  03F9  1283               	bcf	status, 5	;RP0=0, select bank0
  3498  03FA  1303               	bcf	status, 6	;RP1=0, select bank0
  3499  03FB  0828               	movf	(0+(?___ftneg)),w
  3500  03FC  00E6               	movwf	(exp@x)
  3501  03FD  0829               	movf	(1+(?___ftneg)),w
  3502  03FE  00E7               	movwf	(exp@x+1)
  3503  03FF  082A               	movf	(2+(?___ftneg)),w
  3504  0400  00E8               	movwf	(exp@x+2)
  3505  0401  2C02               	goto	l7165
  3506                           	
  3507  0402                     l3225:	
  3508                           	line	46
  3509                           	
  3510  0402                     l7165:	
  3511  0402  30AA               	movlw	0xaa
  3512  0403  00AF               	movwf	(?___ftmul)
  3513  0404  30B8               	movlw	0xb8
  3514  0405  00B0               	movwf	(?___ftmul+1)
  3515  0406  303F               	movlw	0x3f
  3516  0407  00B1               	movwf	(?___ftmul+2)
  3517  0408  0866               	movf	(exp@x),w
  3518  0409  00B2               	movwf	0+(?___ftmul)+03h
  3519  040A  0867               	movf	(exp@x+1),w
  3520  040B  00B3               	movwf	1+(?___ftmul)+03h
  3521  040C  0868               	movf	(exp@x+2),w
  3522  040D  00B4               	movwf	2+(?___ftmul)+03h
  3523  040E  120A  158A  2712   	fcall	___ftmul
              120A  118A         
  3524  0413  1283               	bcf	status, 5	;RP0=0, select bank0
  3525  0414  1303               	bcf	status, 6	;RP1=0, select bank0
  3526  0415  082F               	movf	(0+(?___ftmul)),w
  3527  0416  00E6               	movwf	(exp@x)
  3528  0417  0830               	movf	(1+(?___ftmul)),w
  3529  0418  00E7               	movwf	(exp@x+1)
  3530  0419  0831               	movf	(2+(?___ftmul)),w
  3531  041A  00E8               	movwf	(exp@x+2)
  3532                           	line	47
  3533                           	
  3534  041B                     l7167:	
  3535  041B  0866               	movf	(exp@x),w
  3536  041C  00CC               	movwf	(?_floor)
  3537  041D  0867               	movf	(exp@x+1),w
  3538  041E  00CD               	movwf	(?_floor+1)
  3539  041F  0868               	movf	(exp@x+2),w
  3540  0420  00CE               	movwf	(?_floor+2)
  3541  0421  120A  158A  240B   	fcall	_floor
              120A  118A         
  3542  0426  1283               	bcf	status, 5	;RP0=0, select bank0
  3543  0427  1303               	bcf	status, 6	;RP1=0, select bank0
  3544  0428  084C               	movf	(0+(?_floor)),w
  3545  0429  00A0               	movwf	(?___fttol)
  3546  042A  084D               	movf	(1+(?_floor)),w
  3547  042B  00A1               	movwf	(?___fttol+1)
  3548  042C  084E               	movf	(2+(?_floor)),w
  3549  042D  00A2               	movwf	(?___fttol+2)
  3550  042E  120A  158A  2365   	fcall	___fttol
              120A  118A         
  3551  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  3552  0434  1303               	bcf	status, 6	;RP1=0, select bank0
  3553  0435  0821               	movf	1+(((0+(?___fttol)))),w
  3554  0436  01EE               	clrf	(exp@exp+1)
  3555  0437  07EE               	addwf	(exp@exp+1)
  3556  0438  0820               	movf	0+(((0+(?___fttol)))),w
  3557  0439  01ED               	clrf	(exp@exp)
  3558  043A  07ED               	addwf	(exp@exp)
  3559                           
  3560                           	line	48
  3561                           	
  3562  043B                     l7169:	
  3563  043B  086E               	movf	(exp@exp+1),w
  3564  043C  01AC               	clrf	(?___awtoft+1)
  3565  043D  07AC               	addwf	(?___awtoft+1)
  3566  043E  086D               	movf	(exp@exp),w
  3567  043F  01AB               	clrf	(?___awtoft)
  3568  0440  07AB               	addwf	(?___awtoft)
  3569                           
  3570  0441  160A  118A  26E4   	fcall	___awtoft
              120A  118A         
  3571  0446  1283               	bcf	status, 5	;RP0=0, select bank0
  3572  0447  1303               	bcf	status, 6	;RP1=0, select bank0
  3573  0448  082B               	movf	(0+(?___awtoft)),w
  3574  0449  00CC               	movwf	(?___ftsub)
  3575  044A  082C               	movf	(1+(?___awtoft)),w
  3576  044B  00CD               	movwf	(?___ftsub+1)
  3577  044C  082D               	movf	(2+(?___awtoft)),w
  3578  044D  00CE               	movwf	(?___ftsub+2)
  3579  044E  0866               	movf	(exp@x),w
  3580  044F  00CF               	movwf	0+(?___ftsub)+03h
  3581  0450  0867               	movf	(exp@x+1),w
  3582  0451  00D0               	movwf	1+(?___ftsub)+03h
  3583  0452  0868               	movf	(exp@x+2),w
  3584  0453  00D1               	movwf	2+(?___ftsub)+03h
  3585  0454  160A  118A  260B   	fcall	___ftsub
              120A  118A         
  3586  0459  1283               	bcf	status, 5	;RP0=0, select bank0
  3587  045A  1303               	bcf	status, 6	;RP1=0, select bank0
  3588  045B  084C               	movf	(0+(?___ftsub)),w
  3589  045C  00E6               	movwf	(exp@x)
  3590  045D  084D               	movf	(1+(?___ftsub)),w
  3591  045E  00E7               	movwf	(exp@x+1)
  3592  045F  084E               	movf	(2+(?___ftsub)),w
  3593  0460  00E8               	movwf	(exp@x+2)
  3594                           	line	49
  3595                           	
  3596  0461                     l7171:	
  3597  0461  0866               	movf	(exp@x),w
  3598  0462  00D6               	movwf	(?_eval_poly)
  3599  0463  0867               	movf	(exp@x+1),w
  3600  0464  00D7               	movwf	(?_eval_poly+1)
  3601  0465  0868               	movf	(exp@x+2),w
  3602  0466  00D8               	movwf	(?_eval_poly+2)
  3603  0467  3001               	movlw	((exp@coeff-__stringbase))&0ffh
  3604  0468  00E9               	movwf	(??_exp+0)+0
  3605  0469  0869               	movf	(??_exp+0)+0,w
  3606  046A  00D9               	movwf	(0+?_eval_poly+03h)
  3607  046B  3009               	movlw	low(09h)
  3608  046C  00DA               	movwf	0+(?_eval_poly)+04h
  3609  046D  3000               	movlw	high(09h)
  3610  046E  00DB               	movwf	(0+(?_eval_poly)+04h)+1
  3611  046F  120A  158A  22E6   	fcall	_eval_poly
              120A  118A         
  3612  0474  1283               	bcf	status, 5	;RP0=0, select bank0
  3613  0475  1303               	bcf	status, 6	;RP1=0, select bank0
  3614  0476  0856               	movf	(0+(?_eval_poly)),w
  3615  0477  00CC               	movwf	(?_ldexp)
  3616  0478  0857               	movf	(1+(?_eval_poly)),w
  3617  0479  00CD               	movwf	(?_ldexp+1)
  3618  047A  0858               	movf	(2+(?_eval_poly)),w
  3619  047B  00CE               	movwf	(?_ldexp+2)
  3620  047C  086E               	movf	(exp@exp+1),w
  3621  047D  01D0               	clrf	1+(?_ldexp)+03h
  3622  047E  07D0               	addwf	1+(?_ldexp)+03h
  3623  047F  086D               	movf	(exp@exp),w
  3624  0480  01CF               	clrf	0+(?_ldexp)+03h
  3625  0481  07CF               	addwf	0+(?_ldexp)+03h
  3626                           
  3627  0482  120A  158A  24B3   	fcall	_ldexp
              120A  118A         
  3628  0487  1283               	bcf	status, 5	;RP0=0, select bank0
  3629  0488  1303               	bcf	status, 6	;RP1=0, select bank0
  3630  0489  084C               	movf	(0+(?_ldexp)),w
  3631  048A  00E6               	movwf	(exp@x)
  3632  048B  084D               	movf	(1+(?_ldexp)),w
  3633  048C  00E7               	movwf	(exp@x+1)
  3634  048D  084E               	movf	(2+(?_ldexp)),w
  3635  048E  00E8               	movwf	(exp@x+2)
  3636                           	line	50
  3637                           	
  3638  048F                     l7173:	
  3639  048F  086F               	movf	(exp@sign),w
  3640  0490  1D03               	skipz
  3641  0491  2C93               	goto	u5440
  3642  0492  2CD3               	goto	l3226
  3643  0493                     u5440:
  3644  0493  2C9C               	goto	l7179
  3645                           	line	52
  3646                           	
  3647  0494                     l7175:	
  3648  0494  2C9C               	goto	l7179
  3649                           	
  3650  0495                     l7177:	
  3651  0495  3000               	movlw	0x0
  3652  0496  00EA               	movwf	(_exp$3544)
  3653  0497  3080               	movlw	0x80
  3654  0498  00EB               	movwf	(_exp$3544+1)
  3655  0499  307F               	movlw	0x7f
  3656  049A  00EC               	movwf	(_exp$3544+2)
  3657  049B  2CA2               	goto	l3231
  3658                           	
  3659  049C                     l3229:	
  3660                           	
  3661  049C                     l7179:	
  3662  049C  30FF               	movlw	0xff
  3663  049D  00EA               	movwf	(_exp$3544)
  3664  049E  307F               	movlw	0x7f
  3665  049F  00EB               	movwf	(_exp$3544+1)
  3666  04A0  307F               	movlw	0x7f
  3667  04A1  00EC               	movwf	(_exp$3544+2)
  3668                           	
  3669  04A2                     l3231:	
  3670  04A2  0868               	movf	(exp@x+2),w
  3671  04A3  066C               	xorwf	(_exp$3544+2),w
  3672  04A4  1D03               	skipz
  3673  04A5  2CAC               	goto	u5455
  3674  04A6  0867               	movf	(exp@x+1),w
  3675  04A7  066B               	xorwf	(_exp$3544+1),w
  3676  04A8  1D03               	skipz
  3677  04A9  2CAC               	goto	u5455
  3678  04AA  0866               	movf	(exp@x),w
  3679  04AB  066A               	xorwf	(_exp$3544),w
  3680  04AC                     u5455:
  3681  04AC  1D03               	skipz
  3682  04AD  2CAF               	goto	u5451
  3683  04AE  2CB0               	goto	u5450
  3684  04AF                     u5451:
  3685  04AF  2CB8               	goto	l7185
  3686  04B0                     u5450:
  3687                           	line	53
  3688                           	
  3689  04B0                     l7181:	
  3690  04B0  3000               	movlw	0x0
  3691  04B1  00E6               	movwf	(?_exp)
  3692  04B2  3000               	movlw	0x0
  3693  04B3  00E7               	movwf	(?_exp+1)
  3694  04B4  3000               	movlw	0x0
  3695  04B5  00E8               	movwf	(?_exp+2)
  3696  04B6  2CD3               	goto	l3218
  3697                           	
  3698  04B7                     l7183:	
  3699  04B7  2CD3               	goto	l3218
  3700                           	
  3701  04B8                     l3227:	
  3702                           	line	54
  3703                           	
  3704  04B8                     l7185:	
  3705  04B8  0866               	movf	(exp@x),w
  3706  04B9  00A8               	movwf	(?___ftdiv)
  3707  04BA  0867               	movf	(exp@x+1),w
  3708  04BB  00A9               	movwf	(?___ftdiv+1)
  3709  04BC  0868               	movf	(exp@x+2),w
  3710  04BD  00AA               	movwf	(?___ftdiv+2)
  3711  04BE  3000               	movlw	0x0
  3712  04BF  00AB               	movwf	0+(?___ftdiv)+03h
  3713  04C0  3080               	movlw	0x80
  3714  04C1  00AC               	movwf	1+(?___ftdiv)+03h
  3715  04C2  303F               	movlw	0x3f
  3716  04C3  00AD               	movwf	2+(?___ftdiv)+03h
  3717  04C4  120A  158A  2577   	fcall	___ftdiv
              120A  118A         
  3718  04C9  1283               	bcf	status, 5	;RP0=0, select bank0
  3719  04CA  1303               	bcf	status, 6	;RP1=0, select bank0
  3720  04CB  0828               	movf	(0+(?___ftdiv)),w
  3721  04CC  00E6               	movwf	(?_exp)
  3722  04CD  0829               	movf	(1+(?___ftdiv)),w
  3723  04CE  00E7               	movwf	(?_exp+1)
  3724  04CF  082A               	movf	(2+(?___ftdiv)),w
  3725  04D0  00E8               	movwf	(?_exp+2)
  3726  04D1  2CD3               	goto	l3218
  3727                           	
  3728  04D2                     l7187:	
  3729  04D2  2CD3               	goto	l3218
  3730                           	line	55
  3731                           	
  3732  04D3                     l3226:	
  3733                           	line	56
  3734                           	line	57
  3735                           	
  3736  04D3                     l3218:	
  3737  04D3  0008               	return
  3738                           	opt stack 0
  3739                           GLOBAL	__end_of_exp
  3740  04D4                     	__end_of_exp:
  3741 ;; =============== function _exp ends ============
  3742                           
  3743                           	signat	_exp,4219
  3744                           	global	_log
  3745                           psect	text1240,local,class=CODE,delta=2
  3746                           global __ptext1240
  3747  0E3F                     __ptext1240:
  3748                           
  3749 ;; *************** function _log *****************
  3750 ;; Defined at:
  3751 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  x               3   64[BANK0 ] unsigned char 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  exp             2   68[BANK0 ] int 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  3   64[BANK0 ] int 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       3       0       0       0
  3766 ;;      Locals:         0       2       0       0       0
  3767 ;;      Temps:          0       1       0       0       0
  3768 ;;      Totals:         0       6       0       0       0
  3769 ;;Total ram usage:        6 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    4
  3772 ;; This function calls:
  3773 ;;		___ftge
  3774 ;;		_frexp
  3775 ;;		___ftmul
  3776 ;;		___ftadd
  3777 ;;		_eval_poly
  3778 ;;		___awtoft
  3779 ;; This function is called by:
  3780 ;;		_pow
  3781 ;;		_log10
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           psect	text1240
  3785                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\log.c"
  3786                           	line	6
  3787                           	global	__size_of_log
  3788  00D3                     	__size_of_log	equ	__end_of_log-_log
  3789                           	
  3790  0E3F                     _log:	
  3791                           	opt	stack 1
  3792                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3793                           	line	24
  3794                           	
  3795  0E3F                     l7115:	
  3796  0E3F  1283               	bcf	status, 5	;RP0=0, select bank0
  3797  0E40  1303               	bcf	status, 6	;RP1=0, select bank0
  3798  0E41  0860               	movf	(log@x),w
  3799  0E42  00A0               	movwf	(?___ftge)
  3800  0E43  0861               	movf	(log@x+1),w
  3801  0E44  00A1               	movwf	(?___ftge+1)
  3802  0E45  0862               	movf	(log@x+2),w
  3803  0E46  00A2               	movwf	(?___ftge+2)
  3804  0E47  3000               	movlw	0x0
  3805  0E48  00A3               	movwf	0+(?___ftge)+03h
  3806  0E49  3000               	movlw	0x0
  3807  0E4A  00A4               	movwf	1+(?___ftge)+03h
  3808  0E4B  3000               	movlw	0x0
  3809  0E4C  00A5               	movwf	2+(?___ftge)+03h
  3810  0E4D  120A  158A  21FB   	fcall	___ftge
              120A  158A         
  3811  0E52  1803               	btfsc	status,0
  3812  0E53  2E55               	goto	u5381
  3813  0E54  2E56               	goto	u5380
  3814  0E55                     u5381:
  3815  0E55  2E64               	goto	l7121
  3816  0E56                     u5380:
  3817                           	line	25
  3818                           	
  3819  0E56                     l7117:	
  3820  0E56  3021               	movlw	low(021h)
  3821  0E57  00F8               	movwf	(_errno)
  3822  0E58  3000               	movlw	high(021h)
  3823  0E59  00F9               	movwf	((_errno))+1
  3824                           	line	26
  3825  0E5A  3000               	movlw	0x0
  3826  0E5B  1283               	bcf	status, 5	;RP0=0, select bank0
  3827  0E5C  1303               	bcf	status, 6	;RP1=0, select bank0
  3828  0E5D  00E0               	movwf	(?_log)
  3829  0E5E  3000               	movlw	0x0
  3830  0E5F  00E1               	movwf	(?_log+1)
  3831  0E60  3000               	movlw	0x0
  3832  0E61  00E2               	movwf	(?_log+2)
  3833  0E62  2F11               	goto	l3252
  3834                           	
  3835  0E63                     l7119:	
  3836  0E63  2F11               	goto	l3252
  3837                           	line	27
  3838                           	
  3839  0E64                     l3251:	
  3840                           	line	28
  3841                           	
  3842  0E64                     l7121:	
  3843  0E64  1283               	bcf	status, 5	;RP0=0, select bank0
  3844  0E65  1303               	bcf	status, 6	;RP1=0, select bank0
  3845  0E66  0862               	movf	(log@x+2),w
  3846  0E67  0461               	iorwf	(log@x+1),w
  3847  0E68  0460               	iorwf	(log@x),w
  3848  0E69  1D03               	skipz
  3849  0E6A  2E6C               	goto	u5391
  3850  0E6B  2E6D               	goto	u5390
  3851  0E6C                     u5391:
  3852  0E6C  2E79               	goto	l7127
  3853  0E6D                     u5390:
  3854                           	line	29
  3855                           	
  3856  0E6D                     l7123:	
  3857  0E6D  3022               	movlw	low(022h)
  3858  0E6E  00F8               	movwf	(_errno)
  3859  0E6F  3000               	movlw	high(022h)
  3860  0E70  00F9               	movwf	((_errno))+1
  3861                           	line	30
  3862  0E71  3000               	movlw	0x0
  3863  0E72  00E0               	movwf	(?_log)
  3864  0E73  3000               	movlw	0x0
  3865  0E74  00E1               	movwf	(?_log+1)
  3866  0E75  3000               	movlw	0x0
  3867  0E76  00E2               	movwf	(?_log+2)
  3868  0E77  2F11               	goto	l3252
  3869                           	
  3870  0E78                     l7125:	
  3871  0E78  2F11               	goto	l3252
  3872                           	line	31
  3873                           	
  3874  0E79                     l3253:	
  3875                           	line	32
  3876                           	
  3877  0E79                     l7127:	
  3878  0E79  3000               	movlw	0x0
  3879  0E7A  00BF               	movwf	(?___ftadd)
  3880  0E7B  3080               	movlw	0x80
  3881  0E7C  00C0               	movwf	(?___ftadd+1)
  3882  0E7D  30BF               	movlw	0xbf
  3883  0E7E  00C1               	movwf	(?___ftadd+2)
  3884  0E7F  3000               	movlw	0x0
  3885  0E80  00AF               	movwf	(?___ftmul)
  3886  0E81  3000               	movlw	0x0
  3887  0E82  00B0               	movwf	(?___ftmul+1)
  3888  0E83  3040               	movlw	0x40
  3889  0E84  00B1               	movwf	(?___ftmul+2)
  3890  0E85  3064               	movlw	(log@exp)&0ffh
  3891  0E86  00E3               	movwf	(??_log+0)+0
  3892  0E87  0863               	movf	(??_log+0)+0,w
  3893  0E88  00A3               	movwf	(0+?_frexp+03h)
  3894  0E89  0860               	movf	(log@x),w
  3895  0E8A  00A0               	movwf	(?_frexp)
  3896  0E8B  0861               	movf	(log@x+1),w
  3897  0E8C  00A1               	movwf	(?_frexp+1)
  3898  0E8D  0862               	movf	(log@x+2),w
  3899  0E8E  00A2               	movwf	(?_frexp+2)
  3900  0E8F  120A  158A  2068   	fcall	_frexp
              120A  158A         
  3901  0E94  1283               	bcf	status, 5	;RP0=0, select bank0
  3902  0E95  1303               	bcf	status, 6	;RP1=0, select bank0
  3903  0E96  0820               	movf	(0+(?_frexp)),w
  3904  0E97  00B2               	movwf	0+(?___ftmul)+03h
  3905  0E98  0821               	movf	(1+(?_frexp)),w
  3906  0E99  00B3               	movwf	1+(?___ftmul)+03h
  3907  0E9A  0822               	movf	(2+(?_frexp)),w
  3908  0E9B  00B4               	movwf	2+(?___ftmul)+03h
  3909  0E9C  120A  158A  2712   	fcall	___ftmul
              120A  158A         
  3910  0EA1  1283               	bcf	status, 5	;RP0=0, select bank0
  3911  0EA2  1303               	bcf	status, 6	;RP1=0, select bank0
  3912  0EA3  082F               	movf	(0+(?___ftmul)),w
  3913  0EA4  00C2               	movwf	0+(?___ftadd)+03h
  3914  0EA5  0830               	movf	(1+(?___ftmul)),w
  3915  0EA6  00C3               	movwf	1+(?___ftadd)+03h
  3916  0EA7  0831               	movf	(2+(?___ftmul)),w
  3917  0EA8  00C4               	movwf	2+(?___ftadd)+03h
  3918  0EA9  120A  118A  262E   	fcall	___ftadd
              120A  158A         
  3919  0EAE  1283               	bcf	status, 5	;RP0=0, select bank0
  3920  0EAF  1303               	bcf	status, 6	;RP1=0, select bank0
  3921  0EB0  083F               	movf	(0+(?___ftadd)),w
  3922  0EB1  00E0               	movwf	(log@x)
  3923  0EB2  0840               	movf	(1+(?___ftadd)),w
  3924  0EB3  00E1               	movwf	(log@x+1)
  3925  0EB4  0841               	movf	(2+(?___ftadd)),w
  3926  0EB5  00E2               	movwf	(log@x+2)
  3927                           	line	33
  3928                           	
  3929  0EB6                     l7129:	
  3930  0EB6  30FF               	movlw	low(-1)
  3931  0EB7  07E4               	addwf	(log@exp),f
  3932  0EB8  1803               	skipnc
  3933  0EB9  0AE5               	incf	(log@exp+1),f
  3934  0EBA  30FF               	movlw	high(-1)
  3935  0EBB  07E5               	addwf	(log@exp+1),f
  3936                           	line	34
  3937                           	
  3938  0EBC                     l7131:	
  3939  0EBC  0860               	movf	(log@x),w
  3940  0EBD  00D6               	movwf	(?_eval_poly)
  3941  0EBE  0861               	movf	(log@x+1),w
  3942  0EBF  00D7               	movwf	(?_eval_poly+1)
  3943  0EC0  0862               	movf	(log@x+2),w
  3944  0EC1  00D8               	movwf	(?_eval_poly+2)
  3945  0EC2  301F               	movlw	((log@coeff-__stringbase))&0ffh
  3946  0EC3  00E3               	movwf	(??_log+0)+0
  3947  0EC4  0863               	movf	(??_log+0)+0,w
  3948  0EC5  00D9               	movwf	(0+?_eval_poly+03h)
  3949  0EC6  3008               	movlw	low(08h)
  3950  0EC7  00DA               	movwf	0+(?_eval_poly)+04h
  3951  0EC8  3000               	movlw	high(08h)
  3952  0EC9  00DB               	movwf	(0+(?_eval_poly)+04h)+1
  3953  0ECA  120A  158A  22E6   	fcall	_eval_poly
              120A  158A         
  3954  0ECF  1283               	bcf	status, 5	;RP0=0, select bank0
  3955  0ED0  1303               	bcf	status, 6	;RP1=0, select bank0
  3956  0ED1  0856               	movf	(0+(?_eval_poly)),w
  3957  0ED2  00E0               	movwf	(log@x)
  3958  0ED3  0857               	movf	(1+(?_eval_poly)),w
  3959  0ED4  00E1               	movwf	(log@x+1)
  3960  0ED5  0858               	movf	(2+(?_eval_poly)),w
  3961  0ED6  00E2               	movwf	(log@x+2)
  3962                           	line	35
  3963                           	
  3964  0ED7                     l7133:	
  3965  0ED7  0860               	movf	(log@x),w
  3966  0ED8  00BF               	movwf	(?___ftadd)
  3967  0ED9  0861               	movf	(log@x+1),w
  3968  0EDA  00C0               	movwf	(?___ftadd+1)
  3969  0EDB  0862               	movf	(log@x+2),w
  3970  0EDC  00C1               	movwf	(?___ftadd+2)
  3971  0EDD  3072               	movlw	0x72
  3972  0EDE  00AF               	movwf	(?___ftmul)
  3973  0EDF  3031               	movlw	0x31
  3974  0EE0  00B0               	movwf	(?___ftmul+1)
  3975  0EE1  303F               	movlw	0x3f
  3976  0EE2  00B1               	movwf	(?___ftmul+2)
  3977  0EE3  0865               	movf	(log@exp+1),w
  3978  0EE4  01AC               	clrf	(?___awtoft+1)
  3979  0EE5  07AC               	addwf	(?___awtoft+1)
  3980  0EE6  0864               	movf	(log@exp),w
  3981  0EE7  01AB               	clrf	(?___awtoft)
  3982  0EE8  07AB               	addwf	(?___awtoft)
  3983                           
  3984  0EE9  160A  118A  26E4   	fcall	___awtoft
              120A  158A         
  3985  0EEE  1283               	bcf	status, 5	;RP0=0, select bank0
  3986  0EEF  1303               	bcf	status, 6	;RP1=0, select bank0
  3987  0EF0  082B               	movf	(0+(?___awtoft)),w
  3988  0EF1  00B2               	movwf	0+(?___ftmul)+03h
  3989  0EF2  082C               	movf	(1+(?___awtoft)),w
  3990  0EF3  00B3               	movwf	1+(?___ftmul)+03h
  3991  0EF4  082D               	movf	(2+(?___awtoft)),w
  3992  0EF5  00B4               	movwf	2+(?___ftmul)+03h
  3993  0EF6  120A  158A  2712   	fcall	___ftmul
              120A  158A         
  3994  0EFB  1283               	bcf	status, 5	;RP0=0, select bank0
  3995  0EFC  1303               	bcf	status, 6	;RP1=0, select bank0
  3996  0EFD  082F               	movf	(0+(?___ftmul)),w
  3997  0EFE  00C2               	movwf	0+(?___ftadd)+03h
  3998  0EFF  0830               	movf	(1+(?___ftmul)),w
  3999  0F00  00C3               	movwf	1+(?___ftadd)+03h
  4000  0F01  0831               	movf	(2+(?___ftmul)),w
  4001  0F02  00C4               	movwf	2+(?___ftadd)+03h
  4002  0F03  120A  118A  262E   	fcall	___ftadd
              120A  158A         
  4003  0F08  1283               	bcf	status, 5	;RP0=0, select bank0
  4004  0F09  1303               	bcf	status, 6	;RP1=0, select bank0
  4005  0F0A  083F               	movf	(0+(?___ftadd)),w
  4006  0F0B  00E0               	movwf	(?_log)
  4007  0F0C  0840               	movf	(1+(?___ftadd)),w
  4008  0F0D  00E1               	movwf	(?_log+1)
  4009  0F0E  0841               	movf	(2+(?___ftadd)),w
  4010  0F0F  00E2               	movwf	(?_log+2)
  4011  0F10  2F11               	goto	l3252
  4012                           	
  4013  0F11                     l7135:	
  4014                           	line	36
  4015                           	
  4016  0F11                     l3252:	
  4017  0F11  0008               	return
  4018                           	opt stack 0
  4019                           GLOBAL	__end_of_log
  4020  0F12                     	__end_of_log:
  4021 ;; =============== function _log ends ============
  4022                           
  4023                           	signat	_log,4219
  4024                           	global	_eval_poly
  4025                           psect	text1241,local,class=CODE,delta=2
  4026                           global __ptext1241
  4027  0AE6                     __ptext1241:
  4028                           
  4029 ;; *************** function _eval_poly *****************
  4030 ;; Defined at:
  4031 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\evalpoly.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  x               3   54[BANK0 ] int 
  4034 ;;  d               1   57[BANK0 ] PTR const 
  4035 ;;		 -> log@coeff(27), exp@coeff(30), 
  4036 ;;  n               2   58[BANK0 ] int 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  res             3   61[BANK0 ] int 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  3   54[BANK0 ] int 
  4041 ;; Registers used:
  4042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4048 ;;      Params:         0       6       0       0       0
  4049 ;;      Locals:         0       3       0       0       0
  4050 ;;      Temps:          0       1       0       0       0
  4051 ;;      Totals:         0      10       0       0       0
  4052 ;;Total ram usage:       10 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    3
  4055 ;; This function calls:
  4056 ;;		___bmul
  4057 ;;		___ftmul
  4058 ;;		___ftadd
  4059 ;; This function is called by:
  4060 ;;		_exp
  4061 ;;		_log
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           psect	text1241
  4065                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\evalpoly.c"
  4066                           	line	5
  4067                           	global	__size_of_eval_poly
  4068  007F                     	__size_of_eval_poly	equ	__end_of_eval_poly-_eval_poly
  4069                           	
  4070  0AE6                     _eval_poly:	
  4071                           	opt	stack 1
  4072                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4073                           	line	8
  4074                           	
  4075  0AE6                     l7105:	
  4076  0AE6  3003               	movlw	(03h)
  4077  0AE7  1283               	bcf	status, 5	;RP0=0, select bank0
  4078  0AE8  1303               	bcf	status, 6	;RP1=0, select bank0
  4079  0AE9  00DC               	movwf	(??_eval_poly+0)+0
  4080  0AEA  085C               	movf	(??_eval_poly+0)+0,w
  4081  0AEB  00F4               	movwf	(?___bmul)
  4082  0AEC  085A               	movf	(eval_poly@n),w
  4083  0AED  160A  118A  25F1   	fcall	___bmul
              120A  158A         
  4084  0AF2  1283               	bcf	status, 5	;RP0=0, select bank0
  4085  0AF3  1303               	bcf	status, 6	;RP1=0, select bank0
  4086  0AF4  0759               	addwf	(eval_poly@d),w
  4087  0AF5  0084               	movwf	fsr0
  4088  0AF6  120A  158A  200A   	fcall	stringdir
              120A  158A         
  4089  0AFB  00DD               	movwf	(eval_poly@res)
  4090  0AFC  120A  158A  200A   	fcall	stringdir
              120A  158A         
  4091  0B01  00DE               	movwf	(eval_poly@res+1)
  4092  0B02  120A  158A  200A   	fcall	stringdir
              120A  158A         
  4093  0B07  00DF               	movwf	(eval_poly@res+2)
  4094                           	line	9
  4095  0B08  2B56               	goto	l7109
  4096                           	
  4097  0B09                     l3301:	
  4098                           	line	10
  4099                           	
  4100  0B09                     l7107:	
  4101  0B09  3003               	movlw	(03h)
  4102  0B0A  00DC               	movwf	(??_eval_poly+0)+0
  4103  0B0B  085C               	movf	(??_eval_poly+0)+0,w
  4104  0B0C  00F4               	movwf	(?___bmul)
  4105  0B0D  30FF               	movlw	low(-1)
  4106  0B0E  07DA               	addwf	(eval_poly@n),f
  4107  0B0F  1803               	skipnc
  4108  0B10  0ADB               	incf	(eval_poly@n+1),f
  4109  0B11  30FF               	movlw	high(-1)
  4110  0B12  07DB               	addwf	(eval_poly@n+1),f
  4111  0B13  085A               	movf	((eval_poly@n)),w
  4112  0B14  160A  118A  25F1   	fcall	___bmul
              120A  158A         
  4113  0B19  1283               	bcf	status, 5	;RP0=0, select bank0
  4114  0B1A  1303               	bcf	status, 6	;RP1=0, select bank0
  4115  0B1B  0759               	addwf	(eval_poly@d),w
  4116  0B1C  0084               	movwf	fsr0
  4117  0B1D  120A  158A  200A   	fcall	stringdir
              120A  158A         
  4118  0B22  00BF               	movwf	(?___ftadd)
  4119  0B23  120A  158A  200A   	fcall	stringdir
              120A  158A         
  4120  0B28  00C0               	movwf	(?___ftadd+1)
  4121  0B29  120A  158A  200A   	fcall	stringdir
              120A  158A         
  4122  0B2E  00C1               	movwf	(?___ftadd+2)
  4123  0B2F  085D               	movf	(eval_poly@res),w
  4124  0B30  00AF               	movwf	(?___ftmul)
  4125  0B31  085E               	movf	(eval_poly@res+1),w
  4126  0B32  00B0               	movwf	(?___ftmul+1)
  4127  0B33  085F               	movf	(eval_poly@res+2),w
  4128  0B34  00B1               	movwf	(?___ftmul+2)
  4129  0B35  0856               	movf	(eval_poly@x),w
  4130  0B36  00B2               	movwf	0+(?___ftmul)+03h
  4131  0B37  0857               	movf	(eval_poly@x+1),w
  4132  0B38  00B3               	movwf	1+(?___ftmul)+03h
  4133  0B39  0858               	movf	(eval_poly@x+2),w
  4134  0B3A  00B4               	movwf	2+(?___ftmul)+03h
  4135  0B3B  120A  158A  2712   	fcall	___ftmul
              120A  158A         
  4136  0B40  1283               	bcf	status, 5	;RP0=0, select bank0
  4137  0B41  1303               	bcf	status, 6	;RP1=0, select bank0
  4138  0B42  082F               	movf	(0+(?___ftmul)),w
  4139  0B43  00C2               	movwf	0+(?___ftadd)+03h
  4140  0B44  0830               	movf	(1+(?___ftmul)),w
  4141  0B45  00C3               	movwf	1+(?___ftadd)+03h
  4142  0B46  0831               	movf	(2+(?___ftmul)),w
  4143  0B47  00C4               	movwf	2+(?___ftadd)+03h
  4144  0B48  120A  118A  262E   	fcall	___ftadd
              120A  158A         
  4145  0B4D  1283               	bcf	status, 5	;RP0=0, select bank0
  4146  0B4E  1303               	bcf	status, 6	;RP1=0, select bank0
  4147  0B4F  083F               	movf	(0+(?___ftadd)),w
  4148  0B50  00DD               	movwf	(eval_poly@res)
  4149  0B51  0840               	movf	(1+(?___ftadd)),w
  4150  0B52  00DE               	movwf	(eval_poly@res+1)
  4151  0B53  0841               	movf	(2+(?___ftadd)),w
  4152  0B54  00DF               	movwf	(eval_poly@res+2)
  4153  0B55  2B56               	goto	l7109
  4154                           	
  4155  0B56                     l3300:	
  4156                           	line	9
  4157                           	
  4158  0B56                     l7109:	
  4159  0B56  085B               	movf	((eval_poly@n+1)),w
  4160  0B57  045A               	iorwf	((eval_poly@n)),w
  4161  0B58  1D03               	skipz
  4162  0B59  2B5B               	goto	u5371
  4163  0B5A  2B5C               	goto	u5370
  4164  0B5B                     u5371:
  4165  0B5B  2B09               	goto	l7107
  4166  0B5C                     u5370:
  4167  0B5C  2B5D               	goto	l7111
  4168                           	
  4169  0B5D                     l3302:	
  4170                           	line	11
  4171                           	
  4172  0B5D                     l7111:	
  4173  0B5D  085D               	movf	(eval_poly@res),w
  4174  0B5E  00D6               	movwf	(?_eval_poly)
  4175  0B5F  085E               	movf	(eval_poly@res+1),w
  4176  0B60  00D7               	movwf	(?_eval_poly+1)
  4177  0B61  085F               	movf	(eval_poly@res+2),w
  4178  0B62  00D8               	movwf	(?_eval_poly+2)
  4179  0B63  2B64               	goto	l3303
  4180                           	
  4181  0B64                     l7113:	
  4182                           	line	12
  4183                           	
  4184  0B64                     l3303:	
  4185  0B64  0008               	return
  4186                           	opt stack 0
  4187                           GLOBAL	__end_of_eval_poly
  4188  0B65                     	__end_of_eval_poly:
  4189 ;; =============== function _eval_poly ends ============
  4190                           
  4191                           	signat	_eval_poly,12411
  4192                           	global	_floor
  4193                           psect	text1242,local,class=CODE,delta=2
  4194                           global __ptext1242
  4195  0C0B                     __ptext1242:
  4196                           
  4197 ;; *************** function _floor *****************
  4198 ;; Defined at:
  4199 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\floor.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  x               3   44[BANK0 ] int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  i               3   48[BANK0 ] int 
  4204 ;;  expon           2   51[BANK0 ] int 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  3   44[BANK0 ] int 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4214 ;;      Params:         0       3       0       0       0
  4215 ;;      Locals:         0       5       0       0       0
  4216 ;;      Temps:          0       1       0       0       0
  4217 ;;      Totals:         0       9       0       0       0
  4218 ;;Total ram usage:        9 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    3
  4221 ;; This function calls:
  4222 ;;		_frexp
  4223 ;;		___ftge
  4224 ;;		___fttol
  4225 ;;		___altoft
  4226 ;;		___ftadd
  4227 ;; This function is called by:
  4228 ;;		_exp
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           psect	text1242
  4232                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\floor.c"
  4233                           	line	14
  4234                           	global	__size_of_floor
  4235  00A8                     	__size_of_floor	equ	__end_of_floor-_floor
  4236                           	
  4237  0C0B                     _floor:	
  4238                           	opt	stack 1
  4239                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4240                           	line	18
  4241                           	
  4242  0C0B                     l7077:	
  4243  0C0B  1283               	bcf	status, 5	;RP0=0, select bank0
  4244  0C0C  1303               	bcf	status, 6	;RP1=0, select bank0
  4245  0C0D  084C               	movf	(floor@x),w
  4246  0C0E  00A0               	movwf	(?_frexp)
  4247  0C0F  084D               	movf	(floor@x+1),w
  4248  0C10  00A1               	movwf	(?_frexp+1)
  4249  0C11  084E               	movf	(floor@x+2),w
  4250  0C12  00A2               	movwf	(?_frexp+2)
  4251  0C13  3053               	movlw	(floor@expon)&0ffh
  4252  0C14  00CF               	movwf	(??_floor+0)+0
  4253  0C15  084F               	movf	(??_floor+0)+0,w
  4254  0C16  00A3               	movwf	(0+?_frexp+03h)
  4255  0C17  120A  158A  2068   	fcall	_frexp
              120A  158A         
  4256                           	line	19
  4257                           	
  4258  0C1C                     l7079:	
  4259  0C1C  1283               	bcf	status, 5	;RP0=0, select bank0
  4260  0C1D  1303               	bcf	status, 6	;RP1=0, select bank0
  4261  0C1E  1FD4               	btfss	(floor@expon+1),7
  4262  0C1F  2C21               	goto	u5331
  4263  0C20  2C22               	goto	u5330
  4264  0C21                     u5331:
  4265  0C21  2C4B               	goto	l7091
  4266  0C22                     u5330:
  4267                           	line	20
  4268                           	
  4269  0C22                     l7081:	
  4270  0C22  084C               	movf	(floor@x),w
  4271  0C23  00A0               	movwf	(?___ftge)
  4272  0C24  084D               	movf	(floor@x+1),w
  4273  0C25  00A1               	movwf	(?___ftge+1)
  4274  0C26  084E               	movf	(floor@x+2),w
  4275  0C27  00A2               	movwf	(?___ftge+2)
  4276  0C28  3000               	movlw	0x0
  4277  0C29  00A3               	movwf	0+(?___ftge)+03h
  4278  0C2A  3000               	movlw	0x0
  4279  0C2B  00A4               	movwf	1+(?___ftge)+03h
  4280  0C2C  3000               	movlw	0x0
  4281  0C2D  00A5               	movwf	2+(?___ftge)+03h
  4282  0C2E  120A  158A  21FB   	fcall	___ftge
              120A  158A         
  4283  0C33  1803               	btfsc	status,0
  4284  0C34  2C36               	goto	u5341
  4285  0C35  2C37               	goto	u5340
  4286  0C36                     u5341:
  4287  0C36  2C41               	goto	l7087
  4288  0C37                     u5340:
  4289                           	line	21
  4290                           	
  4291  0C37                     l7083:	
  4292  0C37  3000               	movlw	0x0
  4293  0C38  1283               	bcf	status, 5	;RP0=0, select bank0
  4294  0C39  1303               	bcf	status, 6	;RP1=0, select bank0
  4295  0C3A  00CC               	movwf	(?_floor)
  4296  0C3B  3080               	movlw	0x80
  4297  0C3C  00CD               	movwf	(?_floor+1)
  4298  0C3D  30BF               	movlw	0xbf
  4299  0C3E  00CE               	movwf	(?_floor+2)
  4300  0C3F  2CB2               	goto	l3238
  4301                           	
  4302  0C40                     l7085:	
  4303  0C40  2CB2               	goto	l3238
  4304                           	
  4305  0C41                     l3237:	
  4306                           	line	22
  4307                           	
  4308  0C41                     l7087:	
  4309  0C41  3000               	movlw	0x0
  4310  0C42  1283               	bcf	status, 5	;RP0=0, select bank0
  4311  0C43  1303               	bcf	status, 6	;RP1=0, select bank0
  4312  0C44  00CC               	movwf	(?_floor)
  4313  0C45  3000               	movlw	0x0
  4314  0C46  00CD               	movwf	(?_floor+1)
  4315  0C47  3000               	movlw	0x0
  4316  0C48  00CE               	movwf	(?_floor+2)
  4317  0C49  2CB2               	goto	l3238
  4318                           	
  4319  0C4A                     l7089:	
  4320  0C4A  2CB2               	goto	l3238
  4321                           	line	23
  4322                           	
  4323  0C4B                     l3236:	
  4324                           	line	24
  4325                           	
  4326  0C4B                     l7091:	
  4327  0C4B  3000               	movlw	high(015h)
  4328  0C4C  0254               	subwf	(floor@expon+1),w
  4329  0C4D  3015               	movlw	low(015h)
  4330  0C4E  1903               	skipnz
  4331  0C4F  0253               	subwf	(floor@expon),w
  4332  0C50  1C03               	skipc
  4333  0C51  2C53               	goto	u5351
  4334  0C52  2C54               	goto	u5350
  4335  0C53                     u5351:
  4336  0C53  2C55               	goto	l7095
  4337  0C54                     u5350:
  4338                           	line	25
  4339                           	
  4340  0C54                     l7093:	
  4341  0C54  2CB2               	goto	l3238
  4342                           	
  4343  0C55                     l3239:	
  4344                           	line	26
  4345                           	
  4346  0C55                     l7095:	
  4347  0C55  084C               	movf	(floor@x),w
  4348  0C56  00A0               	movwf	(?___fttol)
  4349  0C57  084D               	movf	(floor@x+1),w
  4350  0C58  00A1               	movwf	(?___fttol+1)
  4351  0C59  084E               	movf	(floor@x+2),w
  4352  0C5A  00A2               	movwf	(?___fttol+2)
  4353  0C5B  120A  158A  2365   	fcall	___fttol
              120A  158A         
  4354  0C60  1283               	bcf	status, 5	;RP0=0, select bank0
  4355  0C61  1303               	bcf	status, 6	;RP1=0, select bank0
  4356  0C62  0823               	movf	(3+(?___fttol)),w
  4357  0C63  00B1               	movwf	(?___altoft+3)
  4358  0C64  0822               	movf	(2+(?___fttol)),w
  4359  0C65  00B0               	movwf	(?___altoft+2)
  4360  0C66  0821               	movf	(1+(?___fttol)),w
  4361  0C67  00AF               	movwf	(?___altoft+1)
  4362  0C68  0820               	movf	(0+(?___fttol)),w
  4363  0C69  00AE               	movwf	(?___altoft)
  4364                           
  4365  0C6A  120A  158A  20B4   	fcall	___altoft
              120A  158A         
  4366  0C6F  1283               	bcf	status, 5	;RP0=0, select bank0
  4367  0C70  1303               	bcf	status, 6	;RP1=0, select bank0
  4368  0C71  082E               	movf	(0+(?___altoft)),w
  4369  0C72  00D0               	movwf	(floor@i)
  4370  0C73  082F               	movf	(1+(?___altoft)),w
  4371  0C74  00D1               	movwf	(floor@i+1)
  4372  0C75  0830               	movf	(2+(?___altoft)),w
  4373  0C76  00D2               	movwf	(floor@i+2)
  4374                           	line	27
  4375  0C77  084C               	movf	(floor@x),w
  4376  0C78  00A0               	movwf	(?___ftge)
  4377  0C79  084D               	movf	(floor@x+1),w
  4378  0C7A  00A1               	movwf	(?___ftge+1)
  4379  0C7B  084E               	movf	(floor@x+2),w
  4380  0C7C  00A2               	movwf	(?___ftge+2)
  4381  0C7D  0850               	movf	(floor@i),w
  4382  0C7E  00A3               	movwf	0+(?___ftge)+03h
  4383  0C7F  0851               	movf	(floor@i+1),w
  4384  0C80  00A4               	movwf	1+(?___ftge)+03h
  4385  0C81  0852               	movf	(floor@i+2),w
  4386  0C82  00A5               	movwf	2+(?___ftge)+03h
  4387  0C83  120A  158A  21FB   	fcall	___ftge
              120A  158A         
  4388  0C88  1803               	btfsc	status,0
  4389  0C89  2C8B               	goto	u5361
  4390  0C8A  2C8C               	goto	u5360
  4391  0C8B                     u5361:
  4392  0C8B  2CA9               	goto	l7101
  4393  0C8C                     u5360:
  4394                           	line	28
  4395                           	
  4396  0C8C                     l7097:	
  4397  0C8C  3000               	movlw	0x0
  4398  0C8D  1283               	bcf	status, 5	;RP0=0, select bank0
  4399  0C8E  1303               	bcf	status, 6	;RP1=0, select bank0
  4400  0C8F  00BF               	movwf	(?___ftadd)
  4401  0C90  3080               	movlw	0x80
  4402  0C91  00C0               	movwf	(?___ftadd+1)
  4403  0C92  30BF               	movlw	0xbf
  4404  0C93  00C1               	movwf	(?___ftadd+2)
  4405  0C94  0850               	movf	(floor@i),w
  4406  0C95  00C2               	movwf	0+(?___ftadd)+03h
  4407  0C96  0851               	movf	(floor@i+1),w
  4408  0C97  00C3               	movwf	1+(?___ftadd)+03h
  4409  0C98  0852               	movf	(floor@i+2),w
  4410  0C99  00C4               	movwf	2+(?___ftadd)+03h
  4411  0C9A  120A  118A  262E   	fcall	___ftadd
              120A  158A         
  4412  0C9F  1283               	bcf	status, 5	;RP0=0, select bank0
  4413  0CA0  1303               	bcf	status, 6	;RP1=0, select bank0
  4414  0CA1  083F               	movf	(0+(?___ftadd)),w
  4415  0CA2  00CC               	movwf	(?_floor)
  4416  0CA3  0840               	movf	(1+(?___ftadd)),w
  4417  0CA4  00CD               	movwf	(?_floor+1)
  4418  0CA5  0841               	movf	(2+(?___ftadd)),w
  4419  0CA6  00CE               	movwf	(?_floor+2)
  4420  0CA7  2CB2               	goto	l3238
  4421                           	
  4422  0CA8                     l7099:	
  4423  0CA8  2CB2               	goto	l3238
  4424                           	
  4425  0CA9                     l3240:	
  4426                           	line	29
  4427                           	
  4428  0CA9                     l7101:	
  4429  0CA9  1283               	bcf	status, 5	;RP0=0, select bank0
  4430  0CAA  1303               	bcf	status, 6	;RP1=0, select bank0
  4431  0CAB  0850               	movf	(floor@i),w
  4432  0CAC  00CC               	movwf	(?_floor)
  4433  0CAD  0851               	movf	(floor@i+1),w
  4434  0CAE  00CD               	movwf	(?_floor+1)
  4435  0CAF  0852               	movf	(floor@i+2),w
  4436  0CB0  00CE               	movwf	(?_floor+2)
  4437  0CB1  2CB2               	goto	l3238
  4438                           	
  4439  0CB2                     l7103:	
  4440                           	line	30
  4441                           	
  4442  0CB2                     l3238:	
  4443  0CB2  0008               	return
  4444                           	opt stack 0
  4445                           GLOBAL	__end_of_floor
  4446  0CB3                     	__end_of_floor:
  4447 ;; =============== function _floor ends ============
  4448                           
  4449                           	signat	_floor,4219
  4450                           	global	___ftsub
  4451                           psect	text1243,local,class=CODE,delta=2
  4452                           global __ptext1243
  4453  160B                     __ptext1243:
  4454                           
  4455 ;; *************** function ___ftsub *****************
  4456 ;; Defined at:
  4457 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  f2              3   44[BANK0 ] float 
  4460 ;;  f1              3   47[BANK0 ] float 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  3   44[BANK0 ] float 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4472 ;;      Params:         0       6       0       0       0
  4473 ;;      Locals:         0       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0
  4475 ;;      Totals:         0       6       0       0       0
  4476 ;;Total ram usage:        6 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    3
  4479 ;; This function calls:
  4480 ;;		___ftadd
  4481 ;; This function is called by:
  4482 ;;		_exp
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           psect	text1243
  4486                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4487                           	line	17
  4488                           	global	__size_of___ftsub
  4489  001F                     	__size_of___ftsub	equ	__end_of___ftsub-___ftsub
  4490                           	
  4491  160B                     ___ftsub:	
  4492                           	opt	stack 1
  4493                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4494                           	line	18
  4495                           	
  4496  160B                     l7071:	
  4497  160B  3080               	movlw	080h
  4498  160C  1283               	bcf	status, 5	;RP0=0, select bank0
  4499  160D  1303               	bcf	status, 6	;RP1=0, select bank0
  4500  160E  06CE               	xorwf	(___ftsub@f2+2),f
  4501                           	line	19
  4502                           	
  4503  160F                     l7073:	
  4504  160F  084F               	movf	(___ftsub@f1),w
  4505  1610  00BF               	movwf	(?___ftadd)
  4506  1611  0850               	movf	(___ftsub@f1+1),w
  4507  1612  00C0               	movwf	(?___ftadd+1)
  4508  1613  0851               	movf	(___ftsub@f1+2),w
  4509  1614  00C1               	movwf	(?___ftadd+2)
  4510  1615  084C               	movf	(___ftsub@f2),w
  4511  1616  00C2               	movwf	0+(?___ftadd)+03h
  4512  1617  084D               	movf	(___ftsub@f2+1),w
  4513  1618  00C3               	movwf	1+(?___ftadd)+03h
  4514  1619  084E               	movf	(___ftsub@f2+2),w
  4515  161A  00C4               	movwf	2+(?___ftadd)+03h
  4516  161B  120A  118A  262E   	fcall	___ftadd
              160A  118A         
  4517  1620  1283               	bcf	status, 5	;RP0=0, select bank0
  4518  1621  1303               	bcf	status, 6	;RP1=0, select bank0
  4519  1622  083F               	movf	(0+(?___ftadd)),w
  4520  1623  00CC               	movwf	(?___ftsub)
  4521  1624  0840               	movf	(1+(?___ftadd)),w
  4522  1625  00CD               	movwf	(?___ftsub+1)
  4523  1626  0841               	movf	(2+(?___ftadd)),w
  4524  1627  00CE               	movwf	(?___ftsub+2)
  4525  1628  2E29               	goto	l2958
  4526                           	
  4527  1629                     l7075:	
  4528                           	line	20
  4529                           	
  4530  1629                     l2958:	
  4531  1629  0008               	return
  4532                           	opt stack 0
  4533                           GLOBAL	__end_of___ftsub
  4534  162A                     	__end_of___ftsub:
  4535 ;; =============== function ___ftsub ends ============
  4536                           
  4537                           	signat	___ftsub,8315
  4538                           	global	_read_a2d2
  4539                           psect	text1244,local,class=CODE,delta=2
  4540                           global __ptext1244
  4541  1781                     __ptext1244:
  4542                           
  4543 ;; *************** function _read_a2d2 *****************
  4544 ;; Defined at:
  4545 ;;		line 127 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 
       2\capture.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  channel         1    wreg     unsigned char 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  channel         1    5[COMMON] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  3   15[BANK0 ] float 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4559 ;;      Params:         0       3       0       0       0
  4560 ;;      Locals:         1       0       0       0       0
  4561 ;;      Temps:          0       2       0       0       0
  4562 ;;      Totals:         1       5       0       0       0
  4563 ;;Total ram usage:        6 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    3
  4566 ;; This function calls:
  4567 ;;		_DelayMs
  4568 ;;		___lbtoft
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           psect	text1244
  4574                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\capture.c"
  4575                           	line	127
  4576                           	global	__size_of_read_a2d2
  4577  0039                     	__size_of_read_a2d2	equ	__end_of_read_a2d2-_read_a2d2
  4578                           	
  4579  1781                     _read_a2d2:	
  4580                           	opt	stack 4
  4581                           ; Regs used in _read_a2d2: [wreg+status,2+status,0+pclath+cstack]
  4582                           ;read_a2d2@channel stored from wreg
  4583  1781  00F5               	movwf	(read_a2d2@channel)
  4584                           	line	128
  4585                           	
  4586  1782                     l7059:	
  4587                           ;capture.c: 128: channel &=0x07;
  4588  1782  3007               	movlw	(07h)
  4589  1783  1283               	bcf	status, 5	;RP0=0, select bank0
  4590  1784  1303               	bcf	status, 6	;RP1=0, select bank0
  4591  1785  00B2               	movwf	(??_read_a2d2+0)+0
  4592  1786  0832               	movf	(??_read_a2d2+0)+0,w
  4593  1787  05F5               	andwf	(read_a2d2@channel),f
  4594                           	line	129
  4595                           ;capture.c: 129: ADCON0 = 0x49;
  4596  1788  3049               	movlw	(049h)
  4597  1789  009F               	movwf	(31)	;volatile
  4598                           	line	133
  4599                           ;capture.c: 133: ADCON1 = 0x0E;
  4600  178A  300E               	movlw	(0Eh)
  4601  178B  1683               	bsf	status, 5	;RP0=1, select bank1
  4602  178C  1303               	bcf	status, 6	;RP1=0, select bank1
  4603  178D  009F               	movwf	(159)^080h	;volatile
  4604                           	line	134
  4605                           	
  4606  178E                     l7061:	
  4607                           ;capture.c: 134: DelayMs(10);
  4608  178E  300A               	movlw	(0Ah)
  4609  178F  160A  118A  264B   	fcall	_DelayMs
              160A  118A         
  4610                           	line	135
  4611                           	
  4612  1794                     l7063:	
  4613                           ;capture.c: 135: ADCON0 |=(channel<<3);
  4614  1794  0875               	movf	(read_a2d2@channel),w
  4615  1795  1283               	bcf	status, 5	;RP0=0, select bank0
  4616  1796  1303               	bcf	status, 6	;RP1=0, select bank0
  4617  1797  00B2               	movwf	(??_read_a2d2+0)+0
  4618  1798  3002               	movlw	(03h)-1
  4619  1799                     u5315:
  4620  1799  1003               	clrc
  4621  179A  0DB2               	rlf	(??_read_a2d2+0)+0,f
  4622  179B  3EFF               	addlw	-1
  4623  179C  1D03               	skipz
  4624  179D  2F99               	goto	u5315
  4625  179E  1003               	clrc
  4626  179F  0D32               	rlf	(??_read_a2d2+0)+0,w
  4627  17A0  00B3               	movwf	(??_read_a2d2+1)+0
  4628  17A1  0833               	movf	(??_read_a2d2+1)+0,w
  4629  17A2  049F               	iorwf	(31),f	;volatile
  4630                           	line	136
  4631                           	
  4632  17A3                     l7065:	
  4633                           ;capture.c: 136: GO_nDONE = 1;
  4634  17A3  151F               	bsf	(250/8),(250)&7
  4635                           	line	137
  4636                           ;capture.c: 137: while(GO_nDONE)
  4637  17A4  2FA5               	goto	l738
  4638                           	
  4639  17A5                     l739:	
  4640                           	line	138
  4641                           ;capture.c: 138: continue;
  4642                           	
  4643  17A5                     l738:	
  4644                           	line	137
  4645  17A5  191F               	btfsc	(250/8),(250)&7
  4646  17A6  2FA8               	goto	u5321
  4647  17A7  2FA9               	goto	u5320
  4648  17A8                     u5321:
  4649  17A8  2FA5               	goto	l738
  4650  17A9                     u5320:
  4651  17A9  2FAA               	goto	l7067
  4652                           	
  4653  17AA                     l740:	
  4654                           	line	139
  4655                           	
  4656  17AA                     l7067:	
  4657                           ;capture.c: 139: return( (float) ADRESH);
  4658  17AA  081E               	movf	(30),w	;volatile
  4659  17AB  160A  118A  262A   	fcall	___lbtoft
              160A  118A         
  4660  17B0  1283               	bcf	status, 5	;RP0=0, select bank0
  4661  17B1  1303               	bcf	status, 6	;RP1=0, select bank0
  4662  17B2  0828               	movf	(0+(?___lbtoft)),w
  4663  17B3  00AF               	movwf	(?_read_a2d2)
  4664  17B4  0829               	movf	(1+(?___lbtoft)),w
  4665  17B5  00B0               	movwf	(?_read_a2d2+1)
  4666  17B6  082A               	movf	(2+(?___lbtoft)),w
  4667  17B7  00B1               	movwf	(?_read_a2d2+2)
  4668  17B8  2FB9               	goto	l741
  4669                           	
  4670  17B9                     l7069:	
  4671                           	line	140
  4672                           	
  4673  17B9                     l741:	
  4674  17B9  0008               	return
  4675                           	opt stack 0
  4676                           GLOBAL	__end_of_read_a2d2
  4677  17BA                     	__end_of_read_a2d2:
  4678 ;; =============== function _read_a2d2 ends ============
  4679                           
  4680                           	signat	_read_a2d2,4219
  4681                           	global	_read_a2d
  4682                           psect	text1245,local,class=CODE,delta=2
  4683                           global __ptext1245
  4684  1748                     __ptext1245:
  4685                           
  4686 ;; *************** function _read_a2d *****************
  4687 ;; Defined at:
  4688 ;;		line 105 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 
       2\capture.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  channel         1    wreg     unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  channel         1    5[COMMON] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  3   15[BANK0 ] float 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0, pclath, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4702 ;;      Params:         0       3       0       0       0
  4703 ;;      Locals:         1       0       0       0       0
  4704 ;;      Temps:          0       2       0       0       0
  4705 ;;      Totals:         1       5       0       0       0
  4706 ;;Total ram usage:        6 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    3
  4709 ;; This function calls:
  4710 ;;		_DelayMs
  4711 ;;		___lbtoft
  4712 ;; This function is called by:
  4713 ;;		_main
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           psect	text1245
  4717                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\capture.c"
  4718                           	line	105
  4719                           	global	__size_of_read_a2d
  4720  0039                     	__size_of_read_a2d	equ	__end_of_read_a2d-_read_a2d
  4721                           	
  4722  1748                     _read_a2d:	
  4723                           	opt	stack 4
  4724                           ; Regs used in _read_a2d: [wreg+status,2+status,0+pclath+cstack]
  4725                           ;read_a2d@channel stored from wreg
  4726  1748  00F5               	movwf	(read_a2d@channel)
  4727                           	line	106
  4728                           	
  4729  1749                     l7047:	
  4730                           ;capture.c: 106: channel &=0x07;
  4731  1749  3007               	movlw	(07h)
  4732  174A  1283               	bcf	status, 5	;RP0=0, select bank0
  4733  174B  1303               	bcf	status, 6	;RP1=0, select bank0
  4734  174C  00B2               	movwf	(??_read_a2d+0)+0
  4735  174D  0832               	movf	(??_read_a2d+0)+0,w
  4736  174E  05F5               	andwf	(read_a2d@channel),f
  4737                           	line	107
  4738                           ;capture.c: 107: ADCON0 = 0x41;
  4739  174F  3041               	movlw	(041h)
  4740  1750  009F               	movwf	(31)	;volatile
  4741                           	line	111
  4742                           ;capture.c: 111: ADCON1 = 0x0E;
  4743  1751  300E               	movlw	(0Eh)
  4744  1752  1683               	bsf	status, 5	;RP0=1, select bank1
  4745  1753  1303               	bcf	status, 6	;RP1=0, select bank1
  4746  1754  009F               	movwf	(159)^080h	;volatile
  4747                           	line	112
  4748                           	
  4749  1755                     l7049:	
  4750                           ;capture.c: 112: DelayMs(10);
  4751  1755  300A               	movlw	(0Ah)
  4752  1756  160A  118A  264B   	fcall	_DelayMs
              160A  118A         
  4753                           	line	113
  4754                           	
  4755  175B                     l7051:	
  4756                           ;capture.c: 113: ADCON0 |=(channel<<3);
  4757  175B  0875               	movf	(read_a2d@channel),w
  4758  175C  1283               	bcf	status, 5	;RP0=0, select bank0
  4759  175D  1303               	bcf	status, 6	;RP1=0, select bank0
  4760  175E  00B2               	movwf	(??_read_a2d+0)+0
  4761  175F  3002               	movlw	(03h)-1
  4762  1760                     u5295:
  4763  1760  1003               	clrc
  4764  1761  0DB2               	rlf	(??_read_a2d+0)+0,f
  4765  1762  3EFF               	addlw	-1
  4766  1763  1D03               	skipz
  4767  1764  2F60               	goto	u5295
  4768  1765  1003               	clrc
  4769  1766  0D32               	rlf	(??_read_a2d+0)+0,w
  4770  1767  00B3               	movwf	(??_read_a2d+1)+0
  4771  1768  0833               	movf	(??_read_a2d+1)+0,w
  4772  1769  049F               	iorwf	(31),f	;volatile
  4773                           	line	114
  4774                           	
  4775  176A                     l7053:	
  4776                           ;capture.c: 114: GO_nDONE = 1;
  4777  176A  151F               	bsf	(250/8),(250)&7
  4778                           	line	115
  4779                           ;capture.c: 115: while(GO_nDONE)
  4780  176B  2F6C               	goto	l729
  4781                           	
  4782  176C                     l730:	
  4783                           	line	116
  4784                           ;capture.c: 116: continue;
  4785                           	
  4786  176C                     l729:	
  4787                           	line	115
  4788  176C  191F               	btfsc	(250/8),(250)&7
  4789  176D  2F6F               	goto	u5301
  4790  176E  2F70               	goto	u5300
  4791  176F                     u5301:
  4792  176F  2F6C               	goto	l729
  4793  1770                     u5300:
  4794  1770  2F71               	goto	l7055
  4795                           	
  4796  1771                     l731:	
  4797                           	line	117
  4798                           	
  4799  1771                     l7055:	
  4800                           ;capture.c: 117: return( (float) ADRESH);
  4801  1771  081E               	movf	(30),w	;volatile
  4802  1772  160A  118A  262A   	fcall	___lbtoft
              160A  118A         
  4803  1777  1283               	bcf	status, 5	;RP0=0, select bank0
  4804  1778  1303               	bcf	status, 6	;RP1=0, select bank0
  4805  1779  0828               	movf	(0+(?___lbtoft)),w
  4806  177A  00AF               	movwf	(?_read_a2d)
  4807  177B  0829               	movf	(1+(?___lbtoft)),w
  4808  177C  00B0               	movwf	(?_read_a2d+1)
  4809  177D  082A               	movf	(2+(?___lbtoft)),w
  4810  177E  00B1               	movwf	(?_read_a2d+2)
  4811  177F  2F80               	goto	l732
  4812                           	
  4813  1780                     l7057:	
  4814                           	line	118
  4815                           	
  4816  1780                     l732:	
  4817  1780  0008               	return
  4818                           	opt stack 0
  4819                           GLOBAL	__end_of_read_a2d
  4820  1781                     	__end_of_read_a2d:
  4821 ;; =============== function _read_a2d ends ============
  4822                           
  4823                           	signat	_read_a2d,4219
  4824                           	global	_ldexp
  4825                           psect	text1246,local,class=CODE,delta=2
  4826                           global __ptext1246
  4827  0CB3                     __ptext1246:
  4828                           
  4829 ;; *************** function _ldexp *****************
  4830 ;; Defined at:
  4831 ;;		line 278 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  value           3   44[BANK0 ] float 
  4834 ;;  newexp          2   47[BANK0 ] int 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  3   44[BANK0 ] int 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4846 ;;      Params:         0       5       0       0       0
  4847 ;;      Locals:         0       3       0       0       0
  4848 ;;      Temps:          0       2       0       0       0
  4849 ;;      Totals:         0      10       0       0       0
  4850 ;;Total ram usage:       10 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    2
  4853 ;; This function calls:
  4854 ;;		___ftge
  4855 ;;		___ftneg
  4856 ;; This function is called by:
  4857 ;;		_exp
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           psect	text1246
  4861                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  4862                           	line	278
  4863                           	global	__size_of_ldexp
  4864  00C4                     	__size_of_ldexp	equ	__end_of_ldexp-_ldexp
  4865                           	
  4866  0CB3                     _ldexp:	
  4867                           	opt	stack 2
  4868                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4869                           	line	279
  4870                           	
  4871  0CB3                     l6997:	
  4872  0CB3  1283               	bcf	status, 5	;RP0=0, select bank0
  4873  0CB4  1303               	bcf	status, 6	;RP1=0, select bank0
  4874  0CB5  084E               	movf	(ldexp@value+2),w
  4875  0CB6  044D               	iorwf	(ldexp@value+1),w
  4876  0CB7  044C               	iorwf	(ldexp@value),w
  4877  0CB8  1D03               	skipz
  4878  0CB9  2CBB               	goto	u5231
  4879  0CBA  2CBC               	goto	u5230
  4880  0CBB                     u5231:
  4881  0CBB  2CC4               	goto	l7003
  4882  0CBC                     u5230:
  4883                           	line	280
  4884                           	
  4885  0CBC                     l6999:	
  4886  0CBC  3000               	movlw	0x0
  4887  0CBD  00CC               	movwf	(?_ldexp)
  4888  0CBE  3000               	movlw	0x0
  4889  0CBF  00CD               	movwf	(?_ldexp+1)
  4890  0CC0  3000               	movlw	0x0
  4891  0CC1  00CE               	movwf	(?_ldexp+2)
  4892  0CC2  2D76               	goto	l3266
  4893                           	
  4894  0CC3                     l7001:	
  4895  0CC3  2D76               	goto	l3266
  4896                           	
  4897  0CC4                     l3265:	
  4898                           	line	282
  4899                           	
  4900  0CC4                     l7003:	
  4901  0CC4  084E               	movf	0+(ldexp@value)+02h,w
  4902  0CC5  397F               	andlw	(1<<7)-1
  4903  0CC6  00D1               	movwf	(??_ldexp+0)+0
  4904  0CC7  01D2               	clrf	(??_ldexp+0)+0+1
  4905  0CC8  3001               	movlw	01h
  4906  0CC9  00FF               	movwf	btemp+1
  4907  0CCA                     u5245:
  4908  0CCA  1003               	clrc
  4909  0CCB  0DD1               	rlf	(??_ldexp+0)+0,f
  4910  0CCC  0DD2               	rlf	(??_ldexp+0)+1,f
  4911  0CCD  0BFF               	decfsz	btemp+1,f
  4912  0CCE  2CCA               	goto	u5245
  4913  0CCF  0851               	movf	0+(??_ldexp+0)+0,w
  4914  0CD0  07CF               	addwf	(ldexp@newexp),f
  4915  0CD1  1803               	skipnc
  4916  0CD2  0AD0               	incf	(ldexp@newexp+1),f
  4917  0CD3  0852               	movf	1+(??_ldexp+0)+0,w
  4918  0CD4  07D0               	addwf	(ldexp@newexp+1),f
  4919                           	line	283
  4920                           	
  4921  0CD5                     l7005:	
  4922  0CD5  0D4D               	rlf	0+(ldexp@value)+01h,w
  4923  0CD6  0D4D               	rlf	0+(ldexp@value)+01h,w
  4924  0CD7  3901               	andlw	1
  4925  0CD8  00D1               	movwf	(??_ldexp+0)+0
  4926  0CD9  01D2               	clrf	(??_ldexp+0)+0+1
  4927  0CDA  0851               	movf	0+(??_ldexp+0)+0,w
  4928  0CDB  07CF               	addwf	(ldexp@newexp),f
  4929  0CDC  1803               	skipnc
  4930  0CDD  0AD0               	incf	(ldexp@newexp+1),f
  4931  0CDE  0852               	movf	1+(??_ldexp+0)+0,w
  4932  0CDF  07D0               	addwf	(ldexp@newexp+1),f
  4933                           	line	287
  4934                           	
  4935  0CE0                     l7007:	
  4936  0CE0  1FD0               	btfss	(ldexp@newexp+1),7
  4937  0CE1  2CE3               	goto	u5251
  4938  0CE2  2CE4               	goto	u5250
  4939  0CE3                     u5251:
  4940  0CE3  2CF1               	goto	l7015
  4941  0CE4                     u5250:
  4942                           	line	288
  4943                           	
  4944  0CE4                     l7009:	
  4945  0CE4  3022               	movlw	low(022h)
  4946  0CE5  00F8               	movwf	(_errno)
  4947  0CE6  3000               	movlw	high(022h)
  4948  0CE7  00F9               	movwf	((_errno))+1
  4949                           	line	289
  4950  0CE8  3000               	movlw	0x0
  4951  0CE9  00CC               	movwf	(?_ldexp)
  4952  0CEA  3000               	movlw	0x0
  4953  0CEB  00CD               	movwf	(?_ldexp+1)
  4954  0CEC  3000               	movlw	0x0
  4955  0CED  00CE               	movwf	(?_ldexp+2)
  4956  0CEE  2D76               	goto	l3266
  4957                           	
  4958  0CEF                     l7011:	
  4959  0CEF  2D76               	goto	l3266
  4960                           	line	290
  4961                           	
  4962  0CF0                     l7013:	
  4963  0CF0  2D75               	goto	l7043
  4964                           	line	291
  4965                           	
  4966  0CF1                     l3267:	
  4967                           	
  4968  0CF1                     l7015:	
  4969  0CF1  0850               	movf	(ldexp@newexp+1),w
  4970  0CF2  3A80               	xorlw	80h
  4971  0CF3  00FF               	movwf	btemp+1
  4972  0CF4  3081               	movlw	(high(0100h))^80h
  4973  0CF5  027F               	subwf	btemp+1,w
  4974  0CF6  1D03               	skipz
  4975  0CF7  2CFA               	goto	u5265
  4976  0CF8  3000               	movlw	low(0100h)
  4977  0CF9  024F               	subwf	(ldexp@newexp),w
  4978  0CFA                     u5265:
  4979                           
  4980  0CFA  1C03               	skipc
  4981  0CFB  2CFD               	goto	u5261
  4982  0CFC  2CFE               	goto	u5260
  4983  0CFD                     u5261:
  4984  0CFD  2D57               	goto	l7039
  4985  0CFE                     u5260:
  4986                           	line	292
  4987                           	
  4988  0CFE                     l7017:	
  4989  0CFE  3022               	movlw	low(022h)
  4990  0CFF  00F8               	movwf	(_errno)
  4991  0D00  3000               	movlw	high(022h)
  4992  0D01  00F9               	movwf	((_errno))+1
  4993                           	line	293
  4994                           	
  4995  0D02                     l7019:	
  4996  0D02  1283               	bcf	status, 5	;RP0=0, select bank0
  4997  0D03  1303               	bcf	status, 6	;RP1=0, select bank0
  4998  0D04  084C               	movf	(ldexp@value),w
  4999  0D05  00A0               	movwf	(?___ftge)
  5000  0D06  084D               	movf	(ldexp@value+1),w
  5001  0D07  00A1               	movwf	(?___ftge+1)
  5002  0D08  084E               	movf	(ldexp@value+2),w
  5003  0D09  00A2               	movwf	(?___ftge+2)
  5004  0D0A  3000               	movlw	0x0
  5005  0D0B  00A3               	movwf	0+(?___ftge)+03h
  5006  0D0C  3000               	movlw	0x0
  5007  0D0D  00A4               	movwf	1+(?___ftge)+03h
  5008  0D0E  3000               	movlw	0x0
  5009  0D0F  00A5               	movwf	2+(?___ftge)+03h
  5010  0D10  120A  158A  21FB   	fcall	___ftge
              120A  158A         
  5011  0D15  1803               	btfsc	status,0
  5012  0D16  2D18               	goto	u5271
  5013  0D17  2D19               	goto	u5270
  5014  0D18                     u5271:
  5015  0D18  2D4B               	goto	l7035
  5016  0D19                     u5270:
  5017  0D19  2D24               	goto	l7025
  5018                           	line	294
  5019                           	
  5020  0D1A                     l7021:	
  5021  0D1A  2D24               	goto	l7025
  5022                           	
  5023  0D1B                     l7023:	
  5024  0D1B  3000               	movlw	0x0
  5025  0D1C  1283               	bcf	status, 5	;RP0=0, select bank0
  5026  0D1D  1303               	bcf	status, 6	;RP1=0, select bank0
  5027  0D1E  00D3               	movwf	(_ldexp$3590)
  5028  0D1F  3080               	movlw	0x80
  5029  0D20  00D4               	movwf	(_ldexp$3590+1)
  5030  0D21  307F               	movlw	0x7f
  5031  0D22  00D5               	movwf	(_ldexp$3590+2)
  5032  0D23  2D2D               	goto	l7027
  5033                           	
  5034  0D24                     l3272:	
  5035                           	
  5036  0D24                     l7025:	
  5037  0D24  30FF               	movlw	0xff
  5038  0D25  1283               	bcf	status, 5	;RP0=0, select bank0
  5039  0D26  1303               	bcf	status, 6	;RP1=0, select bank0
  5040  0D27  00D3               	movwf	(_ldexp$3590)
  5041  0D28  307F               	movlw	0x7f
  5042  0D29  00D4               	movwf	(_ldexp$3590+1)
  5043  0D2A  307F               	movlw	0x7f
  5044  0D2B  00D5               	movwf	(_ldexp$3590+2)
  5045  0D2C  2D2D               	goto	l7027
  5046                           	
  5047  0D2D                     l3274:	
  5048                           	
  5049  0D2D                     l7027:	
  5050  0D2D  0853               	movf	(_ldexp$3590),w
  5051  0D2E  00A8               	movwf	(?___ftneg)
  5052  0D2F  0854               	movf	(_ldexp$3590+1),w
  5053  0D30  00A9               	movwf	(?___ftneg+1)
  5054  0D31  0855               	movf	(_ldexp$3590+2),w
  5055  0D32  00AA               	movwf	(?___ftneg+2)
  5056  0D33  160A  118A  25C2   	fcall	___ftneg
              120A  158A         
  5057  0D38  1283               	bcf	status, 5	;RP0=0, select bank0
  5058  0D39  1303               	bcf	status, 6	;RP1=0, select bank0
  5059  0D3A  0828               	movf	(0+(?___ftneg)),w
  5060  0D3B  00CC               	movwf	(?_ldexp)
  5061  0D3C  0829               	movf	(1+(?___ftneg)),w
  5062  0D3D  00CD               	movwf	(?_ldexp+1)
  5063  0D3E  082A               	movf	(2+(?___ftneg)),w
  5064  0D3F  00CE               	movwf	(?_ldexp+2)
  5065  0D40  2D76               	goto	l3266
  5066                           	
  5067  0D41                     l7029:	
  5068  0D41  2D76               	goto	l3266
  5069                           	
  5070  0D42                     l7031:	
  5071  0D42  2D75               	goto	l7043
  5072                           	line	295
  5073                           	
  5074  0D43                     l3270:	
  5075                           	line	296
  5076  0D43  2D4B               	goto	l7035
  5077                           	
  5078  0D44                     l7033:	
  5079  0D44  3000               	movlw	0x0
  5080  0D45  00CC               	movwf	(?_ldexp)
  5081  0D46  3080               	movlw	0x80
  5082  0D47  00CD               	movwf	(?_ldexp+1)
  5083  0D48  307F               	movlw	0x7f
  5084  0D49  00CE               	movwf	(?_ldexp+2)
  5085  0D4A  2D76               	goto	l3266
  5086                           	
  5087  0D4B                     l3277:	
  5088                           	
  5089  0D4B                     l7035:	
  5090  0D4B  30FF               	movlw	0xff
  5091  0D4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5092  0D4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5093  0D4E  00CC               	movwf	(?_ldexp)
  5094  0D4F  307F               	movlw	0x7f
  5095  0D50  00CD               	movwf	(?_ldexp+1)
  5096  0D51  307F               	movlw	0x7f
  5097  0D52  00CE               	movwf	(?_ldexp+2)
  5098  0D53  2D76               	goto	l3266
  5099                           	
  5100  0D54                     l3279:	
  5101  0D54  2D76               	goto	l3266
  5102                           	
  5103  0D55                     l7037:	
  5104  0D55  2D76               	goto	l3266
  5105                           	
  5106  0D56                     l3275:	
  5107                           	line	297
  5108  0D56  2D75               	goto	l7043
  5109                           	line	298
  5110                           	
  5111  0D57                     l3269:	
  5112                           	line	300
  5113                           	
  5114  0D57                     l7039:	
  5115  0D57  1283               	bcf	status, 5	;RP0=0, select bank0
  5116  0D58  1303               	bcf	status, 6	;RP1=0, select bank0
  5117  0D59  0850               	movf	(ldexp@newexp+1),w
  5118  0D5A  00D2               	movwf	(??_ldexp+0)+0+1
  5119  0D5B  084F               	movf	(ldexp@newexp),w
  5120  0D5C  00D1               	movwf	(??_ldexp+0)+0
  5121  0D5D  3001               	movlw	01h
  5122  0D5E  00FF               	movwf	btemp+1
  5123  0D5F                     u5285:
  5124  0D5F  0D52               	rlf	(??_ldexp+0)+1,w
  5125  0D60  0CD2               	rrf	(??_ldexp+0)+1,f
  5126  0D61  0CD1               	rrf	(??_ldexp+0)+0,f
  5127  0D62  0BFF               	decfsz	btemp+1,f
  5128  0D63  2D5F               	goto	u5285
  5129  0D64  084E               	movf	0+(ldexp@value)+02h,w
  5130  0D65  0651               	xorwf	0+(??_ldexp+0)+0,w
  5131  0D66  3980               	andlw	not ((1<<7)-1)
  5132  0D67  0651               	xorwf	0+(??_ldexp+0)+0,w
  5133  0D68  00CE               	movwf	0+(ldexp@value)+02h
  5134                           	line	301
  5135                           	
  5136  0D69                     l7041:	
  5137  0D69  084F               	movf	(ldexp@newexp),w
  5138  0D6A  3901               	andlw	01h
  5139  0D6B  00D1               	movwf	(??_ldexp+0)+0
  5140  0D6C  0CD1               	rrf	(??_ldexp+0)+0,f
  5141  0D6D  0CD1               	rrf	(??_ldexp+0)+0,f
  5142  0D6E  084D               	movf	0+(ldexp@value)+01h,w
  5143  0D6F  0651               	xorwf	(??_ldexp+0)+0,w
  5144  0D70  397F               	andlw	not (((1<<1)-1)<<7)
  5145  0D71  0651               	xorwf	(??_ldexp+0)+0,w
  5146  0D72  00CD               	movwf	0+(ldexp@value)+01h
  5147  0D73  2D75               	goto	l7043
  5148                           	line	305
  5149                           	
  5150  0D74                     l3280:	
  5151  0D74  2D75               	goto	l7043
  5152                           	
  5153  0D75                     l3268:	
  5154                           	line	306
  5155                           	
  5156  0D75                     l7043:	
  5157  0D75  2D76               	goto	l3266
  5158                           	
  5159  0D76                     l7045:	
  5160                           	line	307
  5161                           	
  5162  0D76                     l3266:	
  5163  0D76  0008               	return
  5164                           	opt stack 0
  5165                           GLOBAL	__end_of_ldexp
  5166  0D77                     	__end_of_ldexp:
  5167 ;; =============== function _ldexp ends ============
  5168                           
  5169                           	signat	_ldexp,8315
  5170                           	global	___lltoft
  5171                           psect	text1247,local,class=CODE,delta=2
  5172                           global __ptext1247
  5173  1710                     __ptext1247:
  5174                           
  5175 ;; *************** function ___lltoft *****************
  5176 ;; Defined at:
  5177 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  c               4    8[BANK0 ] unsigned long 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  exp             1    5[COMMON] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  3    8[BANK0 ] float 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0, pclath, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5191 ;;      Params:         0       4       0       0       0
  5192 ;;      Locals:         1       0       0       0       0
  5193 ;;      Temps:          1       0       0       0       0
  5194 ;;      Totals:         2       4       0       0       0
  5195 ;;Total ram usage:        6 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    2
  5198 ;; This function calls:
  5199 ;;		___ftpack
  5200 ;; This function is called by:
  5201 ;;		_pow
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           psect	text1247
  5205                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5206                           	line	36
  5207                           	global	__size_of___lltoft
  5208  0038                     	__size_of___lltoft	equ	__end_of___lltoft-___lltoft
  5209                           	
  5210  1710                     ___lltoft:	
  5211                           	opt	stack 3
  5212                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5213                           	line	38
  5214                           	
  5215  1710                     l6987:	
  5216  1710  308E               	movlw	(08Eh)
  5217  1711  00F4               	movwf	(??___lltoft+0)+0
  5218  1712  0874               	movf	(??___lltoft+0)+0,w
  5219  1713  00F5               	movwf	(___lltoft@exp)
  5220                           	line	41
  5221  1714  2F25               	goto	l6991
  5222                           	
  5223  1715                     l3113:	
  5224                           	line	42
  5225                           	
  5226  1715                     l6989:	
  5227  1715  3001               	movlw	01h
  5228  1716                     u5215:
  5229  1716  1003               	clrc
  5230  1717  1283               	bcf	status, 5	;RP0=0, select bank0
  5231  1718  1303               	bcf	status, 6	;RP1=0, select bank0
  5232  1719  0CAB               	rrf	(___lltoft@c+3),f
  5233  171A  0CAA               	rrf	(___lltoft@c+2),f
  5234  171B  0CA9               	rrf	(___lltoft@c+1),f
  5235  171C  0CA8               	rrf	(___lltoft@c),f
  5236  171D  3EFF               	addlw	-1
  5237  171E  1D03               	skipz
  5238  171F  2F16               	goto	u5215
  5239                           
  5240                           	line	43
  5241  1720  3001               	movlw	(01h)
  5242  1721  00F4               	movwf	(??___lltoft+0)+0
  5243  1722  0874               	movf	(??___lltoft+0)+0,w
  5244  1723  07F5               	addwf	(___lltoft@exp),f
  5245  1724  2F25               	goto	l6991
  5246                           	line	44
  5247                           	
  5248  1725                     l3112:	
  5249                           	line	41
  5250                           	
  5251  1725                     l6991:	
  5252  1725  30FF               	movlw	high highword(-16777216)
  5253  1726  1283               	bcf	status, 5	;RP0=0, select bank0
  5254  1727  1303               	bcf	status, 6	;RP1=0, select bank0
  5255  1728  052B               	andwf	(___lltoft@c+3),w
  5256  1729  1D03               	btfss	status,2
  5257  172A  2F2C               	goto	u5221
  5258  172B  2F2D               	goto	u5220
  5259  172C                     u5221:
  5260  172C  2F15               	goto	l6989
  5261  172D                     u5220:
  5262  172D  2F2E               	goto	l6993
  5263                           	
  5264  172E                     l3114:	
  5265                           	line	45
  5266                           	
  5267  172E                     l6993:	
  5268  172E  0828               	movf	(___lltoft@c),w
  5269  172F  00A0               	movwf	(?___ftpack)
  5270  1730  0829               	movf	(___lltoft@c+1),w
  5271  1731  00A1               	movwf	(?___ftpack+1)
  5272  1732  082A               	movf	(___lltoft@c+2),w
  5273  1733  00A2               	movwf	(?___ftpack+2)
  5274  1734  0875               	movf	(___lltoft@exp),w
  5275  1735  00F4               	movwf	(??___lltoft+0)+0
  5276  1736  0874               	movf	(??___lltoft+0)+0,w
  5277  1737  00A3               	movwf	0+(?___ftpack)+03h
  5278  1738  01A4               	clrf	0+(?___ftpack)+04h
  5279  1739  120A  158A  2269   	fcall	___ftpack
              160A  118A         
  5280  173E  1283               	bcf	status, 5	;RP0=0, select bank0
  5281  173F  1303               	bcf	status, 6	;RP1=0, select bank0
  5282  1740  0820               	movf	(0+(?___ftpack)),w
  5283  1741  00A8               	movwf	(?___lltoft)
  5284  1742  0821               	movf	(1+(?___ftpack)),w
  5285  1743  00A9               	movwf	(?___lltoft+1)
  5286  1744  0822               	movf	(2+(?___ftpack)),w
  5287  1745  00AA               	movwf	(?___lltoft+2)
  5288  1746  2F47               	goto	l3115
  5289                           	
  5290  1747                     l6995:	
  5291                           	line	46
  5292                           	
  5293  1747                     l3115:	
  5294  1747  0008               	return
  5295                           	opt stack 0
  5296                           GLOBAL	__end_of___lltoft
  5297  1748                     	__end_of___lltoft:
  5298 ;; =============== function ___lltoft ends ============
  5299                           
  5300                           	signat	___lltoft,4219
  5301                           	global	___altoft
  5302                           psect	text1248,local,class=CODE,delta=2
  5303                           global __ptext1248
  5304  08B4                     __ptext1248:
  5305                           
  5306 ;; *************** function ___altoft *****************
  5307 ;; Defined at:
  5308 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  c               4   14[BANK0 ] long 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  sign            1   19[BANK0 ] unsigned char 
  5313 ;;  exp             1   18[BANK0 ] unsigned char 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  3   14[BANK0 ] float 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0, pclath, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5323 ;;      Params:         0       4       0       0       0
  5324 ;;      Locals:         0       2       0       0       0
  5325 ;;      Temps:          2       0       0       0       0
  5326 ;;      Totals:         2       6       0       0       0
  5327 ;;Total ram usage:        8 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    2
  5330 ;; This function calls:
  5331 ;;		___ftpack
  5332 ;; This function is called by:
  5333 ;;		_floor
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           psect	text1248
  5337                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5338                           	line	43
  5339                           	global	__size_of___altoft
  5340  004D                     	__size_of___altoft	equ	__end_of___altoft-___altoft
  5341                           	
  5342  08B4                     ___altoft:	
  5343                           	opt	stack 1
  5344                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5345                           	line	45
  5346                           	
  5347  08B4                     l6969:	
  5348  08B4  1283               	bcf	status, 5	;RP0=0, select bank0
  5349  08B5  1303               	bcf	status, 6	;RP1=0, select bank0
  5350  08B6  01B3               	clrf	(___altoft@sign)
  5351                           	line	46
  5352                           	
  5353  08B7                     l6971:	
  5354  08B7  308E               	movlw	(08Eh)
  5355  08B8  00F4               	movwf	(??___altoft+0)+0
  5356  08B9  0874               	movf	(??___altoft+0)+0,w
  5357  08BA  00B2               	movwf	(___altoft@exp)
  5358                           	line	47
  5359                           	
  5360  08BB                     l6973:	
  5361  08BB  1FB1               	btfss	(___altoft@c+3),7
  5362  08BC  28BE               	goto	u5181
  5363  08BD  28BF               	goto	u5180
  5364  08BE                     u5181:
  5365  08BE  28DD               	goto	l6981
  5366  08BF                     u5180:
  5367                           	line	48
  5368                           	
  5369  08BF                     l6975:	
  5370  08BF  09AE               	comf	(___altoft@c),f
  5371  08C0  09AF               	comf	(___altoft@c+1),f
  5372  08C1  09B0               	comf	(___altoft@c+2),f
  5373  08C2  09B1               	comf	(___altoft@c+3),f
  5374  08C3  0AAE               	incf	(___altoft@c),f
  5375  08C4  1903               	skipnz
  5376  08C5  0AAF               	incf	(___altoft@c+1),f
  5377  08C6  1903               	skipnz
  5378  08C7  0AB0               	incf	(___altoft@c+2),f
  5379  08C8  1903               	skipnz
  5380  08C9  0AB1               	incf	(___altoft@c+3),f
  5381                           	line	49
  5382                           	
  5383  08CA                     l6977:	
  5384  08CA  01B3               	clrf	(___altoft@sign)
  5385  08CB  1403               	bsf	status,0
  5386  08CC  0DB3               	rlf	(___altoft@sign),f
  5387  08CD  28DD               	goto	l6981
  5388                           	line	50
  5389                           	
  5390  08CE                     l3103:	
  5391                           	line	52
  5392  08CE  28DD               	goto	l6981
  5393                           	
  5394  08CF                     l3105:	
  5395                           	line	53
  5396                           	
  5397  08CF                     l6979:	
  5398  08CF  3001               	movlw	01h
  5399  08D0                     u5195:
  5400  08D0  1003               	clrc
  5401  08D1  0CB1               	rrf	(___altoft@c+3),f
  5402  08D2  0CB0               	rrf	(___altoft@c+2),f
  5403  08D3  0CAF               	rrf	(___altoft@c+1),f
  5404  08D4  0CAE               	rrf	(___altoft@c),f
  5405  08D5  3EFF               	addlw	-1
  5406  08D6  1D03               	skipz
  5407  08D7  28D0               	goto	u5195
  5408                           
  5409                           	line	54
  5410  08D8  3001               	movlw	(01h)
  5411  08D9  00F4               	movwf	(??___altoft+0)+0
  5412  08DA  0874               	movf	(??___altoft+0)+0,w
  5413  08DB  07B2               	addwf	(___altoft@exp),f
  5414  08DC  28DD               	goto	l6981
  5415                           	line	55
  5416                           	
  5417  08DD                     l3104:	
  5418                           	line	52
  5419                           	
  5420  08DD                     l6981:	
  5421  08DD  30FF               	movlw	high highword(-16777216)
  5422  08DE  0531               	andwf	(___altoft@c+3),w
  5423  08DF  1D03               	btfss	status,2
  5424  08E0  28E2               	goto	u5201
  5425  08E1  28E3               	goto	u5200
  5426  08E2                     u5201:
  5427  08E2  28CF               	goto	l6979
  5428  08E3                     u5200:
  5429  08E3  28E4               	goto	l6983
  5430                           	
  5431  08E4                     l3106:	
  5432                           	line	56
  5433                           	
  5434  08E4                     l6983:	
  5435  08E4  082E               	movf	(___altoft@c),w
  5436  08E5  00A0               	movwf	(?___ftpack)
  5437  08E6  082F               	movf	(___altoft@c+1),w
  5438  08E7  00A1               	movwf	(?___ftpack+1)
  5439  08E8  0830               	movf	(___altoft@c+2),w
  5440  08E9  00A2               	movwf	(?___ftpack+2)
  5441  08EA  0832               	movf	(___altoft@exp),w
  5442  08EB  00F4               	movwf	(??___altoft+0)+0
  5443  08EC  0874               	movf	(??___altoft+0)+0,w
  5444  08ED  00A3               	movwf	0+(?___ftpack)+03h
  5445  08EE  0833               	movf	(___altoft@sign),w
  5446  08EF  00F5               	movwf	(??___altoft+1)+0
  5447  08F0  0875               	movf	(??___altoft+1)+0,w
  5448  08F1  00A4               	movwf	0+(?___ftpack)+04h
  5449  08F2  120A  158A  2269   	fcall	___ftpack
              120A  158A         
  5450  08F7  1283               	bcf	status, 5	;RP0=0, select bank0
  5451  08F8  1303               	bcf	status, 6	;RP1=0, select bank0
  5452  08F9  0820               	movf	(0+(?___ftpack)),w
  5453  08FA  00AE               	movwf	(?___altoft)
  5454  08FB  0821               	movf	(1+(?___ftpack)),w
  5455  08FC  00AF               	movwf	(?___altoft+1)
  5456  08FD  0822               	movf	(2+(?___ftpack)),w
  5457  08FE  00B0               	movwf	(?___altoft+2)
  5458  08FF  2900               	goto	l3107
  5459                           	
  5460  0900                     l6985:	
  5461                           	line	57
  5462                           	
  5463  0900                     l3107:	
  5464  0900  0008               	return
  5465                           	opt stack 0
  5466                           GLOBAL	__end_of___altoft
  5467  0901                     	__end_of___altoft:
  5468 ;; =============== function ___altoft ends ============
  5469                           
  5470                           	signat	___altoft,4219
  5471                           	global	___awtoft
  5472                           psect	text1249,local,class=CODE,delta=2
  5473                           global __ptext1249
  5474  16E4                     __ptext1249:
  5475                           
  5476 ;; *************** function ___awtoft *****************
  5477 ;; Defined at:
  5478 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  c               2   11[BANK0 ] int 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  sign            1   14[BANK0 ] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  3   11[BANK0 ] float 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0, pclath, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5492 ;;      Params:         0       3       0       0       0
  5493 ;;      Locals:         0       1       0       0       0
  5494 ;;      Temps:          2       0       0       0       0
  5495 ;;      Totals:         2       4       0       0       0
  5496 ;;Total ram usage:        6 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    2
  5499 ;; This function calls:
  5500 ;;		___ftpack
  5501 ;; This function is called by:
  5502 ;;		_ftoa
  5503 ;;		_exp
  5504 ;;		_log
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           psect	text1249
  5508                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5509                           	line	33
  5510                           	global	__size_of___awtoft
  5511  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  5512                           	
  5513  16E4                     ___awtoft:	
  5514                           	opt	stack 2
  5515                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5516                           	line	36
  5517                           	
  5518  16E4                     l6961:	
  5519  16E4  1283               	bcf	status, 5	;RP0=0, select bank0
  5520  16E5  1303               	bcf	status, 6	;RP1=0, select bank0
  5521  16E6  01AE               	clrf	(___awtoft@sign)
  5522                           	line	37
  5523  16E7  1FAC               	btfss	(___awtoft@c+1),7
  5524  16E8  2EEA               	goto	u5171
  5525  16E9  2EEB               	goto	u5170
  5526  16EA                     u5171:
  5527  16EA  2EF4               	goto	l6965
  5528  16EB                     u5170:
  5529                           	line	38
  5530                           	
  5531  16EB                     l6963:	
  5532  16EB  09AB               	comf	(___awtoft@c),f
  5533  16EC  09AC               	comf	(___awtoft@c+1),f
  5534  16ED  0AAB               	incf	(___awtoft@c),f
  5535  16EE  1903               	skipnz
  5536  16EF  0AAC               	incf	(___awtoft@c+1),f
  5537                           	line	39
  5538  16F0  01AE               	clrf	(___awtoft@sign)
  5539  16F1  1403               	bsf	status,0
  5540  16F2  0DAE               	rlf	(___awtoft@sign),f
  5541  16F3  2EF4               	goto	l6965
  5542                           	line	40
  5543                           	
  5544  16F4                     l3011:	
  5545                           	line	41
  5546                           	
  5547  16F4                     l6965:	
  5548  16F4  082B               	movf	(___awtoft@c),w
  5549  16F5  00A0               	movwf	(?___ftpack)
  5550  16F6  082C               	movf	(___awtoft@c+1),w
  5551  16F7  00A1               	movwf	(?___ftpack+1)
  5552  16F8  01A2               	clrf	(?___ftpack+2)
  5553  16F9  308E               	movlw	(08Eh)
  5554  16FA  00F4               	movwf	(??___awtoft+0)+0
  5555  16FB  0874               	movf	(??___awtoft+0)+0,w
  5556  16FC  00A3               	movwf	0+(?___ftpack)+03h
  5557  16FD  082E               	movf	(___awtoft@sign),w
  5558  16FE  00F5               	movwf	(??___awtoft+1)+0
  5559  16FF  0875               	movf	(??___awtoft+1)+0,w
  5560  1700  00A4               	movwf	0+(?___ftpack)+04h
  5561  1701  120A  158A  2269   	fcall	___ftpack
              160A  118A         
  5562  1706  1283               	bcf	status, 5	;RP0=0, select bank0
  5563  1707  1303               	bcf	status, 6	;RP1=0, select bank0
  5564  1708  0820               	movf	(0+(?___ftpack)),w
  5565  1709  00AB               	movwf	(?___awtoft)
  5566  170A  0821               	movf	(1+(?___ftpack)),w
  5567  170B  00AC               	movwf	(?___awtoft+1)
  5568  170C  0822               	movf	(2+(?___ftpack)),w
  5569  170D  00AD               	movwf	(?___awtoft+2)
  5570  170E  2F0F               	goto	l3012
  5571                           	
  5572  170F                     l6967:	
  5573                           	line	42
  5574                           	
  5575  170F                     l3012:	
  5576  170F  0008               	return
  5577                           	opt stack 0
  5578                           GLOBAL	__end_of___awtoft
  5579  1710                     	__end_of___awtoft:
  5580 ;; =============== function ___awtoft ends ============
  5581                           
  5582                           	signat	___awtoft,4219
  5583                           	global	___lbtoft
  5584                           psect	text1250,local,class=CODE,delta=2
  5585                           global __ptext1250
  5586  162A                     __ptext1250:
  5587                           
  5588 ;; *************** function ___lbtoft *****************
  5589 ;; Defined at:
  5590 ;;		line 28 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbtoft.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  c               1    wreg     unsigned char 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  c               1    4[COMMON] unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  3    8[BANK0 ] float 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, pclath, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5604 ;;      Params:         0       3       0       0       0
  5605 ;;      Locals:         1       0       0       0       0
  5606 ;;      Temps:          0       4       0       0       0
  5607 ;;      Totals:         1       7       0       0       0
  5608 ;;Total ram usage:        8 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    2
  5611 ;; This function calls:
  5612 ;;		___ftpack
  5613 ;; This function is called by:
  5614 ;;		_read_a2d
  5615 ;;		_read_a2d2
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           psect	text1250
  5619                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbtoft.c"
  5620                           	line	28
  5621                           	global	__size_of___lbtoft
  5622  0021                     	__size_of___lbtoft	equ	__end_of___lbtoft-___lbtoft
  5623                           	
  5624  162A                     ___lbtoft:	
  5625                           	opt	stack 4
  5626                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5627                           ;___lbtoft@c stored from wreg
  5628  162A  00F4               	movwf	(___lbtoft@c)
  5629                           	line	29
  5630                           	
  5631  162B                     l6957:	
  5632  162B  0874               	movf	(___lbtoft@c),w
  5633  162C  1283               	bcf	status, 5	;RP0=0, select bank0
  5634  162D  1303               	bcf	status, 6	;RP1=0, select bank0
  5635  162E  00AB               	movwf	((??___lbtoft+0)+0)
  5636  162F  01AC               	clrf	((??___lbtoft+0)+0+1)
  5637  1630  01AD               	clrf	((??___lbtoft+0)+0+2)
  5638  1631  082B               	movf	0+(??___lbtoft+0)+0,w
  5639  1632  00A0               	movwf	(?___ftpack)
  5640  1633  082C               	movf	1+(??___lbtoft+0)+0,w
  5641  1634  00A1               	movwf	(?___ftpack+1)
  5642  1635  082D               	movf	2+(??___lbtoft+0)+0,w
  5643  1636  00A2               	movwf	(?___ftpack+2)
  5644  1637  308E               	movlw	(08Eh)
  5645  1638  00AE               	movwf	(??___lbtoft+3)+0
  5646  1639  082E               	movf	(??___lbtoft+3)+0,w
  5647  163A  00A3               	movwf	0+(?___ftpack)+03h
  5648  163B  01A4               	clrf	0+(?___ftpack)+04h
  5649  163C  120A  158A  2269   	fcall	___ftpack
              160A  118A         
  5650  1641  1283               	bcf	status, 5	;RP0=0, select bank0
  5651  1642  1303               	bcf	status, 6	;RP1=0, select bank0
  5652  1643  0820               	movf	(0+(?___ftpack)),w
  5653  1644  00A8               	movwf	(?___lbtoft)
  5654  1645  0821               	movf	(1+(?___ftpack)),w
  5655  1646  00A9               	movwf	(?___lbtoft+1)
  5656  1647  0822               	movf	(2+(?___ftpack)),w
  5657  1648  00AA               	movwf	(?___lbtoft+2)
  5658  1649  2E4A               	goto	l3000
  5659                           	
  5660  164A                     l6959:	
  5661                           	line	30
  5662                           	
  5663  164A                     l3000:	
  5664  164A  0008               	return
  5665                           	opt stack 0
  5666                           GLOBAL	__end_of___lbtoft
  5667  164B                     	__end_of___lbtoft:
  5668 ;; =============== function ___lbtoft ends ============
  5669                           
  5670                           	signat	___lbtoft,4219
  5671                           	global	___ftmul
  5672                           psect	text1251,local,class=CODE,delta=2
  5673                           global __ptext1251
  5674  0F12                     __ptext1251:
  5675                           
  5676 ;; *************** function ___ftmul *****************
  5677 ;; Defined at:
  5678 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  f1              3   15[BANK0 ] float 
  5681 ;;  f2              3   18[BANK0 ] float 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  5684 ;;  sign            1   30[BANK0 ] unsigned char 
  5685 ;;  cntr            1   29[BANK0 ] unsigned char 
  5686 ;;  exp             1   25[BANK0 ] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  3   15[BANK0 ] float 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0, pclath, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5696 ;;      Params:         0       6       0       0       0
  5697 ;;      Locals:         0       6       0       0       0
  5698 ;;      Temps:          0       4       0       0       0
  5699 ;;      Totals:         0      16       0       0       0
  5700 ;;Total ram usage:       16 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    2
  5703 ;; This function calls:
  5704 ;;		___ftpack
  5705 ;; This function is called by:
  5706 ;;		_ftoa
  5707 ;;		_pow
  5708 ;;		_exp
  5709 ;;		_log
  5710 ;;		_eval_poly
  5711 ;;		_log10
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           psect	text1251
  5715                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5716                           	line	52
  5717                           	global	__size_of___ftmul
  5718  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5719                           	
  5720  0F12                     ___ftmul:	
  5721                           	opt	stack 4
  5722                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5723                           	line	56
  5724                           	
  5725  0F12                     l6907:	
  5726  0F12  1283               	bcf	status, 5	;RP0=0, select bank0
  5727  0F13  1303               	bcf	status, 6	;RP1=0, select bank0
  5728  0F14  082F               	movf	(___ftmul@f1),w
  5729  0F15  00B5               	movwf	((??___ftmul+0)+0)
  5730  0F16  0830               	movf	(___ftmul@f1+1),w
  5731  0F17  00B6               	movwf	((??___ftmul+0)+0+1)
  5732  0F18  0831               	movf	(___ftmul@f1+2),w
  5733  0F19  00B7               	movwf	((??___ftmul+0)+0+2)
  5734  0F1A  1003               	clrc
  5735  0F1B  0D36               	rlf	(??___ftmul+0)+1,w
  5736  0F1C  0D37               	rlf	(??___ftmul+0)+2,w
  5737  0F1D  00B8               	movwf	(??___ftmul+3)+0
  5738  0F1E  0838               	movf	(??___ftmul+3)+0,w
  5739  0F1F  00B9               	movwf	(___ftmul@exp)
  5740  0F20  08B9               	movf	((___ftmul@exp)),f
  5741  0F21  1D03               	skipz
  5742  0F22  2F24               	goto	u5031
  5743  0F23  2F25               	goto	u5030
  5744  0F24                     u5031:
  5745  0F24  2F2D               	goto	l6913
  5746  0F25                     u5030:
  5747                           	line	57
  5748                           	
  5749  0F25                     l6909:	
  5750  0F25  3000               	movlw	0x0
  5751  0F26  00AF               	movwf	(?___ftmul)
  5752  0F27  3000               	movlw	0x0
  5753  0F28  00B0               	movwf	(?___ftmul+1)
  5754  0F29  3000               	movlw	0x0
  5755  0F2A  00B1               	movwf	(?___ftmul+2)
  5756  0F2B  2FFF               	goto	l2974
  5757                           	
  5758  0F2C                     l6911:	
  5759  0F2C  2FFF               	goto	l2974
  5760                           	
  5761  0F2D                     l2973:	
  5762                           	line	58
  5763                           	
  5764  0F2D                     l6913:	
  5765  0F2D  0832               	movf	(___ftmul@f2),w
  5766  0F2E  00B5               	movwf	((??___ftmul+0)+0)
  5767  0F2F  0833               	movf	(___ftmul@f2+1),w
  5768  0F30  00B6               	movwf	((??___ftmul+0)+0+1)
  5769  0F31  0834               	movf	(___ftmul@f2+2),w
  5770  0F32  00B7               	movwf	((??___ftmul+0)+0+2)
  5771  0F33  1003               	clrc
  5772  0F34  0D36               	rlf	(??___ftmul+0)+1,w
  5773  0F35  0D37               	rlf	(??___ftmul+0)+2,w
  5774  0F36  00B8               	movwf	(??___ftmul+3)+0
  5775  0F37  0838               	movf	(??___ftmul+3)+0,w
  5776  0F38  00BE               	movwf	(___ftmul@sign)
  5777  0F39  08BE               	movf	((___ftmul@sign)),f
  5778  0F3A  1D03               	skipz
  5779  0F3B  2F3D               	goto	u5041
  5780  0F3C  2F3E               	goto	u5040
  5781  0F3D                     u5041:
  5782  0F3D  2F46               	goto	l6919
  5783  0F3E                     u5040:
  5784                           	line	59
  5785                           	
  5786  0F3E                     l6915:	
  5787  0F3E  3000               	movlw	0x0
  5788  0F3F  00AF               	movwf	(?___ftmul)
  5789  0F40  3000               	movlw	0x0
  5790  0F41  00B0               	movwf	(?___ftmul+1)
  5791  0F42  3000               	movlw	0x0
  5792  0F43  00B1               	movwf	(?___ftmul+2)
  5793  0F44  2FFF               	goto	l2974
  5794                           	
  5795  0F45                     l6917:	
  5796  0F45  2FFF               	goto	l2974
  5797                           	
  5798  0F46                     l2975:	
  5799                           	line	60
  5800                           	
  5801  0F46                     l6919:	
  5802  0F46  083E               	movf	(___ftmul@sign),w
  5803  0F47  3E7B               	addlw	07Bh
  5804  0F48  00B5               	movwf	(??___ftmul+0)+0
  5805  0F49  0835               	movf	(??___ftmul+0)+0,w
  5806  0F4A  07B9               	addwf	(___ftmul@exp),f
  5807                           	line	61
  5808  0F4B  082F               	movf	(___ftmul@f1),w
  5809  0F4C  00B5               	movwf	((??___ftmul+0)+0)
  5810  0F4D  0830               	movf	(___ftmul@f1+1),w
  5811  0F4E  00B6               	movwf	((??___ftmul+0)+0+1)
  5812  0F4F  0831               	movf	(___ftmul@f1+2),w
  5813  0F50  00B7               	movwf	((??___ftmul+0)+0+2)
  5814  0F51  3010               	movlw	010h
  5815  0F52                     u5055:
  5816  0F52  1003               	clrc
  5817  0F53  0CB7               	rrf	(??___ftmul+0)+2,f
  5818  0F54  0CB6               	rrf	(??___ftmul+0)+1,f
  5819  0F55  0CB5               	rrf	(??___ftmul+0)+0,f
  5820  0F56                     u5050:
  5821  0F56  3EFF               	addlw	-1
  5822  0F57  1D03               	skipz
  5823  0F58  2F52               	goto	u5055
  5824  0F59  0835               	movf	0+(??___ftmul+0)+0,w
  5825  0F5A  00B8               	movwf	(??___ftmul+3)+0
  5826  0F5B  0838               	movf	(??___ftmul+3)+0,w
  5827  0F5C  00BE               	movwf	(___ftmul@sign)
  5828                           	line	62
  5829  0F5D  0832               	movf	(___ftmul@f2),w
  5830  0F5E  00B5               	movwf	((??___ftmul+0)+0)
  5831  0F5F  0833               	movf	(___ftmul@f2+1),w
  5832  0F60  00B6               	movwf	((??___ftmul+0)+0+1)
  5833  0F61  0834               	movf	(___ftmul@f2+2),w
  5834  0F62  00B7               	movwf	((??___ftmul+0)+0+2)
  5835  0F63  3010               	movlw	010h
  5836  0F64                     u5065:
  5837  0F64  1003               	clrc
  5838  0F65  0CB7               	rrf	(??___ftmul+0)+2,f
  5839  0F66  0CB6               	rrf	(??___ftmul+0)+1,f
  5840  0F67  0CB5               	rrf	(??___ftmul+0)+0,f
  5841  0F68                     u5060:
  5842  0F68  3EFF               	addlw	-1
  5843  0F69  1D03               	skipz
  5844  0F6A  2F64               	goto	u5065
  5845  0F6B  0835               	movf	0+(??___ftmul+0)+0,w
  5846  0F6C  00B8               	movwf	(??___ftmul+3)+0
  5847  0F6D  0838               	movf	(??___ftmul+3)+0,w
  5848  0F6E  06BE               	xorwf	(___ftmul@sign),f
  5849                           	line	63
  5850  0F6F  3080               	movlw	(080h)
  5851  0F70  00B5               	movwf	(??___ftmul+0)+0
  5852  0F71  0835               	movf	(??___ftmul+0)+0,w
  5853  0F72  05BE               	andwf	(___ftmul@sign),f
  5854                           	line	64
  5855                           	
  5856  0F73                     l6921:	
  5857  0F73  17B0               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5858                           	line	66
  5859                           	
  5860  0F74                     l6923:	
  5861  0F74  17B3               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5862                           	line	67
  5863                           	
  5864  0F75                     l6925:	
  5865  0F75  30FF               	movlw	0FFh
  5866  0F76  05B2               	andwf	(___ftmul@f2),f
  5867  0F77  30FF               	movlw	0FFh
  5868  0F78  05B3               	andwf	(___ftmul@f2+1),f
  5869  0F79  3000               	movlw	0
  5870  0F7A  05B4               	andwf	(___ftmul@f2+2),f
  5871                           	line	68
  5872                           	
  5873  0F7B                     l6927:	
  5874  0F7B  3000               	movlw	0
  5875  0F7C  00BA               	movwf	(___ftmul@f3_as_product)
  5876  0F7D  3000               	movlw	0
  5877  0F7E  00BB               	movwf	(___ftmul@f3_as_product+1)
  5878  0F7F  3000               	movlw	0
  5879  0F80  00BC               	movwf	(___ftmul@f3_as_product+2)
  5880                           	line	69
  5881                           	
  5882  0F81                     l6929:	
  5883  0F81  3007               	movlw	(07h)
  5884  0F82  00B5               	movwf	(??___ftmul+0)+0
  5885  0F83  0835               	movf	(??___ftmul+0)+0,w
  5886  0F84  00BD               	movwf	(___ftmul@cntr)
  5887  0F85  2F86               	goto	l6931
  5888                           	line	70
  5889                           	
  5890  0F86                     l2976:	
  5891                           	line	71
  5892                           	
  5893  0F86                     l6931:	
  5894  0F86  1C2F               	btfss	(___ftmul@f1),(0)&7
  5895  0F87  2F89               	goto	u5071
  5896  0F88  2F8A               	goto	u5070
  5897  0F89                     u5071:
  5898  0F89  2F9B               	goto	l6935
  5899  0F8A                     u5070:
  5900                           	line	72
  5901                           	
  5902  0F8A                     l6933:	
  5903  0F8A  0832               	movf	(___ftmul@f2),w
  5904  0F8B  07BA               	addwf	(___ftmul@f3_as_product),f
  5905  0F8C  0833               	movf	(___ftmul@f2+1),w
  5906  0F8D  1103               	clrz
  5907  0F8E  1803               	skipnc
  5908  0F8F  0A33               	incf	(___ftmul@f2+1),w
  5909  0F90  1903               	skipnz
  5910  0F91  2F93               	goto	u5081
  5911  0F92  07BB               	addwf	(___ftmul@f3_as_product+1),f
  5912  0F93                     u5081:
  5913  0F93  0834               	movf	(___ftmul@f2+2),w
  5914  0F94  1103               	clrz
  5915  0F95  1803               	skipnc
  5916  0F96  0A34               	incf	(___ftmul@f2+2),w
  5917  0F97  1903               	skipnz
  5918  0F98  2F9A               	goto	u5082
  5919  0F99  07BC               	addwf	(___ftmul@f3_as_product+2),f
  5920  0F9A                     u5082:
  5921                           
  5922  0F9A  2F9B               	goto	l6935
  5923                           	
  5924  0F9B                     l2977:	
  5925                           	line	73
  5926                           	
  5927  0F9B                     l6935:	
  5928  0F9B  3001               	movlw	01h
  5929  0F9C                     u5095:
  5930  0F9C  1003               	clrc
  5931  0F9D  0CB1               	rrf	(___ftmul@f1+2),f
  5932  0F9E  0CB0               	rrf	(___ftmul@f1+1),f
  5933  0F9F  0CAF               	rrf	(___ftmul@f1),f
  5934  0FA0  3EFF               	addlw	-1
  5935  0FA1  1D03               	skipz
  5936  0FA2  2F9C               	goto	u5095
  5937                           
  5938                           	line	74
  5939                           	
  5940  0FA3                     l6937:	
  5941  0FA3  3001               	movlw	01h
  5942  0FA4                     u5105:
  5943  0FA4  1003               	clrc
  5944  0FA5  0DB2               	rlf	(___ftmul@f2),f
  5945  0FA6  0DB3               	rlf	(___ftmul@f2+1),f
  5946  0FA7  0DB4               	rlf	(___ftmul@f2+2),f
  5947  0FA8  3EFF               	addlw	-1
  5948  0FA9  1D03               	skipz
  5949  0FAA  2FA4               	goto	u5105
  5950                           	line	75
  5951                           	
  5952  0FAB                     l6939:	
  5953  0FAB  3001               	movlw	low(01h)
  5954  0FAC  02BD               	subwf	(___ftmul@cntr),f
  5955  0FAD  1D03               	btfss	status,2
  5956  0FAE  2FB0               	goto	u5111
  5957  0FAF  2FB1               	goto	u5110
  5958  0FB0                     u5111:
  5959  0FB0  2F86               	goto	l6931
  5960  0FB1                     u5110:
  5961  0FB1  2FB2               	goto	l6941
  5962                           	
  5963  0FB2                     l2978:	
  5964                           	line	76
  5965                           	
  5966  0FB2                     l6941:	
  5967  0FB2  3009               	movlw	(09h)
  5968  0FB3  00B5               	movwf	(??___ftmul+0)+0
  5969  0FB4  0835               	movf	(??___ftmul+0)+0,w
  5970  0FB5  00BD               	movwf	(___ftmul@cntr)
  5971  0FB6  2FB7               	goto	l6943
  5972                           	line	77
  5973                           	
  5974  0FB7                     l2979:	
  5975                           	line	78
  5976                           	
  5977  0FB7                     l6943:	
  5978  0FB7  1C2F               	btfss	(___ftmul@f1),(0)&7
  5979  0FB8  2FBA               	goto	u5121
  5980  0FB9  2FBB               	goto	u5120
  5981  0FBA                     u5121:
  5982  0FBA  2FCC               	goto	l6947
  5983  0FBB                     u5120:
  5984                           	line	79
  5985                           	
  5986  0FBB                     l6945:	
  5987  0FBB  0832               	movf	(___ftmul@f2),w
  5988  0FBC  07BA               	addwf	(___ftmul@f3_as_product),f
  5989  0FBD  0833               	movf	(___ftmul@f2+1),w
  5990  0FBE  1103               	clrz
  5991  0FBF  1803               	skipnc
  5992  0FC0  0A33               	incf	(___ftmul@f2+1),w
  5993  0FC1  1903               	skipnz
  5994  0FC2  2FC4               	goto	u5131
  5995  0FC3  07BB               	addwf	(___ftmul@f3_as_product+1),f
  5996  0FC4                     u5131:
  5997  0FC4  0834               	movf	(___ftmul@f2+2),w
  5998  0FC5  1103               	clrz
  5999  0FC6  1803               	skipnc
  6000  0FC7  0A34               	incf	(___ftmul@f2+2),w
  6001  0FC8  1903               	skipnz
  6002  0FC9  2FCB               	goto	u5132
  6003  0FCA  07BC               	addwf	(___ftmul@f3_as_product+2),f
  6004  0FCB                     u5132:
  6005                           
  6006  0FCB  2FCC               	goto	l6947
  6007                           	
  6008  0FCC                     l2980:	
  6009                           	line	80
  6010                           	
  6011  0FCC                     l6947:	
  6012  0FCC  3001               	movlw	01h
  6013  0FCD                     u5145:
  6014  0FCD  1003               	clrc
  6015  0FCE  0CB1               	rrf	(___ftmul@f1+2),f
  6016  0FCF  0CB0               	rrf	(___ftmul@f1+1),f
  6017  0FD0  0CAF               	rrf	(___ftmul@f1),f
  6018  0FD1  3EFF               	addlw	-1
  6019  0FD2  1D03               	skipz
  6020  0FD3  2FCD               	goto	u5145
  6021                           
  6022                           	line	81
  6023                           	
  6024  0FD4                     l6949:	
  6025  0FD4  3001               	movlw	01h
  6026  0FD5                     u5155:
  6027  0FD5  1003               	clrc
  6028  0FD6  0CBC               	rrf	(___ftmul@f3_as_product+2),f
  6029  0FD7  0CBB               	rrf	(___ftmul@f3_as_product+1),f
  6030  0FD8  0CBA               	rrf	(___ftmul@f3_as_product),f
  6031  0FD9  3EFF               	addlw	-1
  6032  0FDA  1D03               	skipz
  6033  0FDB  2FD5               	goto	u5155
  6034                           
  6035                           	line	82
  6036                           	
  6037  0FDC                     l6951:	
  6038  0FDC  3001               	movlw	low(01h)
  6039  0FDD  02BD               	subwf	(___ftmul@cntr),f
  6040  0FDE  1D03               	btfss	status,2
  6041  0FDF  2FE1               	goto	u5161
  6042  0FE0  2FE2               	goto	u5160
  6043  0FE1                     u5161:
  6044  0FE1  2FB7               	goto	l6943
  6045  0FE2                     u5160:
  6046  0FE2  2FE3               	goto	l6953
  6047                           	
  6048  0FE3                     l2981:	
  6049                           	line	83
  6050                           	
  6051  0FE3                     l6953:	
  6052  0FE3  083A               	movf	(___ftmul@f3_as_product),w
  6053  0FE4  00A0               	movwf	(?___ftpack)
  6054  0FE5  083B               	movf	(___ftmul@f3_as_product+1),w
  6055  0FE6  00A1               	movwf	(?___ftpack+1)
  6056  0FE7  083C               	movf	(___ftmul@f3_as_product+2),w
  6057  0FE8  00A2               	movwf	(?___ftpack+2)
  6058  0FE9  0839               	movf	(___ftmul@exp),w
  6059  0FEA  00B5               	movwf	(??___ftmul+0)+0
  6060  0FEB  0835               	movf	(??___ftmul+0)+0,w
  6061  0FEC  00A3               	movwf	0+(?___ftpack)+03h
  6062  0FED  083E               	movf	(___ftmul@sign),w
  6063  0FEE  00B6               	movwf	(??___ftmul+1)+0
  6064  0FEF  0836               	movf	(??___ftmul+1)+0,w
  6065  0FF0  00A4               	movwf	0+(?___ftpack)+04h
  6066  0FF1  120A  158A  2269   	fcall	___ftpack
              120A  158A         
  6067  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  6068  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  6069  0FF8  0820               	movf	(0+(?___ftpack)),w
  6070  0FF9  00AF               	movwf	(?___ftmul)
  6071  0FFA  0821               	movf	(1+(?___ftpack)),w
  6072  0FFB  00B0               	movwf	(?___ftmul+1)
  6073  0FFC  0822               	movf	(2+(?___ftpack)),w
  6074  0FFD  00B1               	movwf	(?___ftmul+2)
  6075  0FFE  2FFF               	goto	l2974
  6076                           	
  6077  0FFF                     l6955:	
  6078                           	line	84
  6079                           	
  6080  0FFF                     l2974:	
  6081  0FFF  0008               	return
  6082                           	opt stack 0
  6083                           GLOBAL	__end_of___ftmul
  6084  1000                     	__end_of___ftmul:
  6085 ;; =============== function ___ftmul ends ============
  6086                           
  6087                           	signat	___ftmul,8315
  6088                           	global	___ftdiv
  6089                           psect	text1252,local,class=CODE,delta=2
  6090                           global __ptext1252
  6091  0D77                     __ptext1252:
  6092                           
  6093 ;; *************** function ___ftdiv *****************
  6094 ;; Defined at:
  6095 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  f2              3    8[BANK0 ] float 
  6098 ;;  f1              3   11[BANK0 ] float 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  f3              3   19[BANK0 ] float 
  6101 ;;  sign            1   23[BANK0 ] unsigned char 
  6102 ;;  exp             1   22[BANK0 ] unsigned char 
  6103 ;;  cntr            1   18[BANK0 ] unsigned char 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  3    8[BANK0 ] float 
  6106 ;; Registers used:
  6107 ;;		wreg, status,2, status,0, pclath, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6113 ;;      Params:         0       6       0       0       0
  6114 ;;      Locals:         0       6       0       0       0
  6115 ;;      Temps:          0       4       0       0       0
  6116 ;;      Totals:         0      16       0       0       0
  6117 ;;Total ram usage:       16 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    2
  6120 ;; This function calls:
  6121 ;;		___ftpack
  6122 ;; This function is called by:
  6123 ;;		_main
  6124 ;;		_exp
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           psect	text1252
  6128                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6129                           	line	50
  6130                           	global	__size_of___ftdiv
  6131  00C8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  6132                           	
  6133  0D77                     ___ftdiv:	
  6134                           	opt	stack 2
  6135                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6136                           	line	55
  6137                           	
  6138  0D77                     l6865:	
  6139  0D77  1283               	bcf	status, 5	;RP0=0, select bank0
  6140  0D78  1303               	bcf	status, 6	;RP1=0, select bank0
  6141  0D79  082B               	movf	(___ftdiv@f1),w
  6142  0D7A  00AE               	movwf	((??___ftdiv+0)+0)
  6143  0D7B  082C               	movf	(___ftdiv@f1+1),w
  6144  0D7C  00AF               	movwf	((??___ftdiv+0)+0+1)
  6145  0D7D  082D               	movf	(___ftdiv@f1+2),w
  6146  0D7E  00B0               	movwf	((??___ftdiv+0)+0+2)
  6147  0D7F  1003               	clrc
  6148  0D80  0D2F               	rlf	(??___ftdiv+0)+1,w
  6149  0D81  0D30               	rlf	(??___ftdiv+0)+2,w
  6150  0D82  00B1               	movwf	(??___ftdiv+3)+0
  6151  0D83  0831               	movf	(??___ftdiv+3)+0,w
  6152  0D84  00B6               	movwf	(___ftdiv@exp)
  6153  0D85  08B6               	movf	((___ftdiv@exp)),f
  6154  0D86  1D03               	skipz
  6155  0D87  2D89               	goto	u4951
  6156  0D88  2D8A               	goto	u4950
  6157  0D89                     u4951:
  6158  0D89  2D92               	goto	l6871
  6159  0D8A                     u4950:
  6160                           	line	56
  6161                           	
  6162  0D8A                     l6867:	
  6163  0D8A  3000               	movlw	0x0
  6164  0D8B  00A8               	movwf	(?___ftdiv)
  6165  0D8C  3000               	movlw	0x0
  6166  0D8D  00A9               	movwf	(?___ftdiv+1)
  6167  0D8E  3000               	movlw	0x0
  6168  0D8F  00AA               	movwf	(?___ftdiv+2)
  6169  0D90  2E3E               	goto	l2964
  6170                           	
  6171  0D91                     l6869:	
  6172  0D91  2E3E               	goto	l2964
  6173                           	
  6174  0D92                     l2963:	
  6175                           	line	57
  6176                           	
  6177  0D92                     l6871:	
  6178  0D92  0828               	movf	(___ftdiv@f2),w
  6179  0D93  00AE               	movwf	((??___ftdiv+0)+0)
  6180  0D94  0829               	movf	(___ftdiv@f2+1),w
  6181  0D95  00AF               	movwf	((??___ftdiv+0)+0+1)
  6182  0D96  082A               	movf	(___ftdiv@f2+2),w
  6183  0D97  00B0               	movwf	((??___ftdiv+0)+0+2)
  6184  0D98  1003               	clrc
  6185  0D99  0D2F               	rlf	(??___ftdiv+0)+1,w
  6186  0D9A  0D30               	rlf	(??___ftdiv+0)+2,w
  6187  0D9B  00B1               	movwf	(??___ftdiv+3)+0
  6188  0D9C  0831               	movf	(??___ftdiv+3)+0,w
  6189  0D9D  00B7               	movwf	(___ftdiv@sign)
  6190  0D9E  08B7               	movf	((___ftdiv@sign)),f
  6191  0D9F  1D03               	skipz
  6192  0DA0  2DA2               	goto	u4961
  6193  0DA1  2DA3               	goto	u4960
  6194  0DA2                     u4961:
  6195  0DA2  2DAB               	goto	l6877
  6196  0DA3                     u4960:
  6197                           	line	58
  6198                           	
  6199  0DA3                     l6873:	
  6200  0DA3  3000               	movlw	0x0
  6201  0DA4  00A8               	movwf	(?___ftdiv)
  6202  0DA5  3000               	movlw	0x0
  6203  0DA6  00A9               	movwf	(?___ftdiv+1)
  6204  0DA7  3000               	movlw	0x0
  6205  0DA8  00AA               	movwf	(?___ftdiv+2)
  6206  0DA9  2E3E               	goto	l2964
  6207                           	
  6208  0DAA                     l6875:	
  6209  0DAA  2E3E               	goto	l2964
  6210                           	
  6211  0DAB                     l2965:	
  6212                           	line	59
  6213                           	
  6214  0DAB                     l6877:	
  6215  0DAB  3000               	movlw	0
  6216  0DAC  00B3               	movwf	(___ftdiv@f3)
  6217  0DAD  3000               	movlw	0
  6218  0DAE  00B4               	movwf	(___ftdiv@f3+1)
  6219  0DAF  3000               	movlw	0
  6220  0DB0  00B5               	movwf	(___ftdiv@f3+2)
  6221                           	line	60
  6222                           	
  6223  0DB1                     l6879:	
  6224  0DB1  3089               	movlw	(089h)
  6225  0DB2  0737               	addwf	(___ftdiv@sign),w
  6226  0DB3  00AE               	movwf	(??___ftdiv+0)+0
  6227  0DB4  082E               	movf	0+(??___ftdiv+0)+0,w
  6228  0DB5  02B6               	subwf	(___ftdiv@exp),f
  6229                           	line	61
  6230                           	
  6231  0DB6                     l6881:	
  6232  0DB6  082B               	movf	(___ftdiv@f1),w
  6233  0DB7  00AE               	movwf	((??___ftdiv+0)+0)
  6234  0DB8  082C               	movf	(___ftdiv@f1+1),w
  6235  0DB9  00AF               	movwf	((??___ftdiv+0)+0+1)
  6236  0DBA  082D               	movf	(___ftdiv@f1+2),w
  6237  0DBB  00B0               	movwf	((??___ftdiv+0)+0+2)
  6238  0DBC  3010               	movlw	010h
  6239  0DBD                     u4975:
  6240  0DBD  1003               	clrc
  6241  0DBE  0CB0               	rrf	(??___ftdiv+0)+2,f
  6242  0DBF  0CAF               	rrf	(??___ftdiv+0)+1,f
  6243  0DC0  0CAE               	rrf	(??___ftdiv+0)+0,f
  6244  0DC1                     u4970:
  6245  0DC1  3EFF               	addlw	-1
  6246  0DC2  1D03               	skipz
  6247  0DC3  2DBD               	goto	u4975
  6248  0DC4  082E               	movf	0+(??___ftdiv+0)+0,w
  6249  0DC5  00B1               	movwf	(??___ftdiv+3)+0
  6250  0DC6  0831               	movf	(??___ftdiv+3)+0,w
  6251  0DC7  00B7               	movwf	(___ftdiv@sign)
  6252                           	line	62
  6253                           	
  6254  0DC8                     l6883:	
  6255  0DC8  0828               	movf	(___ftdiv@f2),w
  6256  0DC9  00AE               	movwf	((??___ftdiv+0)+0)
  6257  0DCA  0829               	movf	(___ftdiv@f2+1),w
  6258  0DCB  00AF               	movwf	((??___ftdiv+0)+0+1)
  6259  0DCC  082A               	movf	(___ftdiv@f2+2),w
  6260  0DCD  00B0               	movwf	((??___ftdiv+0)+0+2)
  6261  0DCE  3010               	movlw	010h
  6262  0DCF                     u4985:
  6263  0DCF  1003               	clrc
  6264  0DD0  0CB0               	rrf	(??___ftdiv+0)+2,f
  6265  0DD1  0CAF               	rrf	(??___ftdiv+0)+1,f
  6266  0DD2  0CAE               	rrf	(??___ftdiv+0)+0,f
  6267  0DD3                     u4980:
  6268  0DD3  3EFF               	addlw	-1
  6269  0DD4  1D03               	skipz
  6270  0DD5  2DCF               	goto	u4985
  6271  0DD6  082E               	movf	0+(??___ftdiv+0)+0,w
  6272  0DD7  00B1               	movwf	(??___ftdiv+3)+0
  6273  0DD8  0831               	movf	(??___ftdiv+3)+0,w
  6274  0DD9  06B7               	xorwf	(___ftdiv@sign),f
  6275                           	line	63
  6276                           	
  6277  0DDA                     l6885:	
  6278  0DDA  3080               	movlw	(080h)
  6279  0DDB  00AE               	movwf	(??___ftdiv+0)+0
  6280  0DDC  082E               	movf	(??___ftdiv+0)+0,w
  6281  0DDD  05B7               	andwf	(___ftdiv@sign),f
  6282                           	line	64
  6283                           	
  6284  0DDE                     l6887:	
  6285  0DDE  17AC               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  6286                           	line	65
  6287  0DDF  30FF               	movlw	0FFh
  6288  0DE0  05AB               	andwf	(___ftdiv@f1),f
  6289  0DE1  30FF               	movlw	0FFh
  6290  0DE2  05AC               	andwf	(___ftdiv@f1+1),f
  6291  0DE3  3000               	movlw	0
  6292  0DE4  05AD               	andwf	(___ftdiv@f1+2),f
  6293                           	line	66
  6294                           	
  6295  0DE5                     l6889:	
  6296  0DE5  17A9               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  6297                           	line	67
  6298  0DE6  30FF               	movlw	0FFh
  6299  0DE7  05A8               	andwf	(___ftdiv@f2),f
  6300  0DE8  30FF               	movlw	0FFh
  6301  0DE9  05A9               	andwf	(___ftdiv@f2+1),f
  6302  0DEA  3000               	movlw	0
  6303  0DEB  05AA               	andwf	(___ftdiv@f2+2),f
  6304                           	line	68
  6305  0DEC  3018               	movlw	(018h)
  6306  0DED  00AE               	movwf	(??___ftdiv+0)+0
  6307  0DEE  082E               	movf	(??___ftdiv+0)+0,w
  6308  0DEF  00B2               	movwf	(___ftdiv@cntr)
  6309  0DF0  2DF1               	goto	l6891
  6310                           	line	69
  6311                           	
  6312  0DF1                     l2966:	
  6313                           	line	70
  6314                           	
  6315  0DF1                     l6891:	
  6316  0DF1  3001               	movlw	01h
  6317  0DF2                     u4995:
  6318  0DF2  1003               	clrc
  6319  0DF3  0DB3               	rlf	(___ftdiv@f3),f
  6320  0DF4  0DB4               	rlf	(___ftdiv@f3+1),f
  6321  0DF5  0DB5               	rlf	(___ftdiv@f3+2),f
  6322  0DF6  3EFF               	addlw	-1
  6323  0DF7  1D03               	skipz
  6324  0DF8  2DF2               	goto	u4995
  6325                           	line	71
  6326                           	
  6327  0DF9                     l6893:	
  6328  0DF9  082A               	movf	(___ftdiv@f2+2),w
  6329  0DFA  022D               	subwf	(___ftdiv@f1+2),w
  6330  0DFB  1D03               	skipz
  6331  0DFC  2E03               	goto	u5005
  6332  0DFD  0829               	movf	(___ftdiv@f2+1),w
  6333  0DFE  022C               	subwf	(___ftdiv@f1+1),w
  6334  0DFF  1D03               	skipz
  6335  0E00  2E03               	goto	u5005
  6336  0E01  0828               	movf	(___ftdiv@f2),w
  6337  0E02  022B               	subwf	(___ftdiv@f1),w
  6338  0E03                     u5005:
  6339  0E03  1C03               	skipc
  6340  0E04  2E06               	goto	u5001
  6341  0E05  2E07               	goto	u5000
  6342  0E06                     u5001:
  6343  0E06  2E13               	goto	l6899
  6344  0E07                     u5000:
  6345                           	line	72
  6346                           	
  6347  0E07                     l6895:	
  6348  0E07  0828               	movf	(___ftdiv@f2),w
  6349  0E08  02AB               	subwf	(___ftdiv@f1),f
  6350  0E09  0829               	movf	(___ftdiv@f2+1),w
  6351  0E0A  1C03               	skipc
  6352  0E0B  0F29               	incfsz	(___ftdiv@f2+1),w
  6353  0E0C  02AC               	subwf	(___ftdiv@f1+1),f
  6354  0E0D  082A               	movf	(___ftdiv@f2+2),w
  6355  0E0E  1C03               	skipc
  6356  0E0F  0A2A               	incf	(___ftdiv@f2+2),w
  6357  0E10  02AD               	subwf	(___ftdiv@f1+2),f
  6358                           	line	73
  6359                           	
  6360  0E11                     l6897:	
  6361  0E11  1433               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  6362  0E12  2E13               	goto	l6899
  6363                           	line	74
  6364                           	
  6365  0E13                     l2967:	
  6366                           	line	75
  6367                           	
  6368  0E13                     l6899:	
  6369  0E13  3001               	movlw	01h
  6370  0E14                     u5015:
  6371  0E14  1003               	clrc
  6372  0E15  0DAB               	rlf	(___ftdiv@f1),f
  6373  0E16  0DAC               	rlf	(___ftdiv@f1+1),f
  6374  0E17  0DAD               	rlf	(___ftdiv@f1+2),f
  6375  0E18  3EFF               	addlw	-1
  6376  0E19  1D03               	skipz
  6377  0E1A  2E14               	goto	u5015
  6378                           	line	76
  6379                           	
  6380  0E1B                     l6901:	
  6381  0E1B  3001               	movlw	low(01h)
  6382  0E1C  02B2               	subwf	(___ftdiv@cntr),f
  6383  0E1D  1D03               	btfss	status,2
  6384  0E1E  2E20               	goto	u5021
  6385  0E1F  2E21               	goto	u5020
  6386  0E20                     u5021:
  6387  0E20  2DF1               	goto	l6891
  6388  0E21                     u5020:
  6389  0E21  2E22               	goto	l6903
  6390                           	
  6391  0E22                     l2968:	
  6392                           	line	77
  6393                           	
  6394  0E22                     l6903:	
  6395  0E22  0833               	movf	(___ftdiv@f3),w
  6396  0E23  00A0               	movwf	(?___ftpack)
  6397  0E24  0834               	movf	(___ftdiv@f3+1),w
  6398  0E25  00A1               	movwf	(?___ftpack+1)
  6399  0E26  0835               	movf	(___ftdiv@f3+2),w
  6400  0E27  00A2               	movwf	(?___ftpack+2)
  6401  0E28  0836               	movf	(___ftdiv@exp),w
  6402  0E29  00AE               	movwf	(??___ftdiv+0)+0
  6403  0E2A  082E               	movf	(??___ftdiv+0)+0,w
  6404  0E2B  00A3               	movwf	0+(?___ftpack)+03h
  6405  0E2C  0837               	movf	(___ftdiv@sign),w
  6406  0E2D  00AF               	movwf	(??___ftdiv+1)+0
  6407  0E2E  082F               	movf	(??___ftdiv+1)+0,w
  6408  0E2F  00A4               	movwf	0+(?___ftpack)+04h
  6409  0E30  120A  158A  2269   	fcall	___ftpack
              120A  158A         
  6410  0E35  1283               	bcf	status, 5	;RP0=0, select bank0
  6411  0E36  1303               	bcf	status, 6	;RP1=0, select bank0
  6412  0E37  0820               	movf	(0+(?___ftpack)),w
  6413  0E38  00A8               	movwf	(?___ftdiv)
  6414  0E39  0821               	movf	(1+(?___ftpack)),w
  6415  0E3A  00A9               	movwf	(?___ftdiv+1)
  6416  0E3B  0822               	movf	(2+(?___ftpack)),w
  6417  0E3C  00AA               	movwf	(?___ftdiv+2)
  6418  0E3D  2E3E               	goto	l2964
  6419                           	
  6420  0E3E                     l6905:	
  6421                           	line	78
  6422                           	
  6423  0E3E                     l2964:	
  6424  0E3E  0008               	return
  6425                           	opt stack 0
  6426                           GLOBAL	__end_of___ftdiv
  6427  0E3F                     	__end_of___ftdiv:
  6428 ;; =============== function ___ftdiv ends ============
  6429                           
  6430                           	signat	___ftdiv,8315
  6431                           	global	___ftadd
  6432                           psect	text1253,local,class=CODE,delta=2
  6433                           global __ptext1253
  6434  062E                     __ptext1253:
  6435                           
  6436 ;; *************** function ___ftadd *****************
  6437 ;; Defined at:
  6438 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  f1              3   31[BANK0 ] float 
  6441 ;;  f2              3   34[BANK0 ] float 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  exp1            1   43[BANK0 ] unsigned char 
  6444 ;;  exp2            1   42[BANK0 ] unsigned char 
  6445 ;;  sign            1   41[BANK0 ] unsigned char 
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  3   31[BANK0 ] float 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2, status,0, pclath, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6455 ;;      Params:         0       6       0       0       0
  6456 ;;      Locals:         0       3       0       0       0
  6457 ;;      Temps:          0       4       0       0       0
  6458 ;;      Totals:         0      13       0       0       0
  6459 ;;Total ram usage:       13 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    2
  6462 ;; This function calls:
  6463 ;;		___ftpack
  6464 ;; This function is called by:
  6465 ;;		_main
  6466 ;;		_ftoa
  6467 ;;		___ftsub
  6468 ;;		_floor
  6469 ;;		_log
  6470 ;;		_eval_poly
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           psect	text1253
  6474                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  6475                           	line	87
  6476                           	global	__size_of___ftadd
  6477  0146                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  6478                           	
  6479  062E                     ___ftadd:	
  6480                           	opt	stack 1
  6481                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6482                           	line	90
  6483                           	
  6484  062E                     l6795:	
  6485  062E  1283               	bcf	status, 5	;RP0=0, select bank0
  6486  062F  1303               	bcf	status, 6	;RP1=0, select bank0
  6487  0630  083F               	movf	(___ftadd@f1),w
  6488  0631  00C5               	movwf	((??___ftadd+0)+0)
  6489  0632  0840               	movf	(___ftadd@f1+1),w
  6490  0633  00C6               	movwf	((??___ftadd+0)+0+1)
  6491  0634  0841               	movf	(___ftadd@f1+2),w
  6492  0635  00C7               	movwf	((??___ftadd+0)+0+2)
  6493  0636  1003               	clrc
  6494  0637  0D46               	rlf	(??___ftadd+0)+1,w
  6495  0638  0D47               	rlf	(??___ftadd+0)+2,w
  6496  0639  00C8               	movwf	(??___ftadd+3)+0
  6497  063A  0848               	movf	(??___ftadd+3)+0,w
  6498  063B  00CB               	movwf	(___ftadd@exp1)
  6499                           	line	91
  6500  063C  0842               	movf	(___ftadd@f2),w
  6501  063D  00C5               	movwf	((??___ftadd+0)+0)
  6502  063E  0843               	movf	(___ftadd@f2+1),w
  6503  063F  00C6               	movwf	((??___ftadd+0)+0+1)
  6504  0640  0844               	movf	(___ftadd@f2+2),w
  6505  0641  00C7               	movwf	((??___ftadd+0)+0+2)
  6506  0642  1003               	clrc
  6507  0643  0D46               	rlf	(??___ftadd+0)+1,w
  6508  0644  0D47               	rlf	(??___ftadd+0)+2,w
  6509  0645  00C8               	movwf	(??___ftadd+3)+0
  6510  0646  0848               	movf	(??___ftadd+3)+0,w
  6511  0647  00CA               	movwf	(___ftadd@exp2)
  6512                           	line	92
  6513                           	
  6514  0648                     l6797:	
  6515  0648  084B               	movf	(___ftadd@exp1),w
  6516  0649  1D03               	skipz
  6517  064A  2E4C               	goto	u4710
  6518  064B  2E5D               	goto	l6803
  6519  064C                     u4710:
  6520                           	
  6521  064C                     l6799:	
  6522  064C  084A               	movf	(___ftadd@exp2),w
  6523  064D  024B               	subwf	(___ftadd@exp1),w
  6524  064E  1803               	skipnc
  6525  064F  2E51               	goto	u4721
  6526  0650  2E52               	goto	u4720
  6527  0651                     u4721:
  6528  0651  2E65               	goto	l6807
  6529  0652                     u4720:
  6530                           	
  6531  0652                     l6801:	
  6532  0652  034B               	decf	(___ftadd@exp1),w
  6533  0653  3AFF               	xorlw	0ffh
  6534  0654  074A               	addwf	(___ftadd@exp2),w
  6535  0655  00C5               	movwf	(??___ftadd+0)+0
  6536  0656  3019               	movlw	(019h)
  6537  0657  0245               	subwf	0+(??___ftadd+0)+0,w
  6538  0658  1C03               	skipc
  6539  0659  2E5B               	goto	u4731
  6540  065A  2E5C               	goto	u4730
  6541  065B                     u4731:
  6542  065B  2E65               	goto	l6807
  6543  065C                     u4730:
  6544  065C  2E5D               	goto	l6803
  6545                           	
  6546  065D                     l2921:	
  6547                           	line	93
  6548                           	
  6549  065D                     l6803:	
  6550  065D  0842               	movf	(___ftadd@f2),w
  6551  065E  00BF               	movwf	(?___ftadd)
  6552  065F  0843               	movf	(___ftadd@f2+1),w
  6553  0660  00C0               	movwf	(?___ftadd+1)
  6554  0661  0844               	movf	(___ftadd@f2+2),w
  6555  0662  00C1               	movwf	(?___ftadd+2)
  6556  0663  2F73               	goto	l2922
  6557                           	
  6558  0664                     l6805:	
  6559  0664  2F73               	goto	l2922
  6560                           	
  6561  0665                     l2919:	
  6562                           	line	94
  6563                           	
  6564  0665                     l6807:	
  6565  0665  084A               	movf	(___ftadd@exp2),w
  6566  0666  1D03               	skipz
  6567  0667  2E69               	goto	u4740
  6568  0668  2E79               	goto	l2925
  6569  0669                     u4740:
  6570                           	
  6571  0669                     l6809:	
  6572  0669  084B               	movf	(___ftadd@exp1),w
  6573  066A  024A               	subwf	(___ftadd@exp2),w
  6574  066B  1803               	skipnc
  6575  066C  2E6E               	goto	u4751
  6576  066D  2E6F               	goto	u4750
  6577  066E                     u4751:
  6578  066E  2E7A               	goto	l6813
  6579  066F                     u4750:
  6580                           	
  6581  066F                     l6811:	
  6582  066F  034A               	decf	(___ftadd@exp2),w
  6583  0670  3AFF               	xorlw	0ffh
  6584  0671  074B               	addwf	(___ftadd@exp1),w
  6585  0672  00C5               	movwf	(??___ftadd+0)+0
  6586  0673  3019               	movlw	(019h)
  6587  0674  0245               	subwf	0+(??___ftadd+0)+0,w
  6588  0675  1C03               	skipc
  6589  0676  2E78               	goto	u4761
  6590  0677  2E79               	goto	u4760
  6591  0678                     u4761:
  6592  0678  2E7A               	goto	l6813
  6593  0679                     u4760:
  6594                           	
  6595  0679                     l2925:	
  6596                           	line	95
  6597  0679  2F73               	goto	l2922
  6598                           	
  6599  067A                     l2923:	
  6600                           	line	96
  6601                           	
  6602  067A                     l6813:	
  6603  067A  3006               	movlw	(06h)
  6604  067B  00C5               	movwf	(??___ftadd+0)+0
  6605  067C  0845               	movf	(??___ftadd+0)+0,w
  6606  067D  00C9               	movwf	(___ftadd@sign)
  6607                           	line	97
  6608                           	
  6609  067E                     l6815:	
  6610  067E  1FC1               	btfss	(___ftadd@f1+2),(23)&7
  6611  067F  2E81               	goto	u4771
  6612  0680  2E82               	goto	u4770
  6613  0681                     u4771:
  6614  0681  2E83               	goto	l2926
  6615  0682                     u4770:
  6616                           	line	98
  6617                           	
  6618  0682                     l6817:	
  6619  0682  17C9               	bsf	(___ftadd@sign)+(7/8),(7)&7
  6620                           	
  6621  0683                     l2926:	
  6622                           	line	99
  6623  0683  1FC4               	btfss	(___ftadd@f2+2),(23)&7
  6624  0684  2E86               	goto	u4781
  6625  0685  2E87               	goto	u4780
  6626  0686                     u4781:
  6627  0686  2E88               	goto	l2927
  6628  0687                     u4780:
  6629                           	line	100
  6630                           	
  6631  0687                     l6819:	
  6632  0687  1749               	bsf	(___ftadd@sign)+(6/8),(6)&7
  6633                           	
  6634  0688                     l2927:	
  6635                           	line	101
  6636  0688  17C0               	bsf	(___ftadd@f1)+(15/8),(15)&7
  6637                           	line	102
  6638                           	
  6639  0689                     l6821:	
  6640  0689  30FF               	movlw	0FFh
  6641  068A  05BF               	andwf	(___ftadd@f1),f
  6642  068B  30FF               	movlw	0FFh
  6643  068C  05C0               	andwf	(___ftadd@f1+1),f
  6644  068D  3000               	movlw	0
  6645  068E  05C1               	andwf	(___ftadd@f1+2),f
  6646                           	line	103
  6647                           	
  6648  068F                     l6823:	
  6649  068F  17C3               	bsf	(___ftadd@f2)+(15/8),(15)&7
  6650                           	line	104
  6651  0690  30FF               	movlw	0FFh
  6652  0691  05C2               	andwf	(___ftadd@f2),f
  6653  0692  30FF               	movlw	0FFh
  6654  0693  05C3               	andwf	(___ftadd@f2+1),f
  6655  0694  3000               	movlw	0
  6656  0695  05C4               	andwf	(___ftadd@f2+2),f
  6657                           	line	106
  6658  0696  084A               	movf	(___ftadd@exp2),w
  6659  0697  024B               	subwf	(___ftadd@exp1),w
  6660  0698  1803               	skipnc
  6661  0699  2E9B               	goto	u4791
  6662  069A  2E9C               	goto	u4790
  6663  069B                     u4791:
  6664  069B  2ECD               	goto	l6835
  6665  069C                     u4790:
  6666  069C  2E9D               	goto	l6825
  6667                           	line	109
  6668                           	
  6669  069D                     l2929:	
  6670                           	line	110
  6671                           	
  6672  069D                     l6825:	
  6673  069D  3001               	movlw	01h
  6674  069E                     u4805:
  6675  069E  1003               	clrc
  6676  069F  0DC2               	rlf	(___ftadd@f2),f
  6677  06A0  0DC3               	rlf	(___ftadd@f2+1),f
  6678  06A1  0DC4               	rlf	(___ftadd@f2+2),f
  6679  06A2  3EFF               	addlw	-1
  6680  06A3  1D03               	skipz
  6681  06A4  2E9E               	goto	u4805
  6682                           	line	111
  6683  06A5  3001               	movlw	low(01h)
  6684  06A6  02CA               	subwf	(___ftadd@exp2),f
  6685                           	line	112
  6686                           	
  6687  06A7                     l6827:	
  6688  06A7  084A               	movf	(___ftadd@exp2),w
  6689  06A8  064B               	xorwf	(___ftadd@exp1),w
  6690  06A9  1903               	skipnz
  6691  06AA  2EAC               	goto	u4811
  6692  06AB  2EAD               	goto	u4810
  6693  06AC                     u4811:
  6694  06AC  2EC5               	goto	l6833
  6695  06AD                     u4810:
  6696                           	
  6697  06AD                     l6829:	
  6698  06AD  3001               	movlw	low(01h)
  6699  06AE  02C9               	subwf	(___ftadd@sign),f
  6700  06AF  0849               	movf	((___ftadd@sign)),w
  6701  06B0  3907               	andlw	07h
  6702  06B1  1D03               	btfss	status,2
  6703  06B2  2EB4               	goto	u4821
  6704  06B3  2EB5               	goto	u4820
  6705  06B4                     u4821:
  6706  06B4  2E9D               	goto	l6825
  6707  06B5                     u4820:
  6708  06B5  2EC5               	goto	l6833
  6709                           	
  6710  06B6                     l2931:	
  6711  06B6  2EC5               	goto	l6833
  6712                           	
  6713  06B7                     l2932:	
  6714                           	line	113
  6715  06B7  2EC5               	goto	l6833
  6716                           	
  6717  06B8                     l2934:	
  6718                           	line	114
  6719                           	
  6720  06B8                     l6831:	
  6721  06B8  3001               	movlw	01h
  6722  06B9                     u4835:
  6723  06B9  1003               	clrc
  6724  06BA  0CC1               	rrf	(___ftadd@f1+2),f
  6725  06BB  0CC0               	rrf	(___ftadd@f1+1),f
  6726  06BC  0CBF               	rrf	(___ftadd@f1),f
  6727  06BD  3EFF               	addlw	-1
  6728  06BE  1D03               	skipz
  6729  06BF  2EB9               	goto	u4835
  6730                           
  6731                           	line	115
  6732  06C0  3001               	movlw	(01h)
  6733  06C1  00C5               	movwf	(??___ftadd+0)+0
  6734  06C2  0845               	movf	(??___ftadd+0)+0,w
  6735  06C3  07CB               	addwf	(___ftadd@exp1),f
  6736  06C4  2EC5               	goto	l6833
  6737                           	line	116
  6738                           	
  6739  06C5                     l2933:	
  6740                           	line	113
  6741                           	
  6742  06C5                     l6833:	
  6743  06C5  084B               	movf	(___ftadd@exp1),w
  6744  06C6  064A               	xorwf	(___ftadd@exp2),w
  6745  06C7  1D03               	skipz
  6746  06C8  2ECA               	goto	u4841
  6747  06C9  2ECB               	goto	u4840
  6748  06CA                     u4841:
  6749  06CA  2EB8               	goto	l6831
  6750  06CB                     u4840:
  6751  06CB  2F04               	goto	l2936
  6752                           	
  6753  06CC                     l2935:	
  6754                           	line	117
  6755  06CC  2F04               	goto	l2936
  6756                           	
  6757  06CD                     l2928:	
  6758                           	
  6759  06CD                     l6835:	
  6760  06CD  084B               	movf	(___ftadd@exp1),w
  6761  06CE  024A               	subwf	(___ftadd@exp2),w
  6762  06CF  1803               	skipnc
  6763  06D0  2ED2               	goto	u4851
  6764  06D1  2ED3               	goto	u4850
  6765  06D2                     u4851:
  6766  06D2  2F04               	goto	l2936
  6767  06D3                     u4850:
  6768  06D3  2ED4               	goto	l6837
  6769                           	line	120
  6770                           	
  6771  06D4                     l2938:	
  6772                           	line	121
  6773                           	
  6774  06D4                     l6837:	
  6775  06D4  3001               	movlw	01h
  6776  06D5                     u4865:
  6777  06D5  1003               	clrc
  6778  06D6  0DBF               	rlf	(___ftadd@f1),f
  6779  06D7  0DC0               	rlf	(___ftadd@f1+1),f
  6780  06D8  0DC1               	rlf	(___ftadd@f1+2),f
  6781  06D9  3EFF               	addlw	-1
  6782  06DA  1D03               	skipz
  6783  06DB  2ED5               	goto	u4865
  6784                           	line	122
  6785  06DC  3001               	movlw	low(01h)
  6786  06DD  02CB               	subwf	(___ftadd@exp1),f
  6787                           	line	123
  6788                           	
  6789  06DE                     l6839:	
  6790  06DE  084A               	movf	(___ftadd@exp2),w
  6791  06DF  064B               	xorwf	(___ftadd@exp1),w
  6792  06E0  1903               	skipnz
  6793  06E1  2EE3               	goto	u4871
  6794  06E2  2EE4               	goto	u4870
  6795  06E3                     u4871:
  6796  06E3  2EFC               	goto	l6845
  6797  06E4                     u4870:
  6798                           	
  6799  06E4                     l6841:	
  6800  06E4  3001               	movlw	low(01h)
  6801  06E5  02C9               	subwf	(___ftadd@sign),f
  6802  06E6  0849               	movf	((___ftadd@sign)),w
  6803  06E7  3907               	andlw	07h
  6804  06E8  1D03               	btfss	status,2
  6805  06E9  2EEB               	goto	u4881
  6806  06EA  2EEC               	goto	u4880
  6807  06EB                     u4881:
  6808  06EB  2ED4               	goto	l6837
  6809  06EC                     u4880:
  6810  06EC  2EFC               	goto	l6845
  6811                           	
  6812  06ED                     l2940:	
  6813  06ED  2EFC               	goto	l6845
  6814                           	
  6815  06EE                     l2941:	
  6816                           	line	124
  6817  06EE  2EFC               	goto	l6845
  6818                           	
  6819  06EF                     l2943:	
  6820                           	line	125
  6821                           	
  6822  06EF                     l6843:	
  6823  06EF  3001               	movlw	01h
  6824  06F0                     u4895:
  6825  06F0  1003               	clrc
  6826  06F1  0CC4               	rrf	(___ftadd@f2+2),f
  6827  06F2  0CC3               	rrf	(___ftadd@f2+1),f
  6828  06F3  0CC2               	rrf	(___ftadd@f2),f
  6829  06F4  3EFF               	addlw	-1
  6830  06F5  1D03               	skipz
  6831  06F6  2EF0               	goto	u4895
  6832                           
  6833                           	line	126
  6834  06F7  3001               	movlw	(01h)
  6835  06F8  00C5               	movwf	(??___ftadd+0)+0
  6836  06F9  0845               	movf	(??___ftadd+0)+0,w
  6837  06FA  07CA               	addwf	(___ftadd@exp2),f
  6838  06FB  2EFC               	goto	l6845
  6839                           	line	127
  6840                           	
  6841  06FC                     l2942:	
  6842                           	line	124
  6843                           	
  6844  06FC                     l6845:	
  6845  06FC  084B               	movf	(___ftadd@exp1),w
  6846  06FD  064A               	xorwf	(___ftadd@exp2),w
  6847  06FE  1D03               	skipz
  6848  06FF  2F01               	goto	u4901
  6849  0700  2F02               	goto	u4900
  6850  0701                     u4901:
  6851  0701  2EEF               	goto	l6843
  6852  0702                     u4900:
  6853  0702  2F04               	goto	l2936
  6854                           	
  6855  0703                     l2944:	
  6856  0703  2F04               	goto	l2936
  6857                           	line	128
  6858                           	
  6859  0704                     l2937:	
  6860                           	line	129
  6861                           	
  6862  0704                     l2936:	
  6863  0704  1FC9               	btfss	(___ftadd@sign),(7)&7
  6864  0705  2F07               	goto	u4911
  6865  0706  2F08               	goto	u4910
  6866  0707                     u4911:
  6867  0707  2F19               	goto	l6849
  6868  0708                     u4910:
  6869                           	line	131
  6870                           	
  6871  0708                     l6847:	
  6872  0708  30FF               	movlw	0FFh
  6873  0709  06BF               	xorwf	(___ftadd@f1),f
  6874  070A  30FF               	movlw	0FFh
  6875  070B  06C0               	xorwf	(___ftadd@f1+1),f
  6876  070C  30FF               	movlw	0FFh
  6877  070D  06C1               	xorwf	(___ftadd@f1+2),f
  6878                           	line	132
  6879  070E  3001               	movlw	01h
  6880  070F  07BF               	addwf	(___ftadd@f1),f
  6881  0710  3000               	movlw	0
  6882  0711  1803               	skipnc
  6883  0712  3001               movlw 1
  6884  0713  07C0               	addwf	(___ftadd@f1+1),f
  6885  0714  3000               	movlw	0
  6886  0715  1803               	skipnc
  6887  0716  3001               movlw 1
  6888  0717  07C1               	addwf	(___ftadd@f1+2),f
  6889  0718  2F19               	goto	l6849
  6890                           	line	133
  6891                           	
  6892  0719                     l2945:	
  6893                           	line	134
  6894                           	
  6895  0719                     l6849:	
  6896  0719  1F49               	btfss	(___ftadd@sign),(6)&7
  6897  071A  2F1C               	goto	u4921
  6898  071B  2F1D               	goto	u4920
  6899  071C                     u4921:
  6900  071C  2F2E               	goto	l6853
  6901  071D                     u4920:
  6902                           	line	136
  6903                           	
  6904  071D                     l6851:	
  6905  071D  30FF               	movlw	0FFh
  6906  071E  06C2               	xorwf	(___ftadd@f2),f
  6907  071F  30FF               	movlw	0FFh
  6908  0720  06C3               	xorwf	(___ftadd@f2+1),f
  6909  0721  30FF               	movlw	0FFh
  6910  0722  06C4               	xorwf	(___ftadd@f2+2),f
  6911                           	line	137
  6912  0723  3001               	movlw	01h
  6913  0724  07C2               	addwf	(___ftadd@f2),f
  6914  0725  3000               	movlw	0
  6915  0726  1803               	skipnc
  6916  0727  3001               movlw 1
  6917  0728  07C3               	addwf	(___ftadd@f2+1),f
  6918  0729  3000               	movlw	0
  6919  072A  1803               	skipnc
  6920  072B  3001               movlw 1
  6921  072C  07C4               	addwf	(___ftadd@f2+2),f
  6922  072D  2F2E               	goto	l6853
  6923                           	line	138
  6924                           	
  6925  072E                     l2946:	
  6926                           	line	139
  6927                           	
  6928  072E                     l6853:	
  6929  072E  01C9               	clrf	(___ftadd@sign)
  6930                           	line	140
  6931  072F  083F               	movf	(___ftadd@f1),w
  6932  0730  07C2               	addwf	(___ftadd@f2),f
  6933  0731  0840               	movf	(___ftadd@f1+1),w
  6934  0732  1103               	clrz
  6935  0733  1803               	skipnc
  6936  0734  0A40               	incf	(___ftadd@f1+1),w
  6937  0735  1903               	skipnz
  6938  0736  2F38               	goto	u4931
  6939  0737  07C3               	addwf	(___ftadd@f2+1),f
  6940  0738                     u4931:
  6941  0738  0841               	movf	(___ftadd@f1+2),w
  6942  0739  1103               	clrz
  6943  073A  1803               	skipnc
  6944  073B  0A41               	incf	(___ftadd@f1+2),w
  6945  073C  1903               	skipnz
  6946  073D  2F3F               	goto	u4932
  6947  073E  07C4               	addwf	(___ftadd@f2+2),f
  6948  073F                     u4932:
  6949                           
  6950                           	line	141
  6951                           	
  6952  073F                     l6855:	
  6953  073F  1FC4               	btfss	(___ftadd@f2+2),(23)&7
  6954  0740  2F42               	goto	u4941
  6955  0741  2F43               	goto	u4940
  6956  0742                     u4941:
  6957  0742  2F57               	goto	l6861
  6958  0743                     u4940:
  6959                           	line	142
  6960                           	
  6961  0743                     l6857:	
  6962  0743  30FF               	movlw	0FFh
  6963  0744  06C2               	xorwf	(___ftadd@f2),f
  6964  0745  30FF               	movlw	0FFh
  6965  0746  06C3               	xorwf	(___ftadd@f2+1),f
  6966  0747  30FF               	movlw	0FFh
  6967  0748  06C4               	xorwf	(___ftadd@f2+2),f
  6968                           	line	143
  6969  0749  3001               	movlw	01h
  6970  074A  07C2               	addwf	(___ftadd@f2),f
  6971  074B  3000               	movlw	0
  6972  074C  1803               	skipnc
  6973  074D  3001               movlw 1
  6974  074E  07C3               	addwf	(___ftadd@f2+1),f
  6975  074F  3000               	movlw	0
  6976  0750  1803               	skipnc
  6977  0751  3001               movlw 1
  6978  0752  07C4               	addwf	(___ftadd@f2+2),f
  6979                           	line	144
  6980                           	
  6981  0753                     l6859:	
  6982  0753  01C9               	clrf	(___ftadd@sign)
  6983  0754  1403               	bsf	status,0
  6984  0755  0DC9               	rlf	(___ftadd@sign),f
  6985  0756  2F57               	goto	l6861
  6986                           	line	145
  6987                           	
  6988  0757                     l2947:	
  6989                           	line	146
  6990                           	
  6991  0757                     l6861:	
  6992  0757  0842               	movf	(___ftadd@f2),w
  6993  0758  00A0               	movwf	(?___ftpack)
  6994  0759  0843               	movf	(___ftadd@f2+1),w
  6995  075A  00A1               	movwf	(?___ftpack+1)
  6996  075B  0844               	movf	(___ftadd@f2+2),w
  6997  075C  00A2               	movwf	(?___ftpack+2)
  6998  075D  084B               	movf	(___ftadd@exp1),w
  6999  075E  00C5               	movwf	(??___ftadd+0)+0
  7000  075F  0845               	movf	(??___ftadd+0)+0,w
  7001  0760  00A3               	movwf	0+(?___ftpack)+03h
  7002  0761  0849               	movf	(___ftadd@sign),w
  7003  0762  00C6               	movwf	(??___ftadd+1)+0
  7004  0763  0846               	movf	(??___ftadd+1)+0,w
  7005  0764  00A4               	movwf	0+(?___ftpack)+04h
  7006  0765  120A  158A  2269   	fcall	___ftpack
              120A  118A         
  7007  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  7008  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  7009  076C  0820               	movf	(0+(?___ftpack)),w
  7010  076D  00BF               	movwf	(?___ftadd)
  7011  076E  0821               	movf	(1+(?___ftpack)),w
  7012  076F  00C0               	movwf	(?___ftadd+1)
  7013  0770  0822               	movf	(2+(?___ftpack)),w
  7014  0771  00C1               	movwf	(?___ftadd+2)
  7015  0772  2F73               	goto	l2922
  7016                           	
  7017  0773                     l6863:	
  7018                           	line	148
  7019                           	
  7020  0773                     l2922:	
  7021  0773  0008               	return
  7022                           	opt stack 0
  7023                           GLOBAL	__end_of___ftadd
  7024  0774                     	__end_of___ftadd:
  7025 ;; =============== function ___ftadd ends ============
  7026                           
  7027                           	signat	___ftadd,8315
  7028                           	global	_intToStr
  7029                           psect	text1254,local,class=CODE,delta=2
  7030                           global __ptext1254
  7031  0774                     __ptext1254:
  7032                           
  7033 ;; *************** function _intToStr *****************
  7034 ;; Defined at:
  7035 ;;		line 24 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \string.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  x               2   14[BANK0 ] unsigned int 
  7038 ;;  str             1   16[BANK0 ] PTR unsigned char 
  7039 ;;		 -> str(10), 
  7040 ;;  d               2   17[BANK0 ] int 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  i               2   21[BANK0 ] unsigned int 
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  2   14[BANK0 ] unsigned int 
  7045 ;; Registers used:
  7046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7052 ;;      Params:         0       5       0       0       0
  7053 ;;      Locals:         0       2       0       0       0
  7054 ;;      Temps:          0       2       0       0       0
  7055 ;;      Totals:         0       9       0       0       0
  7056 ;;Total ram usage:        9 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:    2
  7059 ;; This function calls:
  7060 ;;		___lwmod
  7061 ;;		___lwdiv
  7062 ;;		_reverse
  7063 ;; This function is called by:
  7064 ;;		_ftoa
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           psect	text1254
  7068                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\string.c"
  7069                           	line	24
  7070                           	global	__size_of_intToStr
  7071  0080                     	__size_of_intToStr	equ	__end_of_intToStr-_intToStr
  7072                           	
  7073  0774                     _intToStr:	
  7074                           	opt	stack 4
  7075                           ; Regs used in _intToStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7076                           	line	25
  7077                           	
  7078  0774                     l6771:	
  7079                           ;string.c: 25: unsigned int i = 0;
  7080  0774  1283               	bcf	status, 5	;RP0=0, select bank0
  7081  0775  1303               	bcf	status, 6	;RP1=0, select bank0
  7082  0776  01B5               	clrf	(intToStr@i)
  7083  0777  01B6               	clrf	(intToStr@i+1)
  7084                           	line	26
  7085                           ;string.c: 26: while (x)
  7086  0778  2FB3               	goto	l6779
  7087                           	
  7088  0779                     l2166:	
  7089                           	line	28
  7090                           	
  7091  0779                     l6773:	
  7092                           ;string.c: 27: {
  7093                           ;string.c: 28: str[i++] = (x%10) + '0';
  7094  0779  300A               	movlw	low(0Ah)
  7095  077A  00A0               	movwf	(?___lwmod)
  7096  077B  3000               	movlw	high(0Ah)
  7097  077C  00A1               	movwf	((?___lwmod))+1
  7098  077D  082F               	movf	(intToStr@x+1),w
  7099  077E  01A3               	clrf	1+(?___lwmod)+02h
  7100  077F  07A3               	addwf	1+(?___lwmod)+02h
  7101  0780  082E               	movf	(intToStr@x),w
  7102  0781  01A2               	clrf	0+(?___lwmod)+02h
  7103  0782  07A2               	addwf	0+(?___lwmod)+02h
  7104                           
  7105  0783  160A  118A  27BA   	fcall	___lwmod
              120A  118A         
  7106  0788  1283               	bcf	status, 5	;RP0=0, select bank0
  7107  0789  1303               	bcf	status, 6	;RP1=0, select bank0
  7108  078A  0820               	movf	(0+(?___lwmod)),w
  7109  078B  3E30               	addlw	030h
  7110  078C  00B3               	movwf	(??_intToStr+0)+0
  7111  078D  0835               	movf	(intToStr@i),w
  7112  078E  0730               	addwf	(intToStr@str),w
  7113  078F  00B4               	movwf	(??_intToStr+1)+0
  7114  0790  0834               	movf	0+(??_intToStr+1)+0,w
  7115  0791  0084               	movwf	fsr0
  7116  0792  0833               	movf	(??_intToStr+0)+0,w
  7117  0793  1383               	bcf	status, 7	;select IRP bank0
  7118  0794  0080               	movwf	indf
  7119                           	
  7120  0795                     l6775:	
  7121  0795  3001               	movlw	low(01h)
  7122  0796  07B5               	addwf	(intToStr@i),f
  7123  0797  1803               	skipnc
  7124  0798  0AB6               	incf	(intToStr@i+1),f
  7125  0799  3000               	movlw	high(01h)
  7126  079A  07B6               	addwf	(intToStr@i+1),f
  7127                           	line	29
  7128                           	
  7129  079B                     l6777:	
  7130                           ;string.c: 29: x = x/10;
  7131  079B  300A               	movlw	low(0Ah)
  7132  079C  00A0               	movwf	(?___lwdiv)
  7133  079D  3000               	movlw	high(0Ah)
  7134  079E  00A1               	movwf	((?___lwdiv))+1
  7135  079F  082F               	movf	(intToStr@x+1),w
  7136  07A0  01A3               	clrf	1+(?___lwdiv)+02h
  7137  07A1  07A3               	addwf	1+(?___lwdiv)+02h
  7138  07A2  082E               	movf	(intToStr@x),w
  7139  07A3  01A2               	clrf	0+(?___lwdiv)+02h
  7140  07A4  07A2               	addwf	0+(?___lwdiv)+02h
  7141                           
  7142  07A5  120A  158A  2101   	fcall	___lwdiv
              120A  118A         
  7143  07AA  1283               	bcf	status, 5	;RP0=0, select bank0
  7144  07AB  1303               	bcf	status, 6	;RP1=0, select bank0
  7145  07AC  0821               	movf	(1+(?___lwdiv)),w
  7146  07AD  01AF               	clrf	(intToStr@x+1)
  7147  07AE  07AF               	addwf	(intToStr@x+1)
  7148  07AF  0820               	movf	(0+(?___lwdiv)),w
  7149  07B0  01AE               	clrf	(intToStr@x)
  7150  07B1  07AE               	addwf	(intToStr@x)
  7151                           
  7152  07B2  2FB3               	goto	l6779
  7153                           	line	30
  7154                           	
  7155  07B3                     l2165:	
  7156                           	line	26
  7157                           	
  7158  07B3                     l6779:	
  7159  07B3  082F               	movf	((intToStr@x+1)),w
  7160  07B4  042E               	iorwf	((intToStr@x)),w
  7161  07B5  1D03               	skipz
  7162  07B6  2FB8               	goto	u4691
  7163  07B7  2FB9               	goto	u4690
  7164  07B8                     u4691:
  7165  07B8  2F79               	goto	l6773
  7166  07B9                     u4690:
  7167  07B9  2FCC               	goto	l6785
  7168                           	
  7169  07BA                     l2167:	
  7170                           	line	34
  7171                           ;string.c: 30: }
  7172                           ;string.c: 34: while (i < d)
  7173  07BA  2FCC               	goto	l6785
  7174                           	
  7175  07BB                     l2169:	
  7176                           	line	35
  7177                           	
  7178  07BB                     l6781:	
  7179                           ;string.c: 35: str[i++] = '0';
  7180  07BB  3030               	movlw	(030h)
  7181  07BC  00B3               	movwf	(??_intToStr+0)+0
  7182  07BD  0835               	movf	(intToStr@i),w
  7183  07BE  0730               	addwf	(intToStr@str),w
  7184  07BF  00B4               	movwf	(??_intToStr+1)+0
  7185  07C0  0834               	movf	0+(??_intToStr+1)+0,w
  7186  07C1  0084               	movwf	fsr0
  7187  07C2  0833               	movf	(??_intToStr+0)+0,w
  7188  07C3  1383               	bcf	status, 7	;select IRP bank0
  7189  07C4  0080               	movwf	indf
  7190                           	
  7191  07C5                     l6783:	
  7192  07C5  3001               	movlw	low(01h)
  7193  07C6  07B5               	addwf	(intToStr@i),f
  7194  07C7  1803               	skipnc
  7195  07C8  0AB6               	incf	(intToStr@i+1),f
  7196  07C9  3000               	movlw	high(01h)
  7197  07CA  07B6               	addwf	(intToStr@i+1),f
  7198  07CB  2FCC               	goto	l6785
  7199                           	
  7200  07CC                     l2168:	
  7201                           	line	34
  7202                           	
  7203  07CC                     l6785:	
  7204  07CC  0832               	movf	(intToStr@d+1),w
  7205  07CD  0236               	subwf	(intToStr@i+1),w
  7206  07CE  1D03               	skipz
  7207  07CF  2FD2               	goto	u4705
  7208  07D0  0831               	movf	(intToStr@d),w
  7209  07D1  0235               	subwf	(intToStr@i),w
  7210  07D2                     u4705:
  7211  07D2  1C03               	skipc
  7212  07D3  2FD5               	goto	u4701
  7213  07D4  2FD6               	goto	u4700
  7214  07D5                     u4701:
  7215  07D5  2FBB               	goto	l6781
  7216  07D6                     u4700:
  7217  07D6  2FD7               	goto	l6787
  7218                           	
  7219  07D7                     l2170:	
  7220                           	line	37
  7221                           	
  7222  07D7                     l6787:	
  7223                           ;string.c: 37: reverse(str, i);
  7224  07D7  0836               	movf	(intToStr@i+1),w
  7225  07D8  01F5               	clrf	(?_reverse+1)
  7226  07D9  07F5               	addwf	(?_reverse+1)
  7227  07DA  0835               	movf	(intToStr@i),w
  7228  07DB  01F4               	clrf	(?_reverse)
  7229  07DC  07F4               	addwf	(?_reverse)
  7230                           
  7231  07DD  0830               	movf	(intToStr@str),w
  7232  07DE  120A  158A  2151   	fcall	_reverse
              120A  118A         
  7233                           	line	38
  7234                           	
  7235  07E3                     l6789:	
  7236                           ;string.c: 38: str[i] = '\0';
  7237  07E3  1283               	bcf	status, 5	;RP0=0, select bank0
  7238  07E4  1303               	bcf	status, 6	;RP1=0, select bank0
  7239  07E5  0835               	movf	(intToStr@i),w
  7240  07E6  0730               	addwf	(intToStr@str),w
  7241  07E7  00B3               	movwf	(??_intToStr+0)+0
  7242  07E8  0833               	movf	0+(??_intToStr+0)+0,w
  7243  07E9  0084               	movwf	fsr0
  7244  07EA  1383               	bcf	status, 7	;select IRP bank0
  7245  07EB  0180               	clrf	indf
  7246                           	line	39
  7247                           	
  7248  07EC                     l6791:	
  7249                           ;string.c: 39: return i;
  7250  07EC  0836               	movf	(intToStr@i+1),w
  7251  07ED  01AF               	clrf	(?_intToStr+1)
  7252  07EE  07AF               	addwf	(?_intToStr+1)
  7253  07EF  0835               	movf	(intToStr@i),w
  7254  07F0  01AE               	clrf	(?_intToStr)
  7255  07F1  07AE               	addwf	(?_intToStr)
  7256                           
  7257  07F2  2FF3               	goto	l2171
  7258                           	
  7259  07F3                     l6793:	
  7260                           	line	40
  7261                           	
  7262  07F3                     l2171:	
  7263  07F3  0008               	return
  7264                           	opt stack 0
  7265                           GLOBAL	__end_of_intToStr
  7266  07F4                     	__end_of_intToStr:
  7267 ;; =============== function _intToStr ends ============
  7268                           
  7269                           	signat	_intToStr,12410
  7270                           	global	_lcd_puts
  7271                           psect	text1255,local,class=CODE,delta=2
  7272                           global __ptext1255
  7273  16B9                     __ptext1255:
  7274                           
  7275 ;; *************** function _lcd_puts *****************
  7276 ;; Defined at:
  7277 ;;		line 37 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \lcd.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  s               2    2[BANK0 ] PTR const unsigned char 
  7280 ;;		 -> STR_2(12), STR_1(15), str(10), 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;		None               void
  7285 ;; Registers used:
  7286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7292 ;;      Params:         0       2       0       0       0
  7293 ;;      Locals:         0       0       0       0       0
  7294 ;;      Temps:          0       0       0       0       0
  7295 ;;      Totals:         0       2       0       0       0
  7296 ;;Total ram usage:        2 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; Hardware stack levels required when called:    2
  7299 ;; This function calls:
  7300 ;;		_lcd_write
  7301 ;; This function is called by:
  7302 ;;		_main
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           psect	text1255
  7306                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\lcd.c"
  7307                           	line	37
  7308                           	global	__size_of_lcd_puts
  7309  002B                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  7310                           	
  7311  16B9                     _lcd_puts:	
  7312                           	opt	stack 5
  7313                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7314                           	line	38
  7315                           	
  7316  16B9                     l6763:	
  7317                           ;lcd.c: 38: RE0 = 1;
  7318  16B9  1283               	bcf	status, 5	;RP0=0, select bank0
  7319  16BA  1303               	bcf	status, 6	;RP1=0, select bank0
  7320  16BB  1409               	bsf	(72/8),(72)&7
  7321                           	line	39
  7322                           ;lcd.c: 39: while(*s)
  7323  16BC  2ED4               	goto	l6769
  7324                           	
  7325  16BD                     l1452:	
  7326                           	line	40
  7327                           	
  7328  16BD                     l6765:	
  7329                           ;lcd.c: 40: lcd_write(*s++);
  7330  16BD  0823               	movf	(lcd_puts@s+1),w
  7331  16BE  00FF               	movwf	btemp+1
  7332  16BF  0822               	movf	(lcd_puts@s),w
  7333  16C0  0084               	movwf	fsr0
  7334  16C1  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7335  16C6  160A  118A  266E   	fcall	_lcd_write
              160A  118A         
  7336                           	
  7337  16CB                     l6767:	
  7338  16CB  3001               	movlw	low(01h)
  7339  16CC  1283               	bcf	status, 5	;RP0=0, select bank0
  7340  16CD  1303               	bcf	status, 6	;RP1=0, select bank0
  7341  16CE  07A2               	addwf	(lcd_puts@s),f
  7342  16CF  1803               	skipnc
  7343  16D0  0AA3               	incf	(lcd_puts@s+1),f
  7344  16D1  3000               	movlw	high(01h)
  7345  16D2  07A3               	addwf	(lcd_puts@s+1),f
  7346  16D3  2ED4               	goto	l6769
  7347                           	
  7348  16D4                     l1451:	
  7349                           	line	39
  7350                           	
  7351  16D4                     l6769:	
  7352  16D4  0823               	movf	(lcd_puts@s+1),w
  7353  16D5  00FF               	movwf	btemp+1
  7354  16D6  0822               	movf	(lcd_puts@s),w
  7355  16D7  0084               	movwf	fsr0
  7356  16D8  120A  158A  2000   	fcall	stringtab
              160A  118A         
  7357  16DD  3800               	iorlw	0
  7358  16DE  1D03               	skipz
  7359  16DF  2EE1               	goto	u4681
  7360  16E0  2EE2               	goto	u4680
  7361  16E1                     u4681:
  7362  16E1  2EBD               	goto	l6765
  7363  16E2                     u4680:
  7364  16E2  2EE3               	goto	l1454
  7365                           	
  7366  16E3                     l1453:	
  7367                           	line	41
  7368                           	
  7369  16E3                     l1454:	
  7370  16E3  0008               	return
  7371                           	opt stack 0
  7372                           GLOBAL	__end_of_lcd_puts
  7373  16E4                     	__end_of_lcd_puts:
  7374 ;; =============== function _lcd_puts ends ============
  7375                           
  7376                           	signat	_lcd_puts,4216
  7377                           	global	_lcd_goto
  7378                           psect	text1256,local,class=CODE,delta=2
  7379                           global __ptext1256
  7380  07F4                     __ptext1256:
  7381                           
  7382 ;; *************** function _lcd_goto *****************
  7383 ;; Defined at:
  7384 ;;		line 52 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \lcd.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  pos             1    wreg     unsigned char 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;  pos             1    5[COMMON] unsigned char 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;		None               void
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0, pclath, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7398 ;;      Params:         0       0       0       0       0
  7399 ;;      Locals:         1       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0
  7401 ;;      Totals:         1       0       0       0       0
  7402 ;;Total ram usage:        1 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    2
  7405 ;; This function calls:
  7406 ;;		_lcd_write
  7407 ;; This function is called by:
  7408 ;;		_main
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           psect	text1256
  7412                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\lcd.c"
  7413                           	line	52
  7414                           	global	__size_of_lcd_goto
  7415  000C                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  7416                           	
  7417  07F4                     _lcd_goto:	
  7418                           	opt	stack 5
  7419                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  7420                           ;lcd_goto@pos stored from wreg
  7421  07F4  00F5               	movwf	(lcd_goto@pos)
  7422                           	line	53
  7423                           	
  7424  07F5                     l6759:	
  7425                           ;lcd.c: 53: RE0 = 0;
  7426  07F5  1283               	bcf	status, 5	;RP0=0, select bank0
  7427  07F6  1303               	bcf	status, 6	;RP1=0, select bank0
  7428  07F7  1009               	bcf	(72/8),(72)&7
  7429                           	line	54
  7430                           	
  7431  07F8                     l6761:	
  7432                           ;lcd.c: 54: lcd_write(0x80+pos);
  7433  07F8  0875               	movf	(lcd_goto@pos),w
  7434  07F9  3E80               	addlw	080h
  7435  07FA  160A  118A  266E   	fcall	_lcd_write
              120A  118A         
  7436                           	line	55
  7437                           	
  7438  07FF                     l1463:	
  7439  07FF  0008               	return
  7440                           	opt stack 0
  7441                           GLOBAL	__end_of_lcd_goto
  7442  0800                     	__end_of_lcd_goto:
  7443 ;; =============== function _lcd_goto ends ============
  7444                           
  7445                           	signat	_lcd_goto,4216
  7446                           	global	_lcd_clear
  7447                           psect	text1257,local,class=CODE,delta=2
  7448                           global __ptext1257
  7449  15D0                     __ptext1257:
  7450                           
  7451 ;; *************** function _lcd_clear *****************
  7452 ;; Defined at:
  7453 ;;		line 31 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \lcd.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;		None               void
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, pclath, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7467 ;;      Params:         0       0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    2
  7474 ;; This function calls:
  7475 ;;		_lcd_write
  7476 ;;		_DelayMs
  7477 ;; This function is called by:
  7478 ;;		_main
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           psect	text1257
  7482                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\lcd.c"
  7483                           	line	31
  7484                           	global	__size_of_lcd_clear
  7485  0010                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  7486                           	
  7487  15D0                     _lcd_clear:	
  7488                           	opt	stack 5
  7489                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  7490                           	line	32
  7491                           	
  7492  15D0                     l6755:	
  7493                           ;lcd.c: 32: RE0 = 0;
  7494  15D0  1283               	bcf	status, 5	;RP0=0, select bank0
  7495  15D1  1303               	bcf	status, 6	;RP1=0, select bank0
  7496  15D2  1009               	bcf	(72/8),(72)&7
  7497                           	line	33
  7498                           	
  7499  15D3                     l6757:	
  7500                           ;lcd.c: 33: lcd_write(0x1);
  7501  15D3  3001               	movlw	(01h)
  7502  15D4  160A  118A  266E   	fcall	_lcd_write
              160A  118A         
  7503                           	line	34
  7504                           ;lcd.c: 34: DelayMs(2);
  7505  15D9  3002               	movlw	(02h)
  7506  15DA  160A  118A  264B   	fcall	_DelayMs
              160A  118A         
  7507                           	line	35
  7508                           	
  7509  15DF                     l1448:	
  7510  15DF  0008               	return
  7511                           	opt stack 0
  7512                           GLOBAL	__end_of_lcd_clear
  7513  15E0                     	__end_of_lcd_clear:
  7514 ;; =============== function _lcd_clear ends ============
  7515                           
  7516                           	signat	_lcd_clear,88
  7517                           	global	_lcd_init
  7518                           psect	text1258,local,class=CODE,delta=2
  7519                           global __ptext1258
  7520  09A2                     __ptext1258:
  7521                           
  7522 ;; *************** function _lcd_init *****************
  7523 ;; Defined at:
  7524 ;;		line 57 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \lcd.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;		None
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  _dcnt           1    4[BANK0 ] unsigned char 
  7529 ;;  _dcnt           1    3[BANK0 ] unsigned char 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;		None               void
  7532 ;; Registers used:
  7533 ;;		wreg, status,2, status,0, pclath, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7539 ;;      Params:         0       0       0       0       0
  7540 ;;      Locals:         0       2       0       0       0
  7541 ;;      Temps:          1       0       0       0       0
  7542 ;;      Totals:         1       2       0       0       0
  7543 ;;Total ram usage:        3 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    2
  7546 ;; This function calls:
  7547 ;;		_DelayMs
  7548 ;;		_lcd_write
  7549 ;; This function is called by:
  7550 ;;		_main
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           psect	text1258
  7554                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\lcd.c"
  7555                           	line	57
  7556                           	global	__size_of_lcd_init
  7557  0059                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  7558                           	
  7559  09A2                     _lcd_init:	
  7560                           	opt	stack 5
  7561                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7562                           	line	58
  7563                           	
  7564  09A2                     l6723:	
  7565                           ;lcd.c: 58: RE0 = 0;
  7566  09A2  1283               	bcf	status, 5	;RP0=0, select bank0
  7567  09A3  1303               	bcf	status, 6	;RP1=0, select bank0
  7568  09A4  1009               	bcf	(72/8),(72)&7
  7569                           	line	59
  7570                           	
  7571  09A5                     l6725:	
  7572                           ;lcd.c: 59: DelayMs(15);
  7573  09A5  300F               	movlw	(0Fh)
  7574  09A6  160A  118A  264B   	fcall	_DelayMs
              120A  158A         
  7575                           	line	60
  7576                           	
  7577  09AB                     l6727:	
  7578                           ;lcd.c: 60: PORTD = (0x3 << 4);
  7579  09AB  3030               	movlw	(030h)
  7580  09AC  1283               	bcf	status, 5	;RP0=0, select bank0
  7581  09AD  1303               	bcf	status, 6	;RP1=0, select bank0
  7582  09AE  0088               	movwf	(8)	;volatile
  7583                           	line	61
  7584                           	
  7585  09AF                     l6729:	
  7586                           ;lcd.c: 61: ((RE1 = 1),(RE1=0));
  7587  09AF  1489               	bsf	(73/8),(73)&7
  7588                           	
  7589  09B0                     l6731:	
  7590  09B0  1089               	bcf	(73/8),(73)&7
  7591                           	line	62
  7592                           	
  7593  09B1                     l6733:	
  7594                           ;lcd.c: 62: DelayMs(5);
  7595  09B1  3005               	movlw	(05h)
  7596  09B2  160A  118A  264B   	fcall	_DelayMs
              120A  158A         
  7597                           	line	63
  7598                           	
  7599  09B7                     l6735:	
  7600                           ;lcd.c: 63: ((RE1 = 1),(RE1=0));
  7601  09B7  1283               	bcf	status, 5	;RP0=0, select bank0
  7602  09B8  1303               	bcf	status, 6	;RP1=0, select bank0
  7603  09B9  1489               	bsf	(73/8),(73)&7
  7604                           	
  7605  09BA                     l6737:	
  7606  09BA  1089               	bcf	(73/8),(73)&7
  7607                           	line	64
  7608                           ;lcd.c: 64: { unsigned char _dcnt; _dcnt = (100)/((12*1000L)/(4*1000L))|1; while(--_dcnt
                                  != 0) continue; };
  7609  09BB  3021               	movlw	(021h)
  7610  09BC  00F5               	movwf	(??_lcd_init+0)+0
  7611  09BD  0875               	movf	(??_lcd_init+0)+0,w
  7612  09BE  00A3               	movwf	(lcd_init@_dcnt)
  7613  09BF  29C1               	goto	l6739
  7614                           	
  7615  09C0                     l1467:	
  7616  09C0  29C1               	goto	l6739
  7617                           	
  7618  09C1                     l1466:	
  7619                           	
  7620  09C1                     l6739:	
  7621  09C1  3001               	movlw	low(01h)
  7622  09C2  02A3               	subwf	(lcd_init@_dcnt),f
  7623  09C3  1D03               	btfss	status,2
  7624  09C4  29C6               	goto	u4661
  7625  09C5  29C7               	goto	u4660
  7626  09C6                     u4661:
  7627  09C6  29C1               	goto	l6739
  7628  09C7                     u4660:
  7629                           	
  7630  09C7                     l1468:	
  7631                           	line	65
  7632                           ;lcd.c: 65: ((RE1 = 1),(RE1=0));
  7633  09C7  1489               	bsf	(73/8),(73)&7
  7634  09C8  1089               	bcf	(73/8),(73)&7
  7635                           	line	66
  7636                           	
  7637  09C9                     l6741:	
  7638                           ;lcd.c: 66: DelayMs(5);
  7639  09C9  3005               	movlw	(05h)
  7640  09CA  160A  118A  264B   	fcall	_DelayMs
              120A  158A         
  7641                           	line	67
  7642                           	
  7643  09CF                     l6743:	
  7644                           ;lcd.c: 67: PORTD = (0x2 << 4);
  7645  09CF  3020               	movlw	(020h)
  7646  09D0  1283               	bcf	status, 5	;RP0=0, select bank0
  7647  09D1  1303               	bcf	status, 6	;RP1=0, select bank0
  7648  09D2  0088               	movwf	(8)	;volatile
  7649                           	line	68
  7650                           	
  7651  09D3                     l6745:	
  7652                           ;lcd.c: 68: ((RE1 = 1),(RE1=0));
  7653  09D3  1489               	bsf	(73/8),(73)&7
  7654                           	
  7655  09D4                     l6747:	
  7656  09D4  1089               	bcf	(73/8),(73)&7
  7657                           	line	69
  7658                           	
  7659  09D5                     l6749:	
  7660                           ;lcd.c: 69: { unsigned char _dcnt; _dcnt = (40)/((12*1000L)/(4*1000L))|1; while(--_dcnt 
                                 != 0) continue; };
  7661  09D5  300D               	movlw	(0Dh)
  7662  09D6  00F5               	movwf	(??_lcd_init+0)+0
  7663  09D7  0875               	movf	(??_lcd_init+0)+0,w
  7664  09D8  00A4               	movwf	(lcd_init@_dcnt_2131)
  7665  09D9  29DB               	goto	l6751
  7666                           	
  7667  09DA                     l1470:	
  7668  09DA  29DB               	goto	l6751
  7669                           	
  7670  09DB                     l1469:	
  7671                           	
  7672  09DB                     l6751:	
  7673  09DB  3001               	movlw	low(01h)
  7674  09DC  02A4               	subwf	(lcd_init@_dcnt_2131),f
  7675  09DD  1D03               	btfss	status,2
  7676  09DE  29E0               	goto	u4671
  7677  09DF  29E1               	goto	u4670
  7678  09E0                     u4671:
  7679  09E0  29DB               	goto	l6751
  7680  09E1                     u4670:
  7681  09E1  29E2               	goto	l6753
  7682                           	
  7683  09E2                     l1471:	
  7684                           	line	70
  7685                           	
  7686  09E2                     l6753:	
  7687                           ;lcd.c: 70: lcd_write(0x28);
  7688  09E2  3028               	movlw	(028h)
  7689  09E3  160A  118A  266E   	fcall	_lcd_write
              120A  158A         
  7690                           	line	71
  7691                           ;lcd.c: 71: lcd_write(0x08);
  7692  09E8  3008               	movlw	(08h)
  7693  09E9  160A  118A  266E   	fcall	_lcd_write
              120A  158A         
  7694                           	line	72
  7695                           ;lcd.c: 72: lcd_write(0x0F);
  7696  09EE  300F               	movlw	(0Fh)
  7697  09EF  160A  118A  266E   	fcall	_lcd_write
              120A  158A         
  7698                           	line	73
  7699                           ;lcd.c: 73: lcd_write(0x06);
  7700  09F4  3006               	movlw	(06h)
  7701  09F5  160A  118A  266E   	fcall	_lcd_write
              120A  158A         
  7702                           	line	74
  7703                           	
  7704  09FA                     l1472:	
  7705  09FA  0008               	return
  7706                           	opt stack 0
  7707                           GLOBAL	__end_of_lcd_init
  7708  09FB                     	__end_of_lcd_init:
  7709 ;; =============== function _lcd_init ends ============
  7710                           
  7711                           	signat	_lcd_init,88
  7712                           	global	_frexp
  7713                           psect	text1259,local,class=CODE,delta=2
  7714                           global __ptext1259
  7715  0868                     __ptext1259:
  7716                           
  7717 ;; *************** function _frexp *****************
  7718 ;; Defined at:
  7719 ;;		line 255 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  value           3    0[BANK0 ] unsigned char 
  7722 ;;  eptr            1    3[BANK0 ] PTR int 
  7723 ;;		 -> log@exp(2), floor@expon(2), 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  3    0[BANK0 ] PTR int 
  7728 ;; Registers used:
  7729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7735 ;;      Params:         0       4       0       0       0
  7736 ;;      Locals:         0       0       0       0       0
  7737 ;;      Temps:          2       0       0       0       0
  7738 ;;      Totals:         2       4       0       0       0
  7739 ;;Total ram usage:        6 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    1
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_floor
  7746 ;;		_log
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           psect	text1259
  7750                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\frexp.c"
  7751                           	line	255
  7752                           	global	__size_of_frexp
  7753  004C                     	__size_of_frexp	equ	__end_of_frexp-_frexp
  7754                           	
  7755  0868                     _frexp:	
  7756                           	opt	stack 2
  7757                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  7758                           	line	256
  7759                           	
  7760  0868                     l6695:	
  7761  0868  1283               	bcf	status, 5	;RP0=0, select bank0
  7762  0869  1303               	bcf	status, 6	;RP1=0, select bank0
  7763  086A  0822               	movf	(frexp@value+2),w
  7764  086B  0421               	iorwf	(frexp@value+1),w
  7765  086C  0420               	iorwf	(frexp@value),w
  7766  086D  1D03               	skipz
  7767  086E  2870               	goto	u4641
  7768  086F  2871               	goto	u4640
  7769  0870                     u4641:
  7770  0870  2881               	goto	l6703
  7771  0871                     u4640:
  7772                           	line	257
  7773                           	
  7774  0871                     l6697:	
  7775  0871  0823               	movf	(frexp@eptr),w
  7776  0872  0084               	movwf	fsr0
  7777  0873  3000               	movlw	low(0)
  7778  0874  1383               	bcf	status, 7	;select IRP bank0
  7779  0875  0080               	movwf	indf
  7780  0876  0A84               	incf	fsr0,f
  7781  0877  3000               	movlw	high(0)
  7782  0878  0080               	movwf	indf
  7783                           	line	258
  7784                           	
  7785  0879                     l6699:	
  7786  0879  3000               	movlw	0x0
  7787  087A  00A0               	movwf	(?_frexp)
  7788  087B  3000               	movlw	0x0
  7789  087C  00A1               	movwf	(?_frexp+1)
  7790  087D  3000               	movlw	0x0
  7791  087E  00A2               	movwf	(?_frexp+2)
  7792  087F  28B3               	goto	l3262
  7793                           	
  7794  0880                     l6701:	
  7795  0880  28B3               	goto	l3262
  7796                           	line	259
  7797                           	
  7798  0881                     l3261:	
  7799                           	line	261
  7800                           	
  7801  0881                     l6703:	
  7802  0881  0822               	movf	0+(frexp@value)+02h,w
  7803  0882  397F               	andlw	(1<<7)-1
  7804  0883  00F4               	movwf	(??_frexp+0)+0
  7805  0884  01F5               	clrf	(??_frexp+0)+0+1
  7806  0885  3001               	movlw	01h
  7807  0886  00FF               	movwf	btemp+1
  7808  0887                     u4655:
  7809  0887  1003               	clrc
  7810  0888  0DF4               	rlf	(??_frexp+0)+0,f
  7811  0889  0DF5               	rlf	(??_frexp+0)+1,f
  7812  088A  0BFF               	decfsz	btemp+1,f
  7813  088B  2887               	goto	u4655
  7814  088C  0823               	movf	(frexp@eptr),w
  7815  088D  0084               	movwf	fsr0
  7816  088E  0874               	movf	0+(??_frexp+0)+0,w
  7817  088F  1383               	bcf	status, 7	;select IRP bank0
  7818  0890  0080               	movwf	indf
  7819  0891  0A84               	incf	fsr0,f
  7820  0892  0875               	movf	1+(??_frexp+0)+0,w
  7821  0893  0080               	movwf	indf
  7822                           	line	262
  7823                           	
  7824  0894                     l6705:	
  7825  0894  0D21               	rlf	0+(frexp@value)+01h,w
  7826  0895  0D21               	rlf	0+(frexp@value)+01h,w
  7827  0896  3901               	andlw	1
  7828  0897  00F4               	movwf	(??_frexp+0)+0
  7829  0898  01F5               	clrf	(??_frexp+0)+0+1
  7830  0899  0823               	movf	(frexp@eptr),w
  7831  089A  0084               	movwf	fsr0
  7832  089B  0874               	movf	0+(??_frexp+0)+0,w
  7833  089C  0480               	iorwf	indf,f
  7834  089D  0A84               	incf	fsr0,f
  7835  089E  0875               	movf	1+(??_frexp+0)+0,w
  7836  089F  0480               	iorwf	indf,f
  7837                           	line	263
  7838                           	
  7839  08A0                     l6707:	
  7840  08A0  0823               	movf	(frexp@eptr),w
  7841  08A1  0084               	movwf	fsr0
  7842  08A2  3082               	movlw	low(-126)
  7843  08A3  0780               	addwf	indf,f
  7844  08A4  0F84               	incfsz	fsr0,f
  7845  08A5  0800               	movf	indf,w
  7846  08A6  1803               	skipnc
  7847  08A7  0A00               	incf	indf,w
  7848  08A8  00FF               	movwf	btemp+1
  7849  08A9  30FF               	movlw	high(-126)
  7850  08AA  077F               	addwf	btemp+1,w
  7851  08AB  0080               	movwf	indf
  7852  08AC  0384               	decf	fsr0,f
  7853                           	line	268
  7854                           	
  7855  08AD                     l6709:	
  7856  08AD  0822               	movf	0+(frexp@value)+02h,w
  7857  08AE  3980               	andlw	not (((1<<7)-1)<<0)
  7858  08AF  383F               	iorlw	(03Fh & ((1<<7)-1))<<0
  7859  08B0  00A2               	movwf	0+(frexp@value)+02h
  7860                           	line	269
  7861                           	
  7862  08B1                     l6711:	
  7863  08B1  13A1               	bcf	0+(frexp@value)+01h,7
  7864                           	line	273
  7865                           	
  7866  08B2                     l6713:	
  7867  08B2  28B3               	goto	l3262
  7868                           	
  7869  08B3                     l6715:	
  7870                           	line	274
  7871                           	
  7872  08B3                     l3262:	
  7873  08B3  0008               	return
  7874                           	opt stack 0
  7875                           GLOBAL	__end_of_frexp
  7876  08B4                     	__end_of_frexp:
  7877 ;; =============== function _frexp ends ============
  7878                           
  7879                           	signat	_frexp,8315
  7880                           	global	___ftge
  7881                           psect	text1260,local,class=CODE,delta=2
  7882                           global __ptext1260
  7883  09FB                     __ptext1260:
  7884                           
  7885 ;; *************** function ___ftge *****************
  7886 ;; Defined at:
  7887 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;  ff1             3    0[BANK0 ] float 
  7890 ;;  ff2             3    3[BANK0 ] float 
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;		None
  7893 ;; Return value:  Size  Location     Type
  7894 ;;		None               void
  7895 ;; Registers used:
  7896 ;;		wreg, status,2, status,0
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7902 ;;      Params:         0       6       0       0       0
  7903 ;;      Locals:         0       0       0       0       0
  7904 ;;      Temps:          0       6       0       0       0
  7905 ;;      Totals:         0      12       0       0       0
  7906 ;;Total ram usage:       12 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    1
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_main
  7913 ;;		_pow
  7914 ;;		_exp
  7915 ;;		_floor
  7916 ;;		_log
  7917 ;;		_ldexp
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           psect	text1260
  7921                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  7922                           	line	5
  7923                           	global	__size_of___ftge
  7924  006E                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  7925                           	
  7926  09FB                     ___ftge:	
  7927                           	opt	stack 6
  7928                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7929                           	line	6
  7930                           	
  7931  09FB                     l6657:	
  7932  09FB  1283               	bcf	status, 5	;RP0=0, select bank0
  7933  09FC  1303               	bcf	status, 6	;RP1=0, select bank0
  7934  09FD  1FA2               	btfss	(___ftge@ff1+2),(23)&7
  7935  09FE  2A00               	goto	u4581
  7936  09FF  2A01               	goto	u4580
  7937  0A00                     u4581:
  7938  0A00  2A27               	goto	l6661
  7939  0A01                     u4580:
  7940                           	line	7
  7941                           	
  7942  0A01                     l6659:	
  7943  0A01  3000               	movlw	0
  7944  0A02  00A6               	movwf	((??___ftge+0)+0)
  7945  0A03  3000               	movlw	0
  7946  0A04  00A7               	movwf	((??___ftge+0)+0+1)
  7947  0A05  3080               	movlw	080h
  7948  0A06  00A8               	movwf	((??___ftge+0)+0+2)
  7949  0A07  0920               	comf	(___ftge@ff1),w
  7950  0A08  00A9               	movwf	(??___ftge+3)+0
  7951  0A09  0921               	comf	(___ftge@ff1+1),w
  7952  0A0A  00AA               	movwf	((??___ftge+3)+0+1)
  7953  0A0B  0922               	comf	(___ftge@ff1+2),w
  7954  0A0C  00AB               	movwf	((??___ftge+3)+0+2)
  7955  0A0D  0AA9               	incf	(??___ftge+3)+0,f
  7956  0A0E  1903               	skipnz
  7957  0A0F  0AAA               	incf	((??___ftge+3)+0+1),f
  7958  0A10  1903               	skipnz
  7959  0A11  0AAB               	incf	((??___ftge+3)+0+2),f
  7960  0A12  0829               	movf	0+(??___ftge+3)+0,w
  7961  0A13  07A6               	addwf	(??___ftge+0)+0,f
  7962  0A14  082A               	movf	1+(??___ftge+3)+0,w
  7963  0A15  1803               	skipnc
  7964  0A16  0F2A               	incfsz	1+(??___ftge+3)+0,w
  7965  0A17  2A19               	goto	u4591
  7966  0A18  2A1A               	goto	u4592
  7967  0A19                     u4591:
  7968  0A19  07A7               	addwf	(??___ftge+0)+1,f
  7969                           	
  7970  0A1A                     u4592:
  7971  0A1A  082B               	movf	2+(??___ftge+3)+0,w
  7972  0A1B  1803               	skipnc
  7973  0A1C  0F2B               	incfsz	2+(??___ftge+3)+0,w
  7974  0A1D  2A1F               	goto	u4593
  7975  0A1E  2A20               	goto	u4594
  7976  0A1F                     u4593:
  7977  0A1F  07A8               	addwf	(??___ftge+0)+2,f
  7978                           	
  7979  0A20                     u4594:
  7980  0A20  0826               	movf	0+(??___ftge+0)+0,w
  7981  0A21  00A0               	movwf	(___ftge@ff1)
  7982  0A22  0827               	movf	1+(??___ftge+0)+0,w
  7983  0A23  00A1               	movwf	(___ftge@ff1+1)
  7984  0A24  0828               	movf	2+(??___ftge+0)+0,w
  7985  0A25  00A2               	movwf	(___ftge@ff1+2)
  7986  0A26  2A27               	goto	l6661
  7987                           	
  7988  0A27                     l3042:	
  7989                           	line	8
  7990                           	
  7991  0A27                     l6661:	
  7992  0A27  1FA5               	btfss	(___ftge@ff2+2),(23)&7
  7993  0A28  2A2A               	goto	u4601
  7994  0A29  2A2B               	goto	u4600
  7995  0A2A                     u4601:
  7996  0A2A  2A51               	goto	l6665
  7997  0A2B                     u4600:
  7998                           	line	9
  7999                           	
  8000  0A2B                     l6663:	
  8001  0A2B  3000               	movlw	0
  8002  0A2C  00A6               	movwf	((??___ftge+0)+0)
  8003  0A2D  3000               	movlw	0
  8004  0A2E  00A7               	movwf	((??___ftge+0)+0+1)
  8005  0A2F  3080               	movlw	080h
  8006  0A30  00A8               	movwf	((??___ftge+0)+0+2)
  8007  0A31  0923               	comf	(___ftge@ff2),w
  8008  0A32  00A9               	movwf	(??___ftge+3)+0
  8009  0A33  0924               	comf	(___ftge@ff2+1),w
  8010  0A34  00AA               	movwf	((??___ftge+3)+0+1)
  8011  0A35  0925               	comf	(___ftge@ff2+2),w
  8012  0A36  00AB               	movwf	((??___ftge+3)+0+2)
  8013  0A37  0AA9               	incf	(??___ftge+3)+0,f
  8014  0A38  1903               	skipnz
  8015  0A39  0AAA               	incf	((??___ftge+3)+0+1),f
  8016  0A3A  1903               	skipnz
  8017  0A3B  0AAB               	incf	((??___ftge+3)+0+2),f
  8018  0A3C  0829               	movf	0+(??___ftge+3)+0,w
  8019  0A3D  07A6               	addwf	(??___ftge+0)+0,f
  8020  0A3E  082A               	movf	1+(??___ftge+3)+0,w
  8021  0A3F  1803               	skipnc
  8022  0A40  0F2A               	incfsz	1+(??___ftge+3)+0,w
  8023  0A41  2A43               	goto	u4611
  8024  0A42  2A44               	goto	u4612
  8025  0A43                     u4611:
  8026  0A43  07A7               	addwf	(??___ftge+0)+1,f
  8027                           	
  8028  0A44                     u4612:
  8029  0A44  082B               	movf	2+(??___ftge+3)+0,w
  8030  0A45  1803               	skipnc
  8031  0A46  0F2B               	incfsz	2+(??___ftge+3)+0,w
  8032  0A47  2A49               	goto	u4613
  8033  0A48  2A4A               	goto	u4614
  8034  0A49                     u4613:
  8035  0A49  07A8               	addwf	(??___ftge+0)+2,f
  8036                           	
  8037  0A4A                     u4614:
  8038  0A4A  0826               	movf	0+(??___ftge+0)+0,w
  8039  0A4B  00A3               	movwf	(___ftge@ff2)
  8040  0A4C  0827               	movf	1+(??___ftge+0)+0,w
  8041  0A4D  00A4               	movwf	(___ftge@ff2+1)
  8042  0A4E  0828               	movf	2+(??___ftge+0)+0,w
  8043  0A4F  00A5               	movwf	(___ftge@ff2+2)
  8044  0A50  2A51               	goto	l6665
  8045                           	
  8046  0A51                     l3043:	
  8047                           	line	10
  8048                           	
  8049  0A51                     l6665:	
  8050  0A51  3080               	movlw	080h
  8051  0A52  06A2               	xorwf	(___ftge@ff1+2),f
  8052                           	line	11
  8053                           	
  8054  0A53                     l6667:	
  8055  0A53  3080               	movlw	080h
  8056  0A54  06A5               	xorwf	(___ftge@ff2+2),f
  8057                           	line	12
  8058                           	
  8059  0A55                     l6669:	
  8060  0A55  0825               	movf	(___ftge@ff2+2),w
  8061  0A56  0222               	subwf	(___ftge@ff1+2),w
  8062  0A57  1D03               	skipz
  8063  0A58  2A5F               	goto	u4625
  8064  0A59  0824               	movf	(___ftge@ff2+1),w
  8065  0A5A  0221               	subwf	(___ftge@ff1+1),w
  8066  0A5B  1D03               	skipz
  8067  0A5C  2A5F               	goto	u4625
  8068  0A5D  0823               	movf	(___ftge@ff2),w
  8069  0A5E  0220               	subwf	(___ftge@ff1),w
  8070  0A5F                     u4625:
  8071  0A5F  1803               	skipnc
  8072  0A60  2A62               	goto	u4621
  8073  0A61  2A63               	goto	u4620
  8074  0A62                     u4621:
  8075  0A62  2A65               	goto	l6673
  8076  0A63                     u4620:
  8077                           	
  8078  0A63                     l6671:	
  8079  0A63  1003               	clrc
  8080                           	
  8081  0A64  2A68               	goto	l3044
  8082                           	
  8083  0A65                     l6471:	
  8084                           	
  8085  0A65                     l6673:	
  8086  0A65  1403               	setc
  8087                           	
  8088  0A66  2A68               	goto	l3044
  8089                           	
  8090  0A67                     l6473:	
  8091  0A67  2A68               	goto	l3044
  8092                           	
  8093  0A68                     l6675:	
  8094                           	line	13
  8095                           	
  8096  0A68                     l3044:	
  8097  0A68  0008               	return
  8098                           	opt stack 0
  8099                           GLOBAL	__end_of___ftge
  8100  0A69                     	__end_of___ftge:
  8101 ;; =============== function ___ftge ends ============
  8102                           
  8103                           	signat	___ftge,8312
  8104                           	global	___ftneg
  8105                           psect	text1261,local,class=CODE,delta=2
  8106                           global __ptext1261
  8107  15C2                     __ptext1261:
  8108                           
  8109 ;; *************** function ___ftneg *****************
  8110 ;; Defined at:
  8111 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  f1              3    8[BANK0 ] float 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  3    8[BANK0 ] float 
  8118 ;; Registers used:
  8119 ;;		wreg
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8125 ;;      Params:         0       3       0       0       0
  8126 ;;      Locals:         0       0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0
  8128 ;;      Totals:         0       3       0       0       0
  8129 ;;Total ram usage:        3 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    1
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_ftoa
  8136 ;;		_pow
  8137 ;;		_exp
  8138 ;;		_ldexp
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           psect	text1261
  8142                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  8143                           	line	16
  8144                           	global	__size_of___ftneg
  8145  000E                     	__size_of___ftneg	equ	__end_of___ftneg-___ftneg
  8146                           	
  8147  15C2                     ___ftneg:	
  8148                           	opt	stack 2
  8149                           ; Regs used in ___ftneg: [wreg]
  8150                           	line	17
  8151                           	
  8152  15C2                     l5699:	
  8153  15C2  1283               	bcf	status, 5	;RP0=0, select bank0
  8154  15C3  1303               	bcf	status, 6	;RP1=0, select bank0
  8155  15C4  082A               	movf	(___ftneg@f1+2),w
  8156  15C5  0429               	iorwf	(___ftneg@f1+1),w
  8157  15C6  0428               	iorwf	(___ftneg@f1),w
  8158  15C7  1903               	skipnz
  8159  15C8  2DCA               	goto	u3171
  8160  15C9  2DCB               	goto	u3170
  8161  15CA                     u3171:
  8162  15CA  2DCE               	goto	l5703
  8163  15CB                     u3170:
  8164                           	line	18
  8165                           	
  8166  15CB                     l5701:	
  8167  15CB  3080               	movlw	080h
  8168  15CC  06AA               	xorwf	(___ftneg@f1+2),f
  8169  15CD  2DCE               	goto	l5703
  8170                           	
  8171  15CE                     l3038:	
  8172                           	line	19
  8173                           	
  8174  15CE                     l5703:	
  8175  15CE  2DCF               	goto	l3039
  8176                           	
  8177  15CF                     l5705:	
  8178                           	line	20
  8179                           	
  8180  15CF                     l3039:	
  8181  15CF  0008               	return
  8182                           	opt stack 0
  8183                           GLOBAL	__end_of___ftneg
  8184  15D0                     	__end_of___ftneg:
  8185 ;; =============== function ___ftneg ends ============
  8186                           
  8187                           	signat	___ftneg,4219
  8188                           	global	___fttol
  8189                           psect	text1262,local,class=CODE,delta=2
  8190                           global __ptext1262
  8191  0B65                     __ptext1262:
  8192                           
  8193 ;; *************** function ___fttol *****************
  8194 ;; Defined at:
  8195 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  f1              3    0[BANK0 ] float 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  lval            4    9[BANK0 ] unsigned long 
  8200 ;;  exp1            1   13[BANK0 ] unsigned char 
  8201 ;;  sign1           1    8[BANK0 ] unsigned char 
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  4    0[BANK0 ] long 
  8204 ;; Registers used:
  8205 ;;		wreg, status,2, status,0
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8211 ;;      Params:         0       4       0       0       0
  8212 ;;      Locals:         0       6       0       0       0
  8213 ;;      Temps:          0       4       0       0       0
  8214 ;;      Totals:         0      14       0       0       0
  8215 ;;Total ram usage:       14 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; Hardware stack levels required when called:    1
  8218 ;; This function calls:
  8219 ;;		Nothing
  8220 ;; This function is called by:
  8221 ;;		_ftoa
  8222 ;;		_pow
  8223 ;;		_exp
  8224 ;;		_floor
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           psect	text1262
  8228                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8229                           	line	45
  8230                           	global	__size_of___fttol
  8231  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  8232                           	
  8233  0B65                     ___fttol:	
  8234                           	opt	stack 3
  8235                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8236                           	line	49
  8237                           	
  8238  0B65                     l6605:	
  8239  0B65  1283               	bcf	status, 5	;RP0=0, select bank0
  8240  0B66  1303               	bcf	status, 6	;RP1=0, select bank0
  8241  0B67  0820               	movf	(___fttol@f1),w
  8242  0B68  00A4               	movwf	((??___fttol+0)+0)
  8243  0B69  0821               	movf	(___fttol@f1+1),w
  8244  0B6A  00A5               	movwf	((??___fttol+0)+0+1)
  8245  0B6B  0822               	movf	(___fttol@f1+2),w
  8246  0B6C  00A6               	movwf	((??___fttol+0)+0+2)
  8247  0B6D  1003               	clrc
  8248  0B6E  0D25               	rlf	(??___fttol+0)+1,w
  8249  0B6F  0D26               	rlf	(??___fttol+0)+2,w
  8250  0B70  00A7               	movwf	(??___fttol+3)+0
  8251  0B71  0827               	movf	(??___fttol+3)+0,w
  8252  0B72  00AD               	movwf	(___fttol@exp1)
  8253  0B73  08AD               	movf	((___fttol@exp1)),f
  8254  0B74  1D03               	skipz
  8255  0B75  2B77               	goto	u4471
  8256  0B76  2B78               	goto	u4470
  8257  0B77                     u4471:
  8258  0B77  2B82               	goto	l6611
  8259  0B78                     u4470:
  8260                           	line	50
  8261                           	
  8262  0B78                     l6607:	
  8263  0B78  3000               	movlw	0
  8264  0B79  00A3               	movwf	(?___fttol+3)
  8265  0B7A  3000               	movlw	0
  8266  0B7B  00A2               	movwf	(?___fttol+2)
  8267  0B7C  3000               	movlw	0
  8268  0B7D  00A1               	movwf	(?___fttol+1)
  8269  0B7E  3000               	movlw	0
  8270  0B7F  00A0               	movwf	(?___fttol)
  8271                           
  8272  0B80  2C0A               	goto	l2985
  8273                           	
  8274  0B81                     l6609:	
  8275  0B81  2C0A               	goto	l2985
  8276                           	
  8277  0B82                     l2984:	
  8278                           	line	51
  8279                           	
  8280  0B82                     l6611:	
  8281  0B82  0820               	movf	(___fttol@f1),w
  8282  0B83  00A4               	movwf	((??___fttol+0)+0)
  8283  0B84  0821               	movf	(___fttol@f1+1),w
  8284  0B85  00A5               	movwf	((??___fttol+0)+0+1)
  8285  0B86  0822               	movf	(___fttol@f1+2),w
  8286  0B87  00A6               	movwf	((??___fttol+0)+0+2)
  8287  0B88  3017               	movlw	017h
  8288  0B89                     u4485:
  8289  0B89  1003               	clrc
  8290  0B8A  0CA6               	rrf	(??___fttol+0)+2,f
  8291  0B8B  0CA5               	rrf	(??___fttol+0)+1,f
  8292  0B8C  0CA4               	rrf	(??___fttol+0)+0,f
  8293  0B8D                     u4480:
  8294  0B8D  3EFF               	addlw	-1
  8295  0B8E  1D03               	skipz
  8296  0B8F  2B89               	goto	u4485
  8297  0B90  0824               	movf	0+(??___fttol+0)+0,w
  8298  0B91  00A7               	movwf	(??___fttol+3)+0
  8299  0B92  0827               	movf	(??___fttol+3)+0,w
  8300  0B93  00A8               	movwf	(___fttol@sign1)
  8301                           	line	52
  8302                           	
  8303  0B94                     l6613:	
  8304  0B94  17A1               	bsf	(___fttol@f1)+(15/8),(15)&7
  8305                           	line	53
  8306                           	
  8307  0B95                     l6615:	
  8308  0B95  30FF               	movlw	0FFh
  8309  0B96  05A0               	andwf	(___fttol@f1),f
  8310  0B97  30FF               	movlw	0FFh
  8311  0B98  05A1               	andwf	(___fttol@f1+1),f
  8312  0B99  3000               	movlw	0
  8313  0B9A  05A2               	andwf	(___fttol@f1+2),f
  8314                           	line	54
  8315                           	
  8316  0B9B                     l6617:	
  8317  0B9B  0820               	movf	(___fttol@f1),w
  8318  0B9C  00A9               	movwf	(___fttol@lval)
  8319  0B9D  0821               	movf	(___fttol@f1+1),w
  8320  0B9E  00AA               	movwf	((___fttol@lval))+1
  8321  0B9F  0822               	movf	(___fttol@f1+2),w
  8322  0BA0  00AB               	movwf	((___fttol@lval))+2
  8323  0BA1  01AC               	clrf	((___fttol@lval))+3
  8324                           	line	55
  8325                           	
  8326  0BA2                     l6619:	
  8327  0BA2  308E               	movlw	low(08Eh)
  8328  0BA3  02AD               	subwf	(___fttol@exp1),f
  8329                           	line	56
  8330                           	
  8331  0BA4                     l6621:	
  8332  0BA4  1FAD               	btfss	(___fttol@exp1),7
  8333  0BA5  2BA7               	goto	u4491
  8334  0BA6  2BA8               	goto	u4490
  8335  0BA7                     u4491:
  8336  0BA7  2BCD               	goto	l6631
  8337  0BA8                     u4490:
  8338                           	line	57
  8339                           	
  8340  0BA8                     l6623:	
  8341  0BA8  082D               	movf	(___fttol@exp1),w
  8342  0BA9  3A80               	xorlw	80h
  8343  0BAA  3E8F               	addlw	-((-15)^80h)
  8344  0BAB  1803               	skipnc
  8345  0BAC  2BAE               	goto	u4501
  8346  0BAD  2BAF               	goto	u4500
  8347  0BAE                     u4501:
  8348  0BAE  2BBA               	goto	l6629
  8349  0BAF                     u4500:
  8350                           	line	58
  8351                           	
  8352  0BAF                     l6625:	
  8353  0BAF  3000               	movlw	0
  8354  0BB0  00A3               	movwf	(?___fttol+3)
  8355  0BB1  3000               	movlw	0
  8356  0BB2  00A2               	movwf	(?___fttol+2)
  8357  0BB3  3000               	movlw	0
  8358  0BB4  00A1               	movwf	(?___fttol+1)
  8359  0BB5  3000               	movlw	0
  8360  0BB6  00A0               	movwf	(?___fttol)
  8361                           
  8362  0BB7  2C0A               	goto	l2985
  8363                           	
  8364  0BB8                     l6627:	
  8365  0BB8  2C0A               	goto	l2985
  8366                           	
  8367  0BB9                     l2987:	
  8368  0BB9  2BBA               	goto	l6629
  8369                           	line	59
  8370                           	
  8371  0BBA                     l2988:	
  8372                           	line	60
  8373                           	
  8374  0BBA                     l6629:	
  8375  0BBA  3001               	movlw	01h
  8376  0BBB                     u4515:
  8377  0BBB  1003               	clrc
  8378  0BBC  0CAC               	rrf	(___fttol@lval+3),f
  8379  0BBD  0CAB               	rrf	(___fttol@lval+2),f
  8380  0BBE  0CAA               	rrf	(___fttol@lval+1),f
  8381  0BBF  0CA9               	rrf	(___fttol@lval),f
  8382  0BC0  3EFF               	addlw	-1
  8383  0BC1  1D03               	skipz
  8384  0BC2  2BBB               	goto	u4515
  8385                           
  8386                           	line	61
  8387  0BC3  3001               	movlw	(01h)
  8388  0BC4  00A4               	movwf	(??___fttol+0)+0
  8389  0BC5  0824               	movf	(??___fttol+0)+0,w
  8390  0BC6  07AD               	addwf	(___fttol@exp1),f
  8391  0BC7  1D03               	btfss	status,2
  8392  0BC8  2BCA               	goto	u4521
  8393  0BC9  2BCB               	goto	u4520
  8394  0BCA                     u4521:
  8395  0BCA  2BBA               	goto	l6629
  8396  0BCB                     u4520:
  8397  0BCB  2BF1               	goto	l6641
  8398                           	
  8399  0BCC                     l2989:	
  8400                           	line	62
  8401  0BCC  2BF1               	goto	l6641
  8402                           	
  8403  0BCD                     l2986:	
  8404                           	line	63
  8405                           	
  8406  0BCD                     l6631:	
  8407  0BCD  3018               	movlw	(018h)
  8408  0BCE  022D               	subwf	(___fttol@exp1),w
  8409  0BCF  1C03               	skipc
  8410  0BD0  2BD2               	goto	u4531
  8411  0BD1  2BD3               	goto	u4530
  8412  0BD2                     u4531:
  8413  0BD2  2BEA               	goto	l6639
  8414  0BD3                     u4530:
  8415                           	line	64
  8416                           	
  8417  0BD3                     l6633:	
  8418  0BD3  3000               	movlw	0
  8419  0BD4  00A3               	movwf	(?___fttol+3)
  8420  0BD5  3000               	movlw	0
  8421  0BD6  00A2               	movwf	(?___fttol+2)
  8422  0BD7  3000               	movlw	0
  8423  0BD8  00A1               	movwf	(?___fttol+1)
  8424  0BD9  3000               	movlw	0
  8425  0BDA  00A0               	movwf	(?___fttol)
  8426                           
  8427  0BDB  2C0A               	goto	l2985
  8428                           	
  8429  0BDC                     l6635:	
  8430  0BDC  2C0A               	goto	l2985
  8431                           	
  8432  0BDD                     l2991:	
  8433                           	line	65
  8434  0BDD  2BEA               	goto	l6639
  8435                           	
  8436  0BDE                     l2993:	
  8437                           	line	66
  8438                           	
  8439  0BDE                     l6637:	
  8440  0BDE  3001               	movlw	01h
  8441  0BDF  00A4               	movwf	(??___fttol+0)+0
  8442  0BE0                     u4545:
  8443  0BE0  1003               	clrc
  8444  0BE1  0DA9               	rlf	(___fttol@lval),f
  8445  0BE2  0DAA               	rlf	(___fttol@lval+1),f
  8446  0BE3  0DAB               	rlf	(___fttol@lval+2),f
  8447  0BE4  0DAC               	rlf	(___fttol@lval+3),f
  8448  0BE5  0BA4               	decfsz	(??___fttol+0)+0
  8449  0BE6  2BE0               	goto	u4545
  8450                           	line	67
  8451  0BE7  3001               	movlw	low(01h)
  8452  0BE8  02AD               	subwf	(___fttol@exp1),f
  8453  0BE9  2BEA               	goto	l6639
  8454                           	line	68
  8455                           	
  8456  0BEA                     l2992:	
  8457                           	line	65
  8458                           	
  8459  0BEA                     l6639:	
  8460  0BEA  08AD               	movf	(___fttol@exp1),f
  8461  0BEB  1D03               	skipz
  8462  0BEC  2BEE               	goto	u4551
  8463  0BED  2BEF               	goto	u4550
  8464  0BEE                     u4551:
  8465  0BEE  2BDE               	goto	l6637
  8466  0BEF                     u4550:
  8467  0BEF  2BF1               	goto	l6641
  8468                           	
  8469  0BF0                     l2994:	
  8470  0BF0  2BF1               	goto	l6641
  8471                           	line	69
  8472                           	
  8473  0BF1                     l2990:	
  8474                           	line	70
  8475                           	
  8476  0BF1                     l6641:	
  8477  0BF1  0828               	movf	(___fttol@sign1),w
  8478  0BF2  1D03               	skipz
  8479  0BF3  2BF5               	goto	u4560
  8480  0BF4  2C01               	goto	l6645
  8481  0BF5                     u4560:
  8482                           	line	71
  8483                           	
  8484  0BF5                     l6643:	
  8485  0BF5  09A9               	comf	(___fttol@lval),f
  8486  0BF6  09AA               	comf	(___fttol@lval+1),f
  8487  0BF7  09AB               	comf	(___fttol@lval+2),f
  8488  0BF8  09AC               	comf	(___fttol@lval+3),f
  8489  0BF9  0AA9               	incf	(___fttol@lval),f
  8490  0BFA  1903               	skipnz
  8491  0BFB  0AAA               	incf	(___fttol@lval+1),f
  8492  0BFC  1903               	skipnz
  8493  0BFD  0AAB               	incf	(___fttol@lval+2),f
  8494  0BFE  1903               	skipnz
  8495  0BFF  0AAC               	incf	(___fttol@lval+3),f
  8496  0C00  2C01               	goto	l6645
  8497                           	
  8498  0C01                     l2995:	
  8499                           	line	72
  8500                           	
  8501  0C01                     l6645:	
  8502  0C01  082C               	movf	(___fttol@lval+3),w
  8503  0C02  00A3               	movwf	(?___fttol+3)
  8504  0C03  082B               	movf	(___fttol@lval+2),w
  8505  0C04  00A2               	movwf	(?___fttol+2)
  8506  0C05  082A               	movf	(___fttol@lval+1),w
  8507  0C06  00A1               	movwf	(?___fttol+1)
  8508  0C07  0829               	movf	(___fttol@lval),w
  8509  0C08  00A0               	movwf	(?___fttol)
  8510                           
  8511  0C09  2C0A               	goto	l2985
  8512                           	
  8513  0C0A                     l6647:	
  8514                           	line	73
  8515                           	
  8516  0C0A                     l2985:	
  8517  0C0A  0008               	return
  8518                           	opt stack 0
  8519                           GLOBAL	__end_of___fttol
  8520  0C0B                     	__end_of___fttol:
  8521 ;; =============== function ___fttol ends ============
  8522                           
  8523                           	signat	___fttol,4220
  8524                           	global	___ftpack
  8525                           psect	text1263,local,class=CODE,delta=2
  8526                           global __ptext1263
  8527  0A69                     __ptext1263:
  8528                           
  8529 ;; *************** function ___ftpack *****************
  8530 ;; Defined at:
  8531 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  arg             3    0[BANK0 ] unsigned um
  8534 ;;  exp             1    3[BANK0 ] unsigned char 
  8535 ;;  sign            1    4[BANK0 ] unsigned char 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  3    0[BANK0 ] float 
  8540 ;; Registers used:
  8541 ;;		wreg, status,2, status,0
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8547 ;;      Params:         0       5       0       0       0
  8548 ;;      Locals:         0       0       0       0       0
  8549 ;;      Temps:          0       3       0       0       0
  8550 ;;      Totals:         0       8       0       0       0
  8551 ;;Total ram usage:        8 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    1
  8554 ;; This function calls:
  8555 ;;		Nothing
  8556 ;; This function is called by:
  8557 ;;		___ftadd
  8558 ;;		___ftdiv
  8559 ;;		___ftmul
  8560 ;;		___lbtoft
  8561 ;;		___awtoft
  8562 ;;		___altoft
  8563 ;;		___lltoft
  8564 ;;		___abtoft
  8565 ;;		___lwtoft
  8566 ;;		___attoft
  8567 ;;		___lttoft
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           psect	text1263
  8571                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  8572                           	line	63
  8573                           	global	__size_of___ftpack
  8574  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  8575                           	
  8576  0A69                     ___ftpack:	
  8577                           	opt	stack 4
  8578                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8579                           	line	64
  8580                           	
  8581  0A69                     l6575:	
  8582  0A69  1283               	bcf	status, 5	;RP0=0, select bank0
  8583  0A6A  1303               	bcf	status, 6	;RP1=0, select bank0
  8584  0A6B  0823               	movf	(___ftpack@exp),w
  8585  0A6C  1D03               	skipz
  8586  0A6D  2A6F               	goto	u4360
  8587  0A6E  2A77               	goto	l6579
  8588  0A6F                     u4360:
  8589                           	
  8590  0A6F                     l6577:	
  8591  0A6F  0822               	movf	(___ftpack@arg+2),w
  8592  0A70  0421               	iorwf	(___ftpack@arg+1),w
  8593  0A71  0420               	iorwf	(___ftpack@arg),w
  8594  0A72  1D03               	skipz
  8595  0A73  2A75               	goto	u4371
  8596  0A74  2A76               	goto	u4370
  8597  0A75                     u4371:
  8598  0A75  2A8D               	goto	l6585
  8599  0A76                     u4370:
  8600  0A76  2A77               	goto	l6579
  8601                           	
  8602  0A77                     l3285:	
  8603                           	line	65
  8604                           	
  8605  0A77                     l6579:	
  8606  0A77  3000               	movlw	0x0
  8607  0A78  00A0               	movwf	(?___ftpack)
  8608  0A79  3000               	movlw	0x0
  8609  0A7A  00A1               	movwf	(?___ftpack+1)
  8610  0A7B  3000               	movlw	0x0
  8611  0A7C  00A2               	movwf	(?___ftpack+2)
  8612  0A7D  2AE5               	goto	l3286
  8613                           	
  8614  0A7E                     l6581:	
  8615  0A7E  2AE5               	goto	l3286
  8616                           	
  8617  0A7F                     l3283:	
  8618                           	line	66
  8619  0A7F  2A8D               	goto	l6585
  8620                           	
  8621  0A80                     l3288:	
  8622                           	line	67
  8623                           	
  8624  0A80                     l6583:	
  8625  0A80  3001               	movlw	(01h)
  8626  0A81  00A5               	movwf	(??___ftpack+0)+0
  8627  0A82  0825               	movf	(??___ftpack+0)+0,w
  8628  0A83  07A3               	addwf	(___ftpack@exp),f
  8629                           	line	68
  8630  0A84  3001               	movlw	01h
  8631  0A85                     u4385:
  8632  0A85  1003               	clrc
  8633  0A86  0CA2               	rrf	(___ftpack@arg+2),f
  8634  0A87  0CA1               	rrf	(___ftpack@arg+1),f
  8635  0A88  0CA0               	rrf	(___ftpack@arg),f
  8636  0A89  3EFF               	addlw	-1
  8637  0A8A  1D03               	skipz
  8638  0A8B  2A85               	goto	u4385
  8639                           
  8640  0A8C  2A8D               	goto	l6585
  8641                           	line	69
  8642                           	
  8643  0A8D                     l3287:	
  8644                           	line	66
  8645                           	
  8646  0A8D                     l6585:	
  8647  0A8D  30FE               	movlw	low highword(0FE0000h)
  8648  0A8E  0522               	andwf	(___ftpack@arg+2),w
  8649  0A8F  1D03               	btfss	status,2
  8650  0A90  2A92               	goto	u4391
  8651  0A91  2A93               	goto	u4390
  8652  0A92                     u4391:
  8653  0A92  2A80               	goto	l6583
  8654  0A93                     u4390:
  8655  0A93  2AAB               	goto	l3290
  8656                           	
  8657  0A94                     l3289:	
  8658                           	line	70
  8659  0A94  2AAB               	goto	l3290
  8660                           	
  8661  0A95                     l3291:	
  8662                           	line	71
  8663                           	
  8664  0A95                     l6587:	
  8665  0A95  3001               	movlw	(01h)
  8666  0A96  00A5               	movwf	(??___ftpack+0)+0
  8667  0A97  0825               	movf	(??___ftpack+0)+0,w
  8668  0A98  07A3               	addwf	(___ftpack@exp),f
  8669                           	line	72
  8670                           	
  8671  0A99                     l6589:	
  8672  0A99  3001               	movlw	01h
  8673  0A9A  07A0               	addwf	(___ftpack@arg),f
  8674  0A9B  3000               	movlw	0
  8675  0A9C  1803               	skipnc
  8676  0A9D  3001               movlw 1
  8677  0A9E  07A1               	addwf	(___ftpack@arg+1),f
  8678  0A9F  3000               	movlw	0
  8679  0AA0  1803               	skipnc
  8680  0AA1  3001               movlw 1
  8681  0AA2  07A2               	addwf	(___ftpack@arg+2),f
  8682                           	line	73
  8683                           	
  8684  0AA3                     l6591:	
  8685  0AA3  3001               	movlw	01h
  8686  0AA4                     u4405:
  8687  0AA4  1003               	clrc
  8688  0AA5  0CA2               	rrf	(___ftpack@arg+2),f
  8689  0AA6  0CA1               	rrf	(___ftpack@arg+1),f
  8690  0AA7  0CA0               	rrf	(___ftpack@arg),f
  8691  0AA8  3EFF               	addlw	-1
  8692  0AA9  1D03               	skipz
  8693  0AAA  2AA4               	goto	u4405
  8694                           
  8695                           	line	74
  8696                           	
  8697  0AAB                     l3290:	
  8698                           	line	70
  8699  0AAB  30FF               	movlw	low highword(0FF0000h)
  8700  0AAC  0522               	andwf	(___ftpack@arg+2),w
  8701  0AAD  1D03               	btfss	status,2
  8702  0AAE  2AB0               	goto	u4411
  8703  0AAF  2AB1               	goto	u4410
  8704  0AB0                     u4411:
  8705  0AB0  2A95               	goto	l6587
  8706  0AB1                     u4410:
  8707  0AB1  2ABE               	goto	l6595
  8708                           	
  8709  0AB2                     l3292:	
  8710                           	line	75
  8711  0AB2  2ABE               	goto	l6595
  8712                           	
  8713  0AB3                     l3294:	
  8714                           	line	76
  8715                           	
  8716  0AB3                     l6593:	
  8717  0AB3  3001               	movlw	low(01h)
  8718  0AB4  02A3               	subwf	(___ftpack@exp),f
  8719                           	line	77
  8720  0AB5  3001               	movlw	01h
  8721  0AB6                     u4425:
  8722  0AB6  1003               	clrc
  8723  0AB7  0DA0               	rlf	(___ftpack@arg),f
  8724  0AB8  0DA1               	rlf	(___ftpack@arg+1),f
  8725  0AB9  0DA2               	rlf	(___ftpack@arg+2),f
  8726  0ABA  3EFF               	addlw	-1
  8727  0ABB  1D03               	skipz
  8728  0ABC  2AB6               	goto	u4425
  8729  0ABD  2ABE               	goto	l6595
  8730                           	line	78
  8731                           	
  8732  0ABE                     l3293:	
  8733                           	line	75
  8734                           	
  8735  0ABE                     l6595:	
  8736  0ABE  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  8737  0ABF  2AC1               	goto	u4431
  8738  0AC0  2AC2               	goto	u4430
  8739  0AC1                     u4431:
  8740  0AC1  2AB3               	goto	l6593
  8741  0AC2                     u4430:
  8742                           	
  8743  0AC2                     l3295:	
  8744                           	line	79
  8745  0AC2  1823               	btfsc	(___ftpack@exp),(0)&7
  8746  0AC3  2AC5               	goto	u4441
  8747  0AC4  2AC6               	goto	u4440
  8748  0AC5                     u4441:
  8749  0AC5  2ACC               	goto	l3296
  8750  0AC6                     u4440:
  8751                           	line	80
  8752                           	
  8753  0AC6                     l6597:	
  8754  0AC6  30FF               	movlw	0FFh
  8755  0AC7  05A0               	andwf	(___ftpack@arg),f
  8756  0AC8  307F               	movlw	07Fh
  8757  0AC9  05A1               	andwf	(___ftpack@arg+1),f
  8758  0ACA  30FF               	movlw	0FFh
  8759  0ACB  05A2               	andwf	(___ftpack@arg+2),f
  8760                           	
  8761  0ACC                     l3296:	
  8762                           	line	81
  8763  0ACC  1003               	clrc
  8764  0ACD  0CA3               	rrf	(___ftpack@exp),f
  8765                           
  8766                           	line	82
  8767                           	
  8768  0ACE                     l6599:	
  8769  0ACE  0823               	movf	(___ftpack@exp),w
  8770  0ACF  00A5               	movwf	((??___ftpack+0)+0)
  8771  0AD0  01A6               	clrf	((??___ftpack+0)+0+1)
  8772  0AD1  01A7               	clrf	((??___ftpack+0)+0+2)
  8773  0AD2  3010               	movlw	010h
  8774  0AD3                     u4455:
  8775  0AD3  1003               	clrc
  8776  0AD4  0DA5               	rlf	(??___ftpack+0)+0,f
  8777  0AD5  0DA6               	rlf	(??___ftpack+0)+1,f
  8778  0AD6  0DA7               	rlf	(??___ftpack+0)+2,f
  8779  0AD7                     u4450:
  8780  0AD7  3EFF               	addlw	-1
  8781  0AD8  1D03               	skipz
  8782  0AD9  2AD3               	goto	u4455
  8783  0ADA  0825               	movf	0+(??___ftpack+0)+0,w
  8784  0ADB  04A0               	iorwf	(___ftpack@arg),f
  8785  0ADC  0826               	movf	1+(??___ftpack+0)+0,w
  8786  0ADD  04A1               	iorwf	(___ftpack@arg+1),f
  8787  0ADE  0827               	movf	2+(??___ftpack+0)+0,w
  8788  0ADF  04A2               	iorwf	(___ftpack@arg+2),f
  8789                           	line	83
  8790                           	
  8791  0AE0                     l6601:	
  8792  0AE0  0824               	movf	(___ftpack@sign),w
  8793  0AE1  1D03               	skipz
  8794  0AE2  2AE4               	goto	u4460
  8795  0AE3  2AE5               	goto	l3297
  8796  0AE4                     u4460:
  8797                           	line	84
  8798                           	
  8799  0AE4                     l6603:	
  8800  0AE4  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  8801                           	
  8802  0AE5                     l3297:	
  8803                           	line	85
  8804                           	line	86
  8805                           	
  8806  0AE5                     l3286:	
  8807  0AE5  0008               	return
  8808                           	opt stack 0
  8809                           GLOBAL	__end_of___ftpack
  8810  0AE6                     	__end_of___ftpack:
  8811 ;; =============== function ___ftpack ends ============
  8812                           
  8813                           	signat	___ftpack,12411
  8814                           	global	___lwmod
  8815                           psect	text1264,local,class=CODE,delta=2
  8816                           global __ptext1264
  8817  17BA                     __ptext1264:
  8818                           
  8819 ;; *************** function ___lwmod *****************
  8820 ;; Defined at:
  8821 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  divisor         2    0[BANK0 ] unsigned int 
  8824 ;;  dividend        2    2[BANK0 ] unsigned int 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;  counter         1    5[COMMON] unsigned char 
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  2    0[BANK0 ] unsigned int 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8836 ;;      Params:         0       4       0       0       0
  8837 ;;      Locals:         1       0       0       0       0
  8838 ;;      Temps:          1       0       0       0       0
  8839 ;;      Totals:         2       4       0       0       0
  8840 ;;Total ram usage:        6 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    1
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_intToStr
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           psect	text1264
  8850                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8851                           	line	5
  8852                           	global	__size_of___lwmod
  8853  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  8854                           	
  8855  17BA                     ___lwmod:	
  8856                           	opt	stack 4
  8857                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8858                           	line	8
  8859                           	
  8860  17BA                     l6553:	
  8861  17BA  1283               	bcf	status, 5	;RP0=0, select bank0
  8862  17BB  1303               	bcf	status, 6	;RP1=0, select bank0
  8863  17BC  0821               	movf	(___lwmod@divisor+1),w
  8864  17BD  0420               	iorwf	(___lwmod@divisor),w
  8865  17BE  1903               	skipnz
  8866  17BF  2FC1               	goto	u4301
  8867  17C0  2FC2               	goto	u4300
  8868  17C1                     u4301:
  8869  17C1  2FF8               	goto	l6571
  8870  17C2                     u4300:
  8871                           	line	9
  8872                           	
  8873  17C2                     l6555:	
  8874  17C2  01F5               	clrf	(___lwmod@counter)
  8875  17C3  1403               	bsf	status,0
  8876  17C4  0DF5               	rlf	(___lwmod@counter),f
  8877                           	line	10
  8878  17C5  2FD2               	goto	l6561
  8879                           	
  8880  17C6                     l2893:	
  8881                           	line	11
  8882                           	
  8883  17C6                     l6557:	
  8884  17C6  3001               	movlw	01h
  8885                           	
  8886  17C7                     u4315:
  8887  17C7  1003               	clrc
  8888  17C8  0DA0               	rlf	(___lwmod@divisor),f
  8889  17C9  0DA1               	rlf	(___lwmod@divisor+1),f
  8890  17CA  3EFF               	addlw	-1
  8891  17CB  1D03               	skipz
  8892  17CC  2FC7               	goto	u4315
  8893                           	line	12
  8894                           	
  8895  17CD                     l6559:	
  8896  17CD  3001               	movlw	(01h)
  8897  17CE  00F4               	movwf	(??___lwmod+0)+0
  8898  17CF  0874               	movf	(??___lwmod+0)+0,w
  8899  17D0  07F5               	addwf	(___lwmod@counter),f
  8900  17D1  2FD2               	goto	l6561
  8901                           	line	13
  8902                           	
  8903  17D2                     l2892:	
  8904                           	line	10
  8905                           	
  8906  17D2                     l6561:	
  8907  17D2  1FA1               	btfss	(___lwmod@divisor+1),(15)&7
  8908  17D3  2FD5               	goto	u4321
  8909  17D4  2FD6               	goto	u4320
  8910  17D5                     u4321:
  8911  17D5  2FC6               	goto	l6557
  8912  17D6                     u4320:
  8913  17D6  2FD8               	goto	l6563
  8914                           	
  8915  17D7                     l2894:	
  8916  17D7  2FD8               	goto	l6563
  8917                           	line	14
  8918                           	
  8919  17D8                     l2895:	
  8920                           	line	15
  8921                           	
  8922  17D8                     l6563:	
  8923  17D8  0821               	movf	(___lwmod@divisor+1),w
  8924  17D9  0223               	subwf	(___lwmod@dividend+1),w
  8925  17DA  1D03               	skipz
  8926  17DB  2FDE               	goto	u4335
  8927  17DC  0820               	movf	(___lwmod@divisor),w
  8928  17DD  0222               	subwf	(___lwmod@dividend),w
  8929  17DE                     u4335:
  8930  17DE  1C03               	skipc
  8931  17DF  2FE1               	goto	u4331
  8932  17E0  2FE2               	goto	u4330
  8933  17E1                     u4331:
  8934  17E1  2FE9               	goto	l6567
  8935  17E2                     u4330:
  8936                           	line	16
  8937                           	
  8938  17E2                     l6565:	
  8939  17E2  0820               	movf	(___lwmod@divisor),w
  8940  17E3  02A2               	subwf	(___lwmod@dividend),f
  8941  17E4  0821               	movf	(___lwmod@divisor+1),w
  8942  17E5  1C03               	skipc
  8943  17E6  03A3               	decf	(___lwmod@dividend+1),f
  8944  17E7  02A3               	subwf	(___lwmod@dividend+1),f
  8945  17E8  2FE9               	goto	l6567
  8946                           	
  8947  17E9                     l2896:	
  8948                           	line	17
  8949                           	
  8950  17E9                     l6567:	
  8951  17E9  3001               	movlw	01h
  8952                           	
  8953  17EA                     u4345:
  8954  17EA  1003               	clrc
  8955  17EB  0CA1               	rrf	(___lwmod@divisor+1),f
  8956  17EC  0CA0               	rrf	(___lwmod@divisor),f
  8957  17ED  3EFF               	addlw	-1
  8958  17EE  1D03               	skipz
  8959  17EF  2FEA               	goto	u4345
  8960                           	line	18
  8961                           	
  8962  17F0                     l6569:	
  8963  17F0  3001               	movlw	low(01h)
  8964  17F1  02F5               	subwf	(___lwmod@counter),f
  8965  17F2  1D03               	btfss	status,2
  8966  17F3  2FF5               	goto	u4351
  8967  17F4  2FF6               	goto	u4350
  8968  17F5                     u4351:
  8969  17F5  2FD8               	goto	l6563
  8970  17F6                     u4350:
  8971  17F6  2FF8               	goto	l6571
  8972                           	
  8973  17F7                     l2897:	
  8974  17F7  2FF8               	goto	l6571
  8975                           	line	19
  8976                           	
  8977  17F8                     l2891:	
  8978                           	line	20
  8979                           	
  8980  17F8                     l6571:	
  8981  17F8  0823               	movf	(___lwmod@dividend+1),w
  8982  17F9  01A1               	clrf	(?___lwmod+1)
  8983  17FA  07A1               	addwf	(?___lwmod+1)
  8984  17FB  0822               	movf	(___lwmod@dividend),w
  8985  17FC  01A0               	clrf	(?___lwmod)
  8986  17FD  07A0               	addwf	(?___lwmod)
  8987                           
  8988  17FE  2FFF               	goto	l2898
  8989                           	
  8990  17FF                     l6573:	
  8991                           	line	21
  8992                           	
  8993  17FF                     l2898:	
  8994  17FF  0008               	return
  8995                           	opt stack 0
  8996                           GLOBAL	__end_of___lwmod
  8997  1800                     	__end_of___lwmod:
  8998 ;; =============== function ___lwmod ends ============
  8999                           
  9000                           	signat	___lwmod,8314
  9001                           	global	___lwdiv
  9002                           psect	text1265,local,class=CODE,delta=2
  9003                           global __ptext1265
  9004  0901                     __ptext1265:
  9005                           
  9006 ;; *************** function ___lwdiv *****************
  9007 ;; Defined at:
  9008 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  divisor         2    0[BANK0 ] unsigned int 
  9011 ;;  dividend        2    2[BANK0 ] unsigned int 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  quotient        2    5[BANK0 ] unsigned int 
  9014 ;;  counter         1    4[BANK0 ] unsigned char 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  2    0[BANK0 ] unsigned int 
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9024 ;;      Params:         0       4       0       0       0
  9025 ;;      Locals:         0       3       0       0       0
  9026 ;;      Temps:          1       0       0       0       0
  9027 ;;      Totals:         1       7       0       0       0
  9028 ;;Total ram usage:        8 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:    1
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_intToStr
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           psect	text1265
  9038                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9039                           	line	5
  9040                           	global	__size_of___lwdiv
  9041  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  9042                           	
  9043  0901                     ___lwdiv:	
  9044                           	opt	stack 4
  9045                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9046                           	line	9
  9047                           	
  9048  0901                     l6527:	
  9049  0901  1283               	bcf	status, 5	;RP0=0, select bank0
  9050  0902  1303               	bcf	status, 6	;RP1=0, select bank0
  9051  0903  01A5               	clrf	(___lwdiv@quotient)
  9052  0904  01A6               	clrf	(___lwdiv@quotient+1)
  9053                           	line	10
  9054                           	
  9055  0905                     l6529:	
  9056  0905  0821               	movf	(___lwdiv@divisor+1),w
  9057  0906  0420               	iorwf	(___lwdiv@divisor),w
  9058  0907  1903               	skipnz
  9059  0908  290A               	goto	u4231
  9060  0909  290B               	goto	u4230
  9061  090A                     u4231:
  9062  090A  2949               	goto	l6549
  9063  090B                     u4230:
  9064                           	line	11
  9065                           	
  9066  090B                     l6531:	
  9067  090B  01A4               	clrf	(___lwdiv@counter)
  9068  090C  1403               	bsf	status,0
  9069  090D  0DA4               	rlf	(___lwdiv@counter),f
  9070                           	line	12
  9071  090E  291B               	goto	l6537
  9072                           	
  9073  090F                     l2883:	
  9074                           	line	13
  9075                           	
  9076  090F                     l6533:	
  9077  090F  3001               	movlw	01h
  9078                           	
  9079  0910                     u4245:
  9080  0910  1003               	clrc
  9081  0911  0DA0               	rlf	(___lwdiv@divisor),f
  9082  0912  0DA1               	rlf	(___lwdiv@divisor+1),f
  9083  0913  3EFF               	addlw	-1
  9084  0914  1D03               	skipz
  9085  0915  2910               	goto	u4245
  9086                           	line	14
  9087                           	
  9088  0916                     l6535:	
  9089  0916  3001               	movlw	(01h)
  9090  0917  00F4               	movwf	(??___lwdiv+0)+0
  9091  0918  0874               	movf	(??___lwdiv+0)+0,w
  9092  0919  07A4               	addwf	(___lwdiv@counter),f
  9093  091A  291B               	goto	l6537
  9094                           	line	15
  9095                           	
  9096  091B                     l2882:	
  9097                           	line	12
  9098                           	
  9099  091B                     l6537:	
  9100  091B  1FA1               	btfss	(___lwdiv@divisor+1),(15)&7
  9101  091C  291E               	goto	u4251
  9102  091D  291F               	goto	u4250
  9103  091E                     u4251:
  9104  091E  290F               	goto	l6533
  9105  091F                     u4250:
  9106  091F  2921               	goto	l6539
  9107                           	
  9108  0920                     l2884:	
  9109  0920  2921               	goto	l6539
  9110                           	line	16
  9111                           	
  9112  0921                     l2885:	
  9113                           	line	17
  9114                           	
  9115  0921                     l6539:	
  9116  0921  3001               	movlw	01h
  9117                           	
  9118  0922                     u4265:
  9119  0922  1003               	clrc
  9120  0923  0DA5               	rlf	(___lwdiv@quotient),f
  9121  0924  0DA6               	rlf	(___lwdiv@quotient+1),f
  9122  0925  3EFF               	addlw	-1
  9123  0926  1D03               	skipz
  9124  0927  2922               	goto	u4265
  9125                           	line	18
  9126  0928  0821               	movf	(___lwdiv@divisor+1),w
  9127  0929  0223               	subwf	(___lwdiv@dividend+1),w
  9128  092A  1D03               	skipz
  9129  092B  292E               	goto	u4275
  9130  092C  0820               	movf	(___lwdiv@divisor),w
  9131  092D  0222               	subwf	(___lwdiv@dividend),w
  9132  092E                     u4275:
  9133  092E  1C03               	skipc
  9134  092F  2931               	goto	u4271
  9135  0930  2932               	goto	u4270
  9136  0931                     u4271:
  9137  0931  293A               	goto	l6545
  9138  0932                     u4270:
  9139                           	line	19
  9140                           	
  9141  0932                     l6541:	
  9142  0932  0820               	movf	(___lwdiv@divisor),w
  9143  0933  02A2               	subwf	(___lwdiv@dividend),f
  9144  0934  0821               	movf	(___lwdiv@divisor+1),w
  9145  0935  1C03               	skipc
  9146  0936  03A3               	decf	(___lwdiv@dividend+1),f
  9147  0937  02A3               	subwf	(___lwdiv@dividend+1),f
  9148                           	line	20
  9149                           	
  9150  0938                     l6543:	
  9151  0938  1425               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  9152  0939  293A               	goto	l6545
  9153                           	line	21
  9154                           	
  9155  093A                     l2886:	
  9156                           	line	22
  9157                           	
  9158  093A                     l6545:	
  9159  093A  3001               	movlw	01h
  9160                           	
  9161  093B                     u4285:
  9162  093B  1003               	clrc
  9163  093C  0CA1               	rrf	(___lwdiv@divisor+1),f
  9164  093D  0CA0               	rrf	(___lwdiv@divisor),f
  9165  093E  3EFF               	addlw	-1
  9166  093F  1D03               	skipz
  9167  0940  293B               	goto	u4285
  9168                           	line	23
  9169                           	
  9170  0941                     l6547:	
  9171  0941  3001               	movlw	low(01h)
  9172  0942  02A4               	subwf	(___lwdiv@counter),f
  9173  0943  1D03               	btfss	status,2
  9174  0944  2946               	goto	u4291
  9175  0945  2947               	goto	u4290
  9176  0946                     u4291:
  9177  0946  2921               	goto	l6539
  9178  0947                     u4290:
  9179  0947  2949               	goto	l6549
  9180                           	
  9181  0948                     l2887:	
  9182  0948  2949               	goto	l6549
  9183                           	line	24
  9184                           	
  9185  0949                     l2881:	
  9186                           	line	25
  9187                           	
  9188  0949                     l6549:	
  9189  0949  0826               	movf	(___lwdiv@quotient+1),w
  9190  094A  01A1               	clrf	(?___lwdiv+1)
  9191  094B  07A1               	addwf	(?___lwdiv+1)
  9192  094C  0825               	movf	(___lwdiv@quotient),w
  9193  094D  01A0               	clrf	(?___lwdiv)
  9194  094E  07A0               	addwf	(?___lwdiv)
  9195                           
  9196  094F  2950               	goto	l2888
  9197                           	
  9198  0950                     l6551:	
  9199                           	line	26
  9200                           	
  9201  0950                     l2888:	
  9202  0950  0008               	return
  9203                           	opt stack 0
  9204                           GLOBAL	__end_of___lwdiv
  9205  0951                     	__end_of___lwdiv:
  9206 ;; =============== function ___lwdiv ends ============
  9207                           
  9208                           	signat	___lwdiv,8314
  9209                           	global	___bmul
  9210                           psect	text1266,local,class=CODE,delta=2
  9211                           global __ptext1266
  9212  15F1                     __ptext1266:
  9213                           
  9214 ;; *************** function ___bmul *****************
  9215 ;; Defined at:
  9216 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  multiplier      1    wreg     unsigned char 
  9219 ;;  multiplicand    1    4[COMMON] unsigned char 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;  multiplier      1    1[BANK0 ] unsigned char 
  9222 ;;  product         1    0[BANK0 ] unsigned char 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      unsigned char 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, status,0
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9232 ;;      Params:         1       0       0       0       0
  9233 ;;      Locals:         0       2       0       0       0
  9234 ;;      Temps:          1       0       0       0       0
  9235 ;;      Totals:         2       2       0       0       0
  9236 ;;Total ram usage:        4 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    1
  9239 ;; This function calls:
  9240 ;;		Nothing
  9241 ;; This function is called by:
  9242 ;;		_eval_poly
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           psect	text1266
  9246                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  9247                           	line	3
  9248                           	global	__size_of___bmul
  9249  001A                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  9250                           	
  9251  15F1                     ___bmul:	
  9252                           	opt	stack 2
  9253                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9254                           ;___bmul@multiplier stored from wreg
  9255  15F1  1283               	bcf	status, 5	;RP0=0, select bank0
  9256  15F2  1303               	bcf	status, 6	;RP1=0, select bank0
  9257  15F3  00A1               	movwf	(___bmul@multiplier)
  9258                           	line	4
  9259                           	
  9260  15F4                     l6513:	
  9261  15F4  01A0               	clrf	(___bmul@product)
  9262                           	line	6
  9263                           	
  9264  15F5                     l2869:	
  9265                           	line	7
  9266  15F5  1C21               	btfss	(___bmul@multiplier),(0)&7
  9267  15F6  2DF8               	goto	u4211
  9268  15F7  2DF9               	goto	u4210
  9269  15F8                     u4211:
  9270  15F8  2DFE               	goto	l6517
  9271  15F9                     u4210:
  9272                           	line	8
  9273                           	
  9274  15F9                     l6515:	
  9275  15F9  0874               	movf	(___bmul@multiplicand),w
  9276  15FA  00F5               	movwf	(??___bmul+0)+0
  9277  15FB  0875               	movf	(??___bmul+0)+0,w
  9278  15FC  07A0               	addwf	(___bmul@product),f
  9279  15FD  2DFE               	goto	l6517
  9280                           	
  9281  15FE                     l2870:	
  9282                           	line	9
  9283                           	
  9284  15FE                     l6517:	
  9285  15FE  1003               	clrc
  9286  15FF  0DF4               	rlf	(___bmul@multiplicand),f
  9287                           
  9288                           	line	10
  9289                           	
  9290  1600                     l6519:	
  9291  1600  1003               	clrc
  9292  1601  0CA1               	rrf	(___bmul@multiplier),f
  9293                           
  9294                           	line	11
  9295                           	
  9296  1602                     l6521:	
  9297  1602  08A1               	movf	(___bmul@multiplier),f
  9298  1603  1D03               	skipz
  9299  1604  2E06               	goto	u4221
  9300  1605  2E07               	goto	u4220
  9301  1606                     u4221:
  9302  1606  2DF5               	goto	l2869
  9303  1607                     u4220:
  9304  1607  2E08               	goto	l6523
  9305                           	
  9306  1608                     l2871:	
  9307                           	line	12
  9308                           	
  9309  1608                     l6523:	
  9310  1608  0820               	movf	(___bmul@product),w
  9311  1609  2E0A               	goto	l2872
  9312                           	
  9313  160A                     l6525:	
  9314                           	line	13
  9315                           	
  9316  160A                     l2872:	
  9317  160A  0008               	return
  9318                           	opt stack 0
  9319                           GLOBAL	__end_of___bmul
  9320  160B                     	__end_of___bmul:
  9321 ;; =============== function ___bmul ends ============
  9322                           
  9323                           	signat	___bmul,8313
  9324                           	global	_reverse
  9325                           psect	text1267,local,class=CODE,delta=2
  9326                           global __ptext1267
  9327  0951                     __ptext1267:
  9328                           
  9329 ;; *************** function _reverse *****************
  9330 ;; Defined at:
  9331 ;;		line 9 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2\
       string.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  str             1    wreg     PTR unsigned char 
  9334 ;;		 -> str(10), 
  9335 ;;  len             2    4[COMMON] int 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  str             1    9[BANK0 ] PTR unsigned char 
  9338 ;;		 -> str(10), 
  9339 ;;  j               2    7[BANK0 ] int 
  9340 ;;  i               2    5[BANK0 ] int 
  9341 ;;  temp            2    3[BANK0 ] int 
  9342 ;; Return value:  Size  Location     Type
  9343 ;;		None               void
  9344 ;; Registers used:
  9345 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9351 ;;      Params:         2       0       0       0       0
  9352 ;;      Locals:         0       7       0       0       0
  9353 ;;      Temps:          0       3       0       0       0
  9354 ;;      Totals:         2      10       0       0       0
  9355 ;;Total ram usage:       12 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; Hardware stack levels required when called:    1
  9358 ;; This function calls:
  9359 ;;		Nothing
  9360 ;; This function is called by:
  9361 ;;		_intToStr
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           psect	text1267
  9365                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\string.c"
  9366                           	line	9
  9367                           	global	__size_of_reverse
  9368  0051                     	__size_of_reverse	equ	__end_of_reverse-_reverse
  9369                           	
  9370  0951                     _reverse:	
  9371                           	opt	stack 4
  9372                           ; Regs used in _reverse: [wreg-fsr0h+status,2+status,0]
  9373                           ;reverse@str stored from wreg
  9374  0951  1283               	bcf	status, 5	;RP0=0, select bank0
  9375  0952  1303               	bcf	status, 6	;RP1=0, select bank0
  9376  0953  00A9               	movwf	(reverse@str)
  9377                           	line	10
  9378                           	
  9379  0954                     l6501:	
  9380                           ;string.c: 10: int i=0, j=len-1, temp;
  9381  0954  01A5               	clrf	(reverse@i)
  9382  0955  01A6               	clrf	(reverse@i+1)
  9383                           	
  9384  0956                     l6503:	
  9385  0956  0874               	movf	(reverse@len),w
  9386  0957  3EFF               	addlw	low(-1)
  9387  0958  00A7               	movwf	(reverse@j)
  9388  0959  0875               	movf	(reverse@len+1),w
  9389  095A  1803               	skipnc
  9390  095B  3E01               	addlw	1
  9391  095C  3EFF               	addlw	high(-1)
  9392  095D  00A8               	movwf	1+(reverse@j)
  9393                           	line	11
  9394                           ;string.c: 11: while (i<j)
  9395  095E  2992               	goto	l6511
  9396                           	
  9397  095F                     l2160:	
  9398                           	line	13
  9399                           	
  9400  095F                     l6505:	
  9401                           ;string.c: 12: {
  9402                           ;string.c: 13: temp = str[i];
  9403  095F  1283               	bcf	status, 5	;RP0=0, select bank0
  9404  0960  1303               	bcf	status, 6	;RP1=0, select bank0
  9405  0961  0825               	movf	(reverse@i),w
  9406  0962  0729               	addwf	(reverse@str),w
  9407  0963  00A0               	movwf	(??_reverse+0)+0
  9408  0964  0820               	movf	0+(??_reverse+0)+0,w
  9409  0965  0084               	movwf	fsr0
  9410  0966  1383               	bcf	status, 7	;select IRP bank0
  9411  0967  0800               	movf	indf,w
  9412  0968  00A1               	movwf	(??_reverse+1)+0
  9413  0969  01A2               	clrf	(??_reverse+1)+0+1
  9414  096A  0821               	movf	0+(??_reverse+1)+0,w
  9415  096B  00A3               	movwf	(reverse@temp)
  9416  096C  0822               	movf	1+(??_reverse+1)+0,w
  9417  096D  00A4               	movwf	(reverse@temp+1)
  9418                           	line	14
  9419                           ;string.c: 14: str[i] = str[j];
  9420  096E  0827               	movf	(reverse@j),w
  9421  096F  0729               	addwf	(reverse@str),w
  9422  0970  00A0               	movwf	(??_reverse+0)+0
  9423  0971  0820               	movf	0+(??_reverse+0)+0,w
  9424  0972  0084               	movwf	fsr0
  9425  0973  0800               	movf	indf,w
  9426  0974  00A1               	movwf	(??_reverse+1)+0
  9427  0975  0825               	movf	(reverse@i),w
  9428  0976  0729               	addwf	(reverse@str),w
  9429  0977  00A2               	movwf	(??_reverse+2)+0
  9430  0978  0822               	movf	0+(??_reverse+2)+0,w
  9431  0979  0084               	movwf	fsr0
  9432  097A  0821               	movf	(??_reverse+1)+0,w
  9433  097B  0080               	movwf	indf
  9434                           	line	15
  9435                           ;string.c: 15: str[j] = temp;
  9436  097C  0823               	movf	(reverse@temp),w
  9437  097D  00A0               	movwf	(??_reverse+0)+0
  9438  097E  0827               	movf	(reverse@j),w
  9439  097F  0729               	addwf	(reverse@str),w
  9440  0980  00A1               	movwf	(??_reverse+1)+0
  9441  0981  0821               	movf	0+(??_reverse+1)+0,w
  9442  0982  0084               	movwf	fsr0
  9443  0983  0820               	movf	(??_reverse+0)+0,w
  9444  0984  0080               	movwf	indf
  9445                           	line	16
  9446                           	
  9447  0985                     l6507:	
  9448                           ;string.c: 16: i++; j--;
  9449  0985  3001               	movlw	low(01h)
  9450  0986  07A5               	addwf	(reverse@i),f
  9451  0987  1803               	skipnc
  9452  0988  0AA6               	incf	(reverse@i+1),f
  9453  0989  3000               	movlw	high(01h)
  9454  098A  07A6               	addwf	(reverse@i+1),f
  9455                           	
  9456  098B                     l6509:	
  9457  098B  30FF               	movlw	low(-1)
  9458  098C  07A7               	addwf	(reverse@j),f
  9459  098D  1803               	skipnc
  9460  098E  0AA8               	incf	(reverse@j+1),f
  9461  098F  30FF               	movlw	high(-1)
  9462  0990  07A8               	addwf	(reverse@j+1),f
  9463  0991  2992               	goto	l6511
  9464                           	line	17
  9465                           	
  9466  0992                     l2159:	
  9467                           	line	11
  9468                           	
  9469  0992                     l6511:	
  9470  0992  0826               	movf	(reverse@i+1),w
  9471  0993  3A80               	xorlw	80h
  9472  0994  00A0               	movwf	(??_reverse+0)+0
  9473  0995  0828               	movf	(reverse@j+1),w
  9474  0996  3A80               	xorlw	80h
  9475  0997  0220               	subwf	(??_reverse+0)+0,w
  9476  0998  1D03               	skipz
  9477  0999  299C               	goto	u4205
  9478  099A  0827               	movf	(reverse@j),w
  9479  099B  0225               	subwf	(reverse@i),w
  9480  099C                     u4205:
  9481                           
  9482  099C  1C03               	skipc
  9483  099D  299F               	goto	u4201
  9484  099E  29A0               	goto	u4200
  9485  099F                     u4201:
  9486  099F  295F               	goto	l6505
  9487  09A0                     u4200:
  9488  09A0  29A1               	goto	l2162
  9489                           	
  9490  09A1                     l2161:	
  9491                           	line	18
  9492                           	
  9493  09A1                     l2162:	
  9494  09A1  0008               	return
  9495                           	opt stack 0
  9496                           GLOBAL	__end_of_reverse
  9497  09A2                     	__end_of_reverse:
  9498 ;; =============== function _reverse ends ============
  9499                           
  9500                           	signat	_reverse,8312
  9501                           	global	_lcd_write
  9502                           psect	text1268,local,class=CODE,delta=2
  9503                           global __ptext1268
  9504  166E                     __ptext1268:
  9505                           
  9506 ;; *************** function _lcd_write *****************
  9507 ;; Defined at:
  9508 ;;		line 23 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \lcd.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;  c               1    wreg     unsigned char 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  c               1    1[BANK0 ] unsigned char 
  9513 ;;  _dcnt           1    0[BANK0 ] unsigned char 
  9514 ;; Return value:  Size  Location     Type
  9515 ;;		None               void
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9523 ;;      Params:         0       0       0       0       0
  9524 ;;      Locals:         0       2       0       0       0
  9525 ;;      Temps:          1       0       0       0       0
  9526 ;;      Totals:         1       2       0       0       0
  9527 ;;Total ram usage:        3 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_lcd_clear
  9534 ;;		_lcd_puts
  9535 ;;		_lcd_goto
  9536 ;;		_lcd_init
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           psect	text1268
  9540                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\lcd.c"
  9541                           	line	23
  9542                           	global	__size_of_lcd_write
  9543  0025                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  9544                           	
  9545  166E                     _lcd_write:	
  9546                           	opt	stack 5
  9547                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  9548                           ;lcd_write@c stored from wreg
  9549  166E  1283               	bcf	status, 5	;RP0=0, select bank0
  9550  166F  1303               	bcf	status, 6	;RP1=0, select bank0
  9551  1670  00A1               	movwf	(lcd_write@c)
  9552                           	line	24
  9553                           	
  9554  1671                     l6487:	
  9555                           ;lcd.c: 24: PORTD = (PORTD & 0x0F) | (c);
  9556  1671  0808               	movf	(8),w
  9557  1672  390F               	andlw	0Fh
  9558  1673  0421               	iorwf	(lcd_write@c),w
  9559  1674  0088               	movwf	(8)	;volatile
  9560                           	line	25
  9561                           	
  9562  1675                     l6489:	
  9563                           ;lcd.c: 25: ((RE1 = 1),(RE1=0));
  9564  1675  1489               	bsf	(73/8),(73)&7
  9565                           	
  9566  1676                     l6491:	
  9567  1676  1089               	bcf	(73/8),(73)&7
  9568                           	line	26
  9569                           ;lcd.c: 26: PORTD = (PORTD & 0x0F) | (c << 4);
  9570  1677  0821               	movf	(lcd_write@c),w
  9571  1678  00F4               	movwf	(??_lcd_write+0)+0
  9572  1679  3004               	movlw	04h
  9573  167A                     u4185:
  9574  167A  1003               	clrc
  9575  167B  0DF4               	rlf	(??_lcd_write+0)+0,f
  9576  167C  3EFF               	addlw	-1
  9577  167D  1D03               	skipz
  9578  167E  2E7A               	goto	u4185
  9579  167F  0808               	movf	(8),w
  9580  1680  390F               	andlw	0Fh
  9581  1681  0474               	iorwf	0+(??_lcd_write+0)+0,w
  9582  1682  0088               	movwf	(8)	;volatile
  9583                           	line	27
  9584                           	
  9585  1683                     l6493:	
  9586                           ;lcd.c: 27: ((RE1 = 1),(RE1=0));
  9587  1683  1489               	bsf	(73/8),(73)&7
  9588                           	
  9589  1684                     l6495:	
  9590  1684  1089               	bcf	(73/8),(73)&7
  9591                           	line	28
  9592                           	
  9593  1685                     l6497:	
  9594                           ;lcd.c: 28: { unsigned char _dcnt; _dcnt = (40)/((12*1000L)/(4*1000L))|1; while(--_dcnt 
                                 != 0) continue; };
  9595  1685  300D               	movlw	(0Dh)
  9596  1686  00F4               	movwf	(??_lcd_write+0)+0
  9597  1687  0874               	movf	(??_lcd_write+0)+0,w
  9598  1688  00A0               	movwf	(lcd_write@_dcnt)
  9599  1689  2E8B               	goto	l6499
  9600                           	
  9601  168A                     l1443:	
  9602  168A  2E8B               	goto	l6499
  9603                           	
  9604  168B                     l1442:	
  9605                           	
  9606  168B                     l6499:	
  9607  168B  3001               	movlw	low(01h)
  9608  168C  02A0               	subwf	(lcd_write@_dcnt),f
  9609  168D  1D03               	btfss	status,2
  9610  168E  2E90               	goto	u4191
  9611  168F  2E91               	goto	u4190
  9612  1690                     u4191:
  9613  1690  2E8B               	goto	l6499
  9614  1691                     u4190:
  9615  1691  2E92               	goto	l1445
  9616                           	
  9617  1692                     l1444:	
  9618                           	line	29
  9619                           	
  9620  1692                     l1445:	
  9621  1692  0008               	return
  9622                           	opt stack 0
  9623                           GLOBAL	__end_of_lcd_write
  9624  1693                     	__end_of_lcd_write:
  9625 ;; =============== function _lcd_write ends ============
  9626                           
  9627                           	signat	_lcd_write,4216
  9628                           	global	_init_a2d
  9629                           psect	text1269,local,class=CODE,delta=2
  9630                           global __ptext1269
  9631  15B6                     __ptext1269:
  9632                           
  9633 ;; *************** function _init_a2d *****************
  9634 ;; Defined at:
  9635 ;;		line 98 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \capture.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;		None               void
  9642 ;; Registers used:
  9643 ;;		wreg
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9649 ;;      Params:         0       0       0       0       0
  9650 ;;      Locals:         0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0
  9652 ;;      Totals:         0       0       0       0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    1
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_main
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           psect	text1269
  9663                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\capture.c"
  9664                           	line	98
  9665                           	global	__size_of_init_a2d
  9666  000C                     	__size_of_init_a2d	equ	__end_of_init_a2d-_init_a2d
  9667                           	
  9668  15B6                     _init_a2d:	
  9669                           	opt	stack 6
  9670                           ; Regs used in _init_a2d: [wreg]
  9671                           	line	99
  9672                           	
  9673  15B6                     l5517:	
  9674                           ;capture.c: 99: ADCON0 = 0x41;
  9675  15B6  3041               	movlw	(041h)
  9676  15B7  1283               	bcf	status, 5	;RP0=0, select bank0
  9677  15B8  1303               	bcf	status, 6	;RP1=0, select bank0
  9678  15B9  009F               	movwf	(31)	;volatile
  9679                           	line	100
  9680                           ;capture.c: 100: ADCON1 = 0x0E;
  9681  15BA  300E               	movlw	(0Eh)
  9682  15BB  1683               	bsf	status, 5	;RP0=1, select bank1
  9683  15BC  1303               	bcf	status, 6	;RP1=0, select bank1
  9684  15BD  009F               	movwf	(159)^080h	;volatile
  9685                           	line	101
  9686                           	
  9687  15BE                     l5519:	
  9688                           ;capture.c: 101: ADON=1;
  9689  15BE  1283               	bcf	status, 5	;RP0=0, select bank0
  9690  15BF  1303               	bcf	status, 6	;RP1=0, select bank0
  9691  15C0  141F               	bsf	(248/8),(248)&7
  9692                           	line	102
  9693                           	
  9694  15C1                     l726:	
  9695  15C1  0008               	return
  9696                           	opt stack 0
  9697                           GLOBAL	__end_of_init_a2d
  9698  15C2                     	__end_of_init_a2d:
  9699 ;; =============== function _init_a2d ends ============
  9700                           
  9701                           	signat	_init_a2d,88
  9702                           	global	_DelayMs
  9703                           psect	text1270,local,class=CODE,delta=2
  9704                           global __ptext1270
  9705  164B                     __ptext1270:
  9706                           
  9707 ;; *************** function _DelayMs *****************
  9708 ;; Defined at:
  9709 ;;		line 11 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 2
       \delay.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  cnt             1    wreg     unsigned char 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  cnt             1    0[BANK0 ] unsigned char 
  9714 ;;  _dcnt           1    2[BANK0 ] unsigned char 
  9715 ;;  i               1    1[BANK0 ] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;		None               void
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9725 ;;      Params:         0       0       0       0       0
  9726 ;;      Locals:         0       3       0       0       0
  9727 ;;      Temps:          1       0       0       0       0
  9728 ;;      Totals:         1       3       0       0       0
  9729 ;;Total ram usage:        4 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    1
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_main
  9736 ;;		_read_a2d
  9737 ;;		_read_a2d2
  9738 ;;		_lcd_clear
  9739 ;;		_lcd_init
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           psect	text1270
  9743                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\delay.c"
  9744                           	line	11
  9745                           	global	__size_of_DelayMs
  9746  0023                     	__size_of_DelayMs	equ	__end_of_DelayMs-_DelayMs
  9747                           	
  9748  164B                     _DelayMs:	
  9749                           	opt	stack 5
  9750                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  9751                           ;DelayMs@cnt stored from wreg
  9752  164B  1283               	bcf	status, 5	;RP0=0, select bank0
  9753  164C  1303               	bcf	status, 6	;RP1=0, select bank0
  9754  164D  00A0               	movwf	(DelayMs@cnt)
  9755                           	line	20
  9756                           ;delay.c: 19: unsigned char i;
  9757                           ;delay.c: 20: do {
  9758                           	
  9759  164E                     l748:	
  9760                           	line	21
  9761                           	
  9762  164E                     l6479:	
  9763                           ;delay.c: 21: i = 4;
  9764  164E  3004               	movlw	(04h)
  9765  164F  00F4               	movwf	(??_DelayMs+0)+0
  9766  1650  0874               	movf	(??_DelayMs+0)+0,w
  9767  1651  00A1               	movwf	(DelayMs@i)
  9768                           	line	22
  9769                           ;delay.c: 22: do {
  9770                           	
  9771  1652                     l749:	
  9772                           	line	23
  9773                           ;delay.c: 23: { unsigned char _dcnt; _dcnt = (250)/((12*1000L)/(4*1000L))|1; while(--_dc
                                 nt != 0) continue; };
  9774  1652  3053               	movlw	(053h)
  9775  1653  00F4               	movwf	(??_DelayMs+0)+0
  9776  1654  0874               	movf	(??_DelayMs+0)+0,w
  9777  1655  00A2               	movwf	(DelayMs@_dcnt)
  9778  1656  2E58               	goto	l6481
  9779                           	
  9780  1657                     l751:	
  9781  1657  2E58               	goto	l6481
  9782                           	
  9783  1658                     l750:	
  9784                           	
  9785  1658                     l6481:	
  9786  1658  3001               	movlw	low(01h)
  9787  1659  02A2               	subwf	(DelayMs@_dcnt),f
  9788  165A  1D03               	btfss	status,2
  9789  165B  2E5D               	goto	u4151
  9790  165C  2E5E               	goto	u4150
  9791  165D                     u4151:
  9792  165D  2E58               	goto	l6481
  9793  165E                     u4150:
  9794  165E  2E5F               	goto	l6483
  9795                           	
  9796  165F                     l752:	
  9797                           	line	24
  9798                           	
  9799  165F                     l6483:	
  9800                           ;delay.c: 24: } while(--i);
  9801  165F  3001               	movlw	low(01h)
  9802  1660  02A1               	subwf	(DelayMs@i),f
  9803  1661  1D03               	btfss	status,2
  9804  1662  2E64               	goto	u4161
  9805  1663  2E65               	goto	u4160
  9806  1664                     u4161:
  9807  1664  2E52               	goto	l749
  9808  1665                     u4160:
  9809  1665  2E66               	goto	l6485
  9810                           	
  9811  1666                     l753:	
  9812                           	line	25
  9813                           	
  9814  1666                     l6485:	
  9815                           ;delay.c: 25: } while(--cnt);
  9816  1666  3001               	movlw	low(01h)
  9817  1667  02A0               	subwf	(DelayMs@cnt),f
  9818  1668  1D03               	btfss	status,2
  9819  1669  2E6B               	goto	u4171
  9820  166A  2E6C               	goto	u4170
  9821  166B                     u4171:
  9822  166B  2E4E               	goto	l748
  9823  166C                     u4170:
  9824  166C  2E6D               	goto	l755
  9825                           	
  9826  166D                     l754:	
  9827                           	line	27
  9828                           	
  9829  166D                     l755:	
  9830  166D  0008               	return
  9831                           	opt stack 0
  9832                           GLOBAL	__end_of_DelayMs
  9833  166E                     	__end_of_DelayMs:
  9834 ;; =============== function _DelayMs ends ============
  9835                           
  9836                           	signat	_DelayMs,4216
  9837                           	global	_IntVector
  9838                           psect	text1271,local,class=CODE,delta=2
  9839                           global __ptext1271
  9840  1693                     __ptext1271:
  9841                           
  9842 ;; *************** function _IntVector *****************
  9843 ;; Defined at:
  9844 ;;		line 142 in file "C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiments and Codes\todo 
       2\capture.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;		None               void
  9851 ;; Registers used:
  9852 ;;		wreg
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9858 ;;      Params:         0       0       0       0       0
  9859 ;;      Locals:         0       0       0       0       0
  9860 ;;      Temps:          4       0       0       0       0
  9861 ;;      Totals:         4       0       0       0       0
  9862 ;;Total ram usage:        4 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		Interrupt level 1
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           psect	text1271
  9871                           	file	"C:\Users\abdal\Desktop\University\Year 4\Second Semester\Real Time Lab\Experiment
                                 s and Codes\todo 2\capture.c"
  9872                           	line	142
  9873                           	global	__size_of_IntVector
  9874  0026                     	__size_of_IntVector	equ	__end_of_IntVector-_IntVector
  9875                           	
  9876  1693                     _IntVector:	
  9877                           	opt	stack 1
  9878                           ; Regs used in _IntVector: [wreg]
  9879                           psect	intentry,class=CODE,delta=2
  9880                           global __pintentry
  9881  0004                     __pintentry:
  9882                           global interrupt_function
  9883  0004                     interrupt_function:
  9884                           	global saved_w
  9885  007E                     	saved_w	set	btemp+0
  9886  0004  00FE               	movwf	saved_w
  9887  0005  0E03               	swapf	status,w
  9888  0006  00F0               	movwf	(??_IntVector+0)
  9889  0007  0804               	movf	fsr0,w
  9890  0008  00F1               	movwf	(??_IntVector+1)
  9891  0009  080A               	movf	pclath,w
  9892  000A  00F2               	movwf	(??_IntVector+2)
  9893  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  9894  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  9895  000D  087F               	movf	btemp+1,w
  9896  000E  00F3               	movwf	(??_IntVector+3)
  9897  000F  160A  118A  2E93   	ljmp	_IntVector
  9898                           psect	text1271
  9899                           	line	143
  9900                           	
  9901  1693                     i1l5521:	
  9902                           ;capture.c: 143: if (T0IE && T0IF) {
  9903  1693  1E8B               	btfss	(93/8),(93)&7
  9904  1694  2E96               	goto	u275_21
  9905  1695  2E97               	goto	u275_20
  9906  1696                     u275_21:
  9907  1696  2EAD               	goto	i1l745
  9908  1697                     u275_20:
  9909                           	
  9910  1697                     i1l5523:	
  9911  1697  1D0B               	btfss	(90/8),(90)&7
  9912  1698  2E9A               	goto	u276_21
  9913  1699  2E9B               	goto	u276_20
  9914  169A                     u276_21:
  9915  169A  2EAD               	goto	i1l745
  9916  169B                     u276_20:
  9917                           	line	144
  9918                           	
  9919  169B                     i1l5525:	
  9920                           ;capture.c: 144: T0IF = 0;
  9921  169B  110B               	bcf	(90/8),(90)&7
  9922                           	line	145
  9923                           	
  9924  169C                     i1l5527:	
  9925                           ;capture.c: 145: TMR0 =103;
  9926  169C  3067               	movlw	(067h)
  9927  169D  0081               	movwf	(1)	;volatile
  9928                           	line	148
  9929                           ;capture.c: 148: d1Counter++;
  9930  169E  3001               	movlw	low(01h)
  9931  169F  1683               	bsf	status, 5	;RP0=1, select bank1
  9932  16A0  1303               	bcf	status, 6	;RP1=0, select bank1
  9933  16A1  07D6               	addwf	(_d1Counter)^080h,f
  9934  16A2  1803               	skipnc
  9935  16A3  0AD7               	incf	(_d1Counter+1)^080h,f
  9936  16A4  3000               	movlw	high(01h)
  9937  16A5  07D7               	addwf	(_d1Counter+1)^080h,f
  9938                           	line	149
  9939                           ;capture.c: 149: d2Counter++;
  9940  16A6  3001               	movlw	low(01h)
  9941  16A7  07F6               	addwf	(_d2Counter),f
  9942  16A8  1803               	skipnc
  9943  16A9  0AF7               	incf	(_d2Counter+1),f
  9944  16AA  3000               	movlw	high(01h)
  9945  16AB  07F7               	addwf	(_d2Counter+1),f
  9946  16AC  2EAD               	goto	i1l745
  9947                           	line	150
  9948                           	
  9949  16AD                     i1l744:	
  9950                           	line	151
  9951                           	
  9952  16AD                     i1l745:	
  9953  16AD  0873               	movf	(??_IntVector+3),w
  9954  16AE  1283               	bcf	status, 5	;RP0=0, select bank0
  9955  16AF  00FF               	movwf	btemp+1
  9956  16B0  0872               	movf	(??_IntVector+2),w
  9957  16B1  008A               	movwf	pclath
  9958  16B2  0871               	movf	(??_IntVector+1),w
  9959  16B3  0084               	movwf	fsr0
  9960  16B4  0E70               	swapf	(??_IntVector+0)^0FFFFFF80h,w
  9961  16B5  0083               	movwf	status
  9962  16B6  0EFE               	swapf	saved_w,f
  9963  16B7  0E7E               	swapf	saved_w,w
  9964  16B8  0009               	retfie
  9965                           	opt stack 0
  9966                           GLOBAL	__end_of_IntVector
  9967  16B9                     	__end_of_IntVector:
  9968 ;; =============== function _IntVector ends ============
  9969                           
  9970                           	signat	_IntVector,88
  9971                           psect	text1272,local,class=CODE,delta=2
  9972                           global __ptext1272
  9973  0000                     __ptext1272:
  9974                           	global	btemp
  9975  007E                     	btemp set 07Eh
  9976                           
  9977                           	DABS	1,126,2	;btemp
  9978                           	global	wtemp0
  9979  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 18 10:28:01 2022

         ___altoft@exp 0032                      _x 00D0                      pc 0002         ___bmul@product 0020  
        ___altoft@sign 0033                     _RD 0C60                     _WR 0C61                     _x2 00D3  
                   fsr 0004           ___ftadd@exp1 004B           ___ftadd@exp2 004A           ___ftadd@sign 0049  
                  l720 01BE                    l721 01C0                    l730 176C                    l722 01C1  
                  l731 1771                    l723 01C1                    l732 1780                    l740 17AA  
                  l741 17B9                    l717 005E                    l750 1658                    l726 15C1  
                  l718 0195                    l751 1657                    l719 01BF                    l752 165F  
                  l753 1666                    l729 176C                    l754 166D                    l738 17A5  
                  l755 166D                    l739 17A5                    l748 164E                    l749 1652  
                  _GIE 005F                    _RE0 0048                    _RE1 0049                    _RE2 004A  
                  _PR2 0092                    _exp 036B                    _log 0E3F                    _pow 01C4  
                  fsr0 0004                    _str 00DA                    indf 0000            lcd_goto@pos 0075  
         ___ftdiv@cntr 0032           ___ftdiv@sign 0037                   l3000 164A                   l3011 16F4  
                 l3012 170F                   l3103 08CE                   l2160 095F                   l3104 08DD  
                 l3112 1725                   l2161 09A1                   l3105 08CF                   l3113 1715  
                 l1442 168B                   l2162 09A1                   l3042 0A27                   l2170 07D7  
                 l3106 08E4                   l3114 172E                   l1443 168A                   l3043 0A51  
                 l1451 16D4                   l2171 07F3                   l3107 0900                   l3115 1747  
                 l1444 1692                   l3044 0A68                   l1452 16BD                   l3300 0B56  
                 l1445 1692                   l1453 16E3                   l2165 07B3                   l3301 0B09  
                 l3221 039F                   l3038 15CE                   l1470 09DA                   l1454 16E3  
                 l2166 0779                   l3302 0B5D                   l2174 062D                   l2159 0992  
                 l3039 15CF                   l1471 09E2                   l1463 07FF                   l2167 07BA  
                 l3303 0B64                   l3231 04A2                   l3223 03A8                   l2175 062D  
                 l1472 09FA                   l1448 15DF                   l2168 07CC                   l3240 0CA9  
                 l3224 03CF                   l2169 07BB                   l3225 0402                   l3217 037C  
                 l1466 09C1                   l3226 04D3                   l3218 04D3                   l1467 09C0  
                 l3251 0E64                   l3227 04B8                   l3219 03AA                   l1468 09C7  
                 l3236 0C4B                   l3252 0F11                   l3261 0881                   l1469 09DB  
                 l3237 0C41                   l3253 0E79                   l3229 049C                   l3262 08B3  
                 l3270 0D43                   l3238 0CB2                   l3239 0C55                   l3280 0D74  
                 l3272 0D24                   l3265 0CC4                   l3290 0AAB                   l3274 0D2D  
                 l3266 0D76                   l3291 0A95                   l3283 0A7F                   l3275 0D56  
                 l3267 0CF1                   l3292 0AB2                   l3268 0D75                   l3293 0ABE  
                 l3285 0A77                   l3269 0D57                   l3277 0D4B                   l3294 0AB3  
                 l3286 0AE5                   l3295 0AC2                   l3287 0A8D                   l3279 0D54  
                 l3296 0ACC                   l3288 0A80                   l3297 0AE5                   l3289 0A94  
                 l2921 065D                   l7001 0CC3                   l2922 0773                   l2931 06B6  
                 l2923 067A                   l7011 0CEF                   l7003 0CC4                   l2940 06ED  
                 l2932 06B7                   l2860 036A                   l2941 06EE                   l2933 06C5  
                 l2925 0679                   l7021 0D1A                   l7013 0CF0                   l7005 0CD5  
                 l7101 0CA9                   l2861 020E                   l2870 15FE                   l2942 06FC  
                 l2934 06B8                   l2926 0683                   l2862 02CE                   l2871 1608  
                 l2943 06EF                   l2935 06CC                   l2927 0688                   l2919 0665  
                 l7031 0D42                   l7023 0D1B                   l7015 0CF1                   l7007 0CE0  
                 l7103 0CB2                   l7111 0B5D                   l2863 029F                   l2872 160A  
                 l2944 0703                   l2928 06CD                   l2936 0704                   l2864 036A  
                 l2881 0949                   l2945 0719                   l2937 0704                   l2929 069D  
                 l7041 0D69                   l7033 0D44                   l7025 0D24                   l7017 0CFE  
                 l7009 0CE4                   l7113 0B64                   l7105 0AE6                   l7121 0E64  
                 l7201 0206                   l2882 091B                   l2946 072E                   l2938 06D4  
                 l2858 01FF                   l2883 090F                   l2891 17F8                   l2947 0757  
                 l2963 0D92                   l7027 0D2D                   l7035 0D4B                   l7019 0D02  
                 l7043 0D75                   l7051 175B                   l7107 0B09                   l7131 0EBC  
                 l7123 0E6D                   l7115 0E3F                   l7211 029E                   l7203 020D  
                 l2859 01F5                   l2884 0920                   l2892 17D2                   l2964 0E3E  
                 l2980 0FCC                   l5517 15B6                   l6501 0954                   l2869 15F5  
                 l2885 0921                   l2893 17C6                   l5701 15CB                   l2965 0DAB  
                 l2981 0FE3                   l2973 0F2D                   l7045 0D76                   l7037 0D55  
                 l7029 0D41                   l7053 176A                   l7061 178E                   l7109 0B56  
                 l7133 0ED7                   l7125 0E78                   l7117 0E56                   l7141 037B  
                 l7221 033D                   l7213 029F                   l7205 020E                   l7301 0101  
                 l2886 093A                   l2894 17D7                   l2990 0BF1                   l2966 0DF1  
                 l2974 0FFF                   l2958 1629                   l5519 15BE                   l6511 0992  
                 l6503 0956                   l2887 0948                   l2895 17D8                   l2991 0BDD  
                 l5703 15CE                   l2967 0E13                   l2975 0F46                   l7039 0D57  
                 l7055 1771                   l7047 1749                   l7063 1794                   l7071 160B  
                 l7135 0F11                   l7127 0E79                   l7119 0E63                   l7151 03A9  
                 l7143 037C                   l7223 0341                   l7215 02A6                   l7207 022D  
                 l7231 0573                   l7311 0181                   l7303 013A                   l2888 0950  
                 l2896 17E9                   l2992 0BEA                   l2984 0B82                   l2968 0E22  
                 l2976 0F86                   l6505 095F                   l6521 1602                   l6513 15F4  
                 l2897 17F7                   l6601 0AE0                   l2993 0BDE                   l2985 0C0A  
                 l5705 15CF                   l2977 0F9B                   l7057 1780                   l7049 1755  
                 l7065 17A3                   l7073 160F                   l7081 0C22                   l7129 0EB6  
                 l7161 03EA                   l7145 0391                   l7153 03AA                   l7137 036B  
                 l7225 0369                   l7209 0291                   l7217 02CE                   l7233 0579  
                 l7321 01A3                   l7313 018C                   l7305 014D                   l7241 0015  
                 l2898 17FF                   l2994 0BF0                   l2986 0BCD                   l2978 0FB2  
                 l6507 0985                   l6523 1608                   l6515 15F9                   l6531 090B  
                 l6603 0AE4                   l2995 0C01                   l2987 0BB9                   l6611 0B82  
                 l2979 0FB7                   l7067 17AA                   l7059 1782                   l7075 1629  
                 l7083 0C37                   l7091 0C4B                   l7171 0461                   l7163 03EE  
                 l7155 03C1                   l7147 0396                   l7139 0374                   l7219 02F7  
                 l7235 0583                   l7227 04D4                   l7323 01AC                   l7315 0190  
                 l7307 0158                   l7251 001D                   l7243 0018                   l2988 0BBA  
                 ?_exp 0066                   l6509 098B                   l6525 160A                   l6517 15FE  
                 l6541 0932                   l6533 090F                   l2989 0BCC                   l6621 0BA4  
                 l6613 0B94                   l6605 0B65                   l6701 0880                   l7069 17B9  
                 l7093 0C54                   l7085 0C40                   l7077 0C0B                   l7181 04B0  
                 l7173 048F                   l7165 0402                   l7157 03CE                   l7149 039F  
                 l7237 05B9                   l7229 0548                   l7325 01B7                   l7317 0195  
                 l7309 015E                   l7261 002C                   l7253 001E                   l7245 001A  
                 ?_log 0060                   l6519 1600                   l6551 0950                   l6543 0938  
                 l6535 0916                   l6527 0901                   l6623 0BA8                   l6631 0BCD  
                 l6615 0B95                   l6607 0B78                   l6471 0A65                   l6711 08B1  
                 l6703 0881                   l7095 0C55                   l7087 0C41                   l7079 0C1C  
                 l7183 04B7                   l7175 0494                   l7167 041B                   l7159 03CF  
                 l7191 01C7                   l7239 05F2                   l7319 01A0                   l7271 0031  
                 l7263 002D                   l7255 0021                   l7247 001B                   l6481 1658  
                 l6545 093A                   l6537 091B                   l6529 0905                   l6561 17D2  
                 l6553 17BA                   l6633 0BD3                   l6641 0BF1                   l6625 0BAF  
                 l6617 0B9B                   l6609 0B81                   l6473 0A67                   l6713 08B2  
                 l6705 0894                   l6801 0652                   l7097 0C8C                   l7089 0C4A  
                 l7185 04B8                   l7177 0495                   l7169 043B                   l7193 01CE  
                 l7281 004D                   l7273 0032                   l7265 002E                   l7257 0022  
                 l7249 001C                   l6483 165F                   l6491 1676                   l6547 0941  
                 l6539 0921                   l6563 17D8                   l6555 17C2                   l6571 17F8  
                 l6643 0BF5                   l6635 0BDC                   l6627 0BB8                   l6619 0BA2  
                 l6715 08B3                   l6707 08A0                   l6731 09B0                   l6723 09A2  
                 l6811 066F                   l6803 065D                   l7099 0CA8                   l7187 04D2  
                 l7179 049C                   l7195 01F1                   l7291 0069                   l7283 0052  
                 l7275 0035                   l7267 002F                   l7259 002B                   l6485 1666  
                 l6493 1683                   l6549 0949                   l6573 17FF                   l6565 17E2  
                 l6557 17C6                   l6581 0A7E                   l6645 0C01                   l6637 0BDE  
                 l6629 0BBA                   l6661 0A27                   l6709 08AD                   l6741 09C9  
                 l6733 09B1                   l6725 09A5                   l6821 0689                   l6813 067A  
                 l6805 0664                   l6901 0E1B                   l7197 01FE                   l7189 01C4  
                 l7293 006F                   l7285 0057                   l7277 0042                   l7269 0030  
                 l6479 164E                   l6495 1684                   l6487 1671                   l6567 17E9  
                 l6559 17CD                   l6591 0AA3                   l6583 0A80                   l6575 0A69  
                 l6647 0C0A                   l6639 0BEA                   l6671 0A63                   l6663 0A2B  
                 l6751 09DB                   l6743 09CF                   l6735 09B7                   l6727 09AB  
                 l6831 06B8                   l6823 068F                   l6815 067E                   l6807 0665  
                 l6903 0E22                   l6911 0F2C                   l7199 01FF                   l7295 0087  
                 l7287 005E                   l7279 0048                   l6497 1685                   l6489 1675  
                 l6569 17F0                   l6593 0AB3                   l6585 0A8D                   l6577 0A6F  
                 l6673 0A65                   l6665 0A51                   l6657 09FB                   l6753 09E2  
                 l6745 09D3                   l6737 09BA                   l6729 09AF                   l6761 07F8  
                 l6841 06E4                   l6833 06C5                   l6825 069D                   l6817 0682  
                 l6809 0669                   l6905 0E3E                   l6921 0F73                   l6913 0F2D  
                 l7297 00B8                   l7289 0064                   l6499 168B                   l6595 0ABE  
                 l6587 0A95                   l6579 0A77                   l5699 15C2                   l6675 0A68  
                 l6667 0A53                   l6659 0A01                   l6747 09D4                   l6739 09C1  
                 l6755 15D0                   l6763 16B9                   l6771 0774                   l6851 071D  
                 l6843 06EF                   l6827 06A7                   l6835 06CD                   l6819 0687  
                 l6931 0F86                   l6923 0F74                   l6915 0F3E                   l6907 0F12  
                 l7299 00D0                   l6597 0AC6                   l6589 0A99                   l6669 0A55  
                 l6749 09D5                   l6757 15D3                   l6765 16BD                   l6781 07BB  
                 l6773 0779                   l6861 0757                   l6853 072E                   l6845 06FC  
                 l6837 06D4                   l6829 06AD                   l6941 0FB2                   l6933 0F8A  
                 l6925 0F75                   l6917 0F45                   l6909 0F25                   l6599 0ACE  
                 l6695 0868                   l6759 07F5                   l6767 16CB                   l6791 07EC  
                 l6783 07C5                   l6775 0795                   l6863 0773                   l6855 073F  
                 l6847 0708                   l6839 06DE                   l6871 0D92                   l6951 0FDC  
                 l6943 0FB7                   l6935 0F9B                   l6927 0F7B                   l6919 0F46  
                 l6697 0871                   l6769 16D4                   l6793 07F3                   l6785 07CC  
                 l6777 079B                   l6857 0743                   l6849 0719                   l6881 0DB6  
                 l6873 0DA3                   l6865 0D77                   l6953 0FE3                   l6945 0FBB  
                 l6937 0FA3                   l6929 0F81                   l6961 16E4                   l6699 0879  
                 l6787 07D7                   l6779 07B3                   l6859 0753                   l6795 062E  
                 l6891 0DF1                   l6883 0DC8                   l6875 0DAA                   l6867 0D8A  
                 l6955 0FFF                   l6947 0FCC                   l6939 0FAB                   l6963 16EB  
                 l6971 08B7                   _ADON 00F8                   l6789 07E3                   l6797 0648  
                 l6893 0DF9                   l6885 0DDA                   l6877 0DAB                   l6869 0D91  
                 l6949 0FD4                   l6957 162B                   l6965 16F4                   l6981 08DD  
                 l6973 08BB                   l6799 064C                   l6895 0E07                   l6887 0DDE  
                 l6879 0DB1                   l6959 164A                   l6967 170F                   l6983 08E4  
                 l6975 08BF                   l6991 1725                   l6897 0E11                   l6889 0DE5  
                 l6985 0900                   l6977 08CA                   l6969 08B4                   l6993 172E  
                 l6899 0E13                   l6979 08CF                   l6995 1747                   l6987 1710  
                 l6989 1715                   l6997 0CB3                   ?_pow 00A0                   l6999 0CBC  
                 STR_1 0849                   STR_2 0858                   _T0IE 005D                   _T0IF 005A  
                 u4200 09A0                   u5000 0E07                   u4201 099F                   u5001 0E06  
                 u4210 15F9                   u3170 15CB                   u4211 15F8                   u3171 15CA  
                 u4220 1607                   u4300 17C2                   u5020 0E21                   u4205 099C  
                 u4221 1606                   u4301 17C1                   u5021 0E20                   u5005 0E03  
                 u4150 165E                   u4230 090B                   u5110 0FB1                   u5030 0F25  
                 u4151 165D                   u4231 090A                   u5015 0E14                   u5111 0FB0  
                 u5031 0F24                   u4160 1665                   u4320 17D6                   u5120 0FBB  
                 u5040 0F3E                   u5200 08E3                   u4161 1664                   u4321 17D5  
                 u5121 0FBA                   u5105 0FA4                   u5041 0F3D                   u5201 08E2  
                 u4170 166C                   u4250 091F                   u4330 17E2                   u4410 0AB1  
                 u5050 0F56                   u4171 166B                   u4251 091E                   u4331 17E1  
                 u4315 17C7                   u4411 0AB0                   u5131 0FC4                   u4500 0BAF  
                 u5132 0FCB                   u5060 0F68                   u5220 172D                   u5300 1770  
                 u4245 0910                   u4405 0AA4                   u4501 0BAE                   u5221 172C  
                 u5301 176F                   u4190 1691                   u4270 0932                   u4350 17F6  
                 u4430 0AC2                   u5070 0F8A                   u5230 0CBC                   u4191 1690  
                 u4271 0931                   u4351 17F5                   u4335 17DE                   u4431 0AC1  
                 u5071 0F89                   u5055 0F52                   u5215 1716                   u5231 0CBB  
                 u4440 0AC6                   u4360 0A6F                   u4520 0BCB                   u4600 0A2B  
                 u5160 0FE2                   u5320 17A9                   u5400 0374                   u4185 167A  
                 u4265 0922                   u4345 17EA                   u4441 0AC5                   u4425 0AB6  
                 u4521 0BCA                   u4601 0A2A                   u5161 0FE1                   u5145 0FCD  
                 u5081 0F93                   u5065 0F64                   u5321 17A8                   u5401 0373  
                 u4290 0947                   u4450 0AD7                   u4370 0A76                   u4530 0BD3  
                 u5082 0F9A                   u5170 16EB                   u5250 0CE4                   u5330 0C22  
                 u5410 0391                   u4291 0946                   u4275 092E                   u4371 0A75  
                 u4531 0BD2                   u4515 0BBB                   u4611 0A43                   u5155 0FD5  
                 u5171 16EA                   u5251 0CE3                   u5315 1799                   u5331 0C21  
                 u5411 0390                   _PEIE 005E                   u4460 0AE4                   u4620 0A63  
                 u4612 0A44                   u4700 07D6                   u5180 08BF                   u5260 0CFE  
                 u5340 0C37                   u5420 03C1                   u5500 0291                   u4285 093B  
                 u4621 0A62                   u4613 0A49                   u4701 07D5                   u5181 08BE  
                 u5261 0CFD                   u5245 0CCA                   u5341 0C36                   u5421 03C0  
                 u5501 0290                   u4390 0A93                   u4550 0BEF                   u4470 0B78  
                 u4614 0A4A                   u4710 064C                   u5270 0D19                   u5350 0C54  
                 u5430 03EE                   u5510 0341                   u4455 0AD3                   u4391 0A92  
                 u4551 0BEE                   u4471 0B77                   u5095 0F9C                   u5271 0D18  
                 u5351 0C53                   u4560 0BF5                   u4480 0B8D                   u4640 0871  
                 u4720 0652                   u5360 0C8C                   u5440 0493                   u5520 0579  
                 u4385 0A85                   u4545 0BE0                   u4625 0A5F                   u4641 0870  
                 u4705 07D2                   u4721 0651                   u5265 0CFA                   u5361 0C8B  
                 u5505 028D                   u5521 0578                   u4490 0BA8                   u4810 06AD  
                 u4730 065C                   u5370 0B5C                   u5450 04B0                   u5530 0181  
                 u4491 0BA7                   u4811 06AC                   u4731 065B                   u5195 08D0  
                 u5371 0B5B                   u5451 04AF                   u5531 0180                   u4580 0A01  
                 u4660 09C7                   u4900 0702                   u4820 06B5                   u4740 0669  
                 u5380 0E56                   u5460 01CE                   u5540 01AC                   u4485 0B89  
                 u4581 0A00                   u4661 09C6                   u4901 0701                   u4821 06B4  
                 u4805 069E                   u5285 0D5F                   u5381 0E55                   u5461 01CD  
                 u5541 01AB                   u4670 09E1                   u4910 0708                   u4750 066F  
                 u5390 0E6D                   u5470 01F1                   u4591 0A19                   u4655 0887  
                 u4671 09E0                   u4911 0707                   u4751 066E                   u5295 1760  
                 u5391 0E6C                   u5455 04AC                   u5471 01F0                   u4592 0A1A  
                 u4680 16E2                   u4920 071D                   u4840 06CB                   u4760 0679  
                 u5480 0206                   u4593 0A1F                   u4681 16E1                   u4921 071C  
                 u4841 06CA                   u4761 0678                   u5481 0205                   u4594 0A20  
                 u4690 07B9                   u4850 06D3                   u4770 0682                   u5490 022D  
                 u4691 07B8                   u4931 0738                   u4851 06D2                   u4835 06B9  
                 u4771 0681                   u5491 022C                   u4940 0743                   u4932 073F  
                 u4780 0687                   u4941 0742                   u4781 0686                   u4870 06E4  
                 u4790 069C                   u4950 0D8A                   u4871 06E3                   u4791 069B  
                 u4951 0D89                   u4880 06EC                   u4960 0DA3                   u4881 06EB  
                 u4865 06D5                   u4961 0DA2                   u4970 0DC1                   u4980 0DD3  
                 u4895 06F0                   u4975 0DBD                   u4985 0DCF                   u4995 0DF2  
                 _TMR0 0001                   _WREN 0C62                   _main 0015                   _ftoa 04D4  
         ___ftpack@arg 0020           ___ftpack@exp 0023                   _str2 00C6                   btemp 007E  
                 exp@x 0066                   log@x 0060                   pow@x 00A0                   pow@y 00A3  
                 start 0012        __end_of_DelayMs 166E      ___bmul@multiplier 0021           ___ftmul@cntr 003D  
      read_a2d@channel 0075           ___ftmul@sign 003E           ___fttol@exp1 002D                  ??_exp 0069  
                ??_log 0063           ___fttol@lval 0029                  ??_pow 00A6                  ?_main 0070  
                ?_ftoa 00AF                  _EEADR 010D        __end_of___ftadd 0774                  _CARRY 0018  
      __end_of___ftdiv 0E3F        __end_of___ftneg 15D0        __end_of___ftmul 1000        __end_of___ftsub 162A  
      __end_of___fttol 0C0B                  _T2CON 0012        __end_of___lwdiv 0951        __end_of___lwmod 1800  
                i1l744 16AD                  i1l745 16AD                  _TMR1H 000F                  _TMR1L 000E  
                _PORTC 0007                  _PORTD 0008                  _TRISA 0085                  _TRISC 0087  
                _TRISD 0088                  _TRISE 0089           ___lltoft@exp 0075                  _nRBPU 040F  
        ___awtoft@sign 002E                  _floor 0C0B                  _ldexp 0CB3                  _frexp 0868  
                _errno 0078          lcd_init@_dcnt 0023          ___ftpack@sign 0024                  _state 00D8  
                ftoa@i 00BC                  ftoa@n 00AF                  pclath 000A        __end_of_reverse 09A2  
                pow@yi 00AB                  status 0003                  wtemp0 007E            ldexp@newexp 004F  
         __end_of_main 01C4           __end_of_ftoa 062E                 ??_main 00C1          ___fttol@sign1 0028  
               ??_ftoa 00B5                 _ADCON0 001F                 _ADCON1 009F                 ?_floor 004C  
               ?_ldexp 004C                 ?_frexp 0020       __end_of___altoft 0901                 _ADRESH 001E  
               _EEDATA 010C                 _CCPR1L 0015                 _EECON1 018C                 _EECON2 018D  
     __end_of___awtoft 1710       __end_of___ftpack 0AE6       __end_of___lbtoft 164B       __end_of___lltoft 1748  
               _T1SYNC 0082                 i1l5521 1693                 i1l5523 1697                 i1l5525 169B  
               i1l5527 169C              ??_DelayMs 0074                 u275_20 1697                 u275_21 1696  
               u276_20 169B                 u276_21 169A                 _TMR1IE 0460                 _TMR1IF 0060  
               _TMR1CS 0081                 _TMR1ON 0080     __size_of_IntVector 0026            intToStr@str 0030  
     __end_of_lcd_init 09FB       __end_of_lcd_goto 0800                 ___bmul 15F1       __end_of_lcd_puts 16E4  
               ___ftge 09FB              ??___ftadd 0045              ??___ftdiv 002E              ??___ftneg 0074  
            ??___ftmul 0035              ??___ftsub 0076              ??___fttol 0024              ??___lwdiv 0074  
            ??___lwmod 0074       __end_of_init_a2d 15C2       __end_of_intToStr 07F4       __end_of_read_a2d 1781  
               clrloop 15AF                 floor@i 0050                 floor@x 004C                 exp@exp 006D  
___ftmul@f3_as_product 003A                 log@exp 0064                 saved_w 007E              ??_reverse 0020  
           ___altoft@c 002E             ___ftadd@f1 003F             ___ftadd@f2 0042             ___ftge@ff1 0020  
           ___ftge@ff2 0023           eval_poly@res 005D             ___ftdiv@f1 002B             ___ftdiv@f2 0028  
           ___ftdiv@f3 0033             ___ftneg@f1 0028             ___awtoft@c 002B             ___lbtoft@c 0074  
  ___bmul@multiplicand 0074             ___ftmul@f1 002F             ___ftmul@f2 0032             ___ftsub@f1 004F  
           ___ftsub@f2 004C             ___fttol@f1 0020         __pcstackCOMMON 0070             ___lltoft@c 0028  
        __end_of_floor 0CB3          __end_of_ldexp 0D77          __end_of_frexp 08B4      __end_of_IntVector 16B9  
   __size_of_lcd_clear 0010                ??_floor 004F     __size_of_lcd_write 0025                ??_ldexp 0051  
              ??_frexp 0074             __pbssBANK1 00C6     __size_of_eval_poly 007F     __size_of_read_a2d2 0039  
           __pmaintext 0015                ?___bmul 0074                ?___ftge 0020             __pintentry 0004  
              _CCP1CON 0017              ?___altoft 002E             __ptext1240 0E3F             __ptext1241 0AE6  
           __ptext1250 162A             __ptext1242 0C0B             __ptext1251 0F12             __ptext1243 160B  
           __ptext1260 09FB             __ptext1252 0D77             __ptext1244 1781             __ptext1261 15C2  
           __ptext1253 062E             __ptext1245 1748             __ptext1237 04D4             __ptext1270 164B  
           __ptext1262 0B65             __ptext1254 0774             __ptext1246 0CB3             __ptext1238 01C4  
           __ptext1271 1693             __ptext1263 0A69             __ptext1255 16B9             __ptext1247 1710  
           __ptext1239 036B             __ptext1272 0000             __ptext1264 17BA             __ptext1256 07F4  
           __ptext1248 08B4             __ptext1265 0901             __ptext1257 15D0             __ptext1249 16E4  
           __ptext1266 15F1             __ptext1258 09A2             __ptext1267 0951             __ptext1259 0868  
           __ptext1268 166E             __ptext1269 15B6              ?___awtoft 002B              ?___ftpack 0020  
            ?___lbtoft 0028              ?___lltoft 0028                _T1CKPS0 0084                _T1CKPS1 0085  
           _ldexp$3590 0053              ?_lcd_init 0070              ?_lcd_goto 0070              ?_lcd_puts 0022  
              _DelayMs 164B              ?_init_a2d 0070              ?_intToStr 002E              ?_read_a2d 002F  
    __end_of_lcd_clear 15E0        __size_of___bmul 001A        __size_of___ftge 006E                ___ftadd 062E  
              ___ftdiv 0D77      __end_of_lcd_write 1693                ___ftneg 15C2                ___ftmul 0F12  
              ___ftsub 160B                ___fttol 0B65                ___lwdiv 0901                ___lwmod 17BA  
           ??___altoft 0074             ??___awtoft 0074             ??___ftpack 0025             ??___lbtoft 002B  
    __end_of_eval_poly 0B65             ??___lltoft 0074      __end_of_read_a2d2 17BA     lcd_init@_dcnt_2131 0024  
         __size_of_exp 0169           __size_of_log 00D3           __size_of_pow 01A7                _reverse 0951  
           ??_lcd_init 0075             ??_lcd_goto 0075             ??_lcd_puts 0075   end_of_initialization 15ED  
              ftoa@res 00B2                exp@sign 006F             ??_init_a2d 0074             ??_intToStr 0033  
           ??_read_a2d 0032            reverse@temp 0023                pow@sign 00AA         lcd_write@_dcnt 0020  
            _d1Counter 00D6            ___ftdiv@exp 0036              _d2Counter 0076             lcd_write@c 0021  
          ___ftmul@exp 0039         __end_of___bmul 160B         __end_of___ftge 0A69           DelayMs@_dcnt 0022  
           floor@expon 0053    start_initialization 15E0             eval_poly@d 0059             eval_poly@n 005A  
           eval_poly@x 0056             ldexp@value 004C              _IntVector 1693            __end_of_exp 04D4  
          __end_of_log 0F12            __end_of_pow 036B             frexp@value 0020               ??___bmul 0075  
             ??___ftge 0026      __size_of___altoft 004D      __size_of___awtoft 002C      __size_of___ftpack 007D  
    __size_of___lbtoft 0021      __size_of___lltoft 0038            __pbssCOMMON 0076          __pcstackBANK0 0020  
        __pcstackBANK1 00A0             ?_IntVector 0070               ?_DelayMs 0070      __size_of_lcd_init 0059  
    __size_of_lcd_goto 000C      __size_of_lcd_puts 002B      __size_of_init_a2d 000C      __size_of_intToStr 0080  
    __size_of_read_a2d 0039       ___lwdiv@dividend 0022               ?___ftadd 003F              _ftoa$3820 00B7  
             ?___ftdiv 0028               ?___ftneg 0028               ?___ftmul 002F               ?___ftsub 004C  
             ?___fttol 0020               ?___lwdiv 0020               ?___lwmod 0020              _lcd_clear 15D0  
            __pstrings 0800              _lcd_write 166E              _eval_poly 0AE6               ?_reverse 0074  
            _read_a2d2 1781       ___lwdiv@quotient 0025         __size_of_floor 00A8         __size_of_ldexp 00C4  
       __size_of_frexp 004C      interrupt_function 0004               DelayMs@i 0021             reverse@len 0074  
           reverse@str 0029               _GO_nDONE 00FA             ?_lcd_clear 0070            __stringbase 080F  
           ?_lcd_write 0070             ?_eval_poly 0056              lcd_puts@s 0022            ??_IntVector 0070  
           ?_read_a2d2 002F              ftoa@fpart 00BE              ftoa@ipart 00BA       __size_of_DelayMs 0023  
            frexp@eptr 0023              intToStr@d 0031              intToStr@i 0035              intToStr@x 002E  
     __size_of___ftadd 0146       __size_of___ftdiv 00C8       __size_of___ftneg 000E               ___altoft 08B4  
     __size_of___ftmul 00EE       __size_of___ftsub 001F       __size_of___fttol 00A6       __size_of___lwdiv 0050  
     __size_of___lwmod 0046               ___awtoft 16E4               ___ftpack 0A69               ___lbtoft 162A  
             ___lltoft 1710               _exp$3544 006A        ___lwdiv@divisor 0020        ___lwdiv@counter 0024  
     __size_of_reverse 0051               _lcd_init 09A2               _lcd_goto 07F4               _lcd_puts 16B9  
             _pow$3821 00A7               _init_a2d 15B6               _intToStr 0774               _read_a2d 1748  
        __size_of_main 01AF          __size_of_ftoa 015A               clear_ram 15AE            ??_lcd_clear 0075  
             main@summ 00C3            ??_lcd_write 0074               exp@coeff 0810               log@coeff 082E  
           DelayMs@cnt 0020            ??_eval_poly 005C            ??_read_a2d2 0032               intlevel1 0000  
     ___lwmod@dividend 0022              stringcode 080A               reverse@i 0025               reverse@j 0027  
       ftoa@afterpoint 00B3             _OPTION_REG 0081        ___lwmod@divisor 0020        ___lwmod@counter 0075  
             stringdir 080A               stringtab 0800       read_a2d2@channel 0075  
